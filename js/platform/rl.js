var d=Object.defineProperty;var h=(n,t)=>d(n,"name",{value:t,configurable:!0});import{BasePlatform as m}from"./base.js";import _ from"../../lib/rl/base.js";import l from"../renderer/util/lineplot.js";import p from"./game/base.js";import c from"../renderer/rl.js";const o={},u={MD:["grid","cartpole","mountaincar","acrobot","pendulum","maze","blackjack","waterball","breaker"],GM:["reversi","draughts","gomoku"]};export default class f extends m{static{h(this,"RLPlatform")}constructor(t,e){super(t),this._type="",this._epoch=0,this._env=new _,this._game=null,this._is_updated_reward=!1,this._cumulativeReward=0,this._rewardHistory=[],this._renderer.forEach(r=>r.terminate()),this._renderer=[new c(t)],this._load_env().then(()=>e(this));const s=this.setting.task.configElement;s.appendChild(document.createTextNode("Environment"));const i=document.createElement("select");i.name="env",i.onchange=()=>{this._plotter&&this._plotter.terminate(),this.setting.rl.configElement.replaceChildren(),this._type=i.value,this.setting.vue.pushHistory(),this._load_env().then(()=>{this.setting.ml.refresh()})},i.appendChild(document.createElement("option"));for(const r of u[this.task]){const a=document.createElement("option");a.value=r,a.innerText=r,i.appendChild(a)}s.appendChild(i)}get params(){return{env:this._type}}set params(t){t.env&&this._type!==t.env&&(this._type=t.env,this._load_env().then(()=>{const e=this.setting.task.configElement.querySelector("[name=env]");e&&(e.value=this._type)}))}get epoch(){return this._epoch}get actions(){return this._env.actions}get states(){return this._env.states}get type(){return this._type}get env(){return this._env}set reward(t){this._env.reward=t}async _load_env(){if(this._env&&this._env.close(),o[this.type])this._env=new o[this.type](this._renderer[0].width,this._renderer[0].height),this.init();else{if(this.type!=="")return import(`../../lib/rl/${this.type}.js`).then(t=>{this._env=new t.default(this._renderer[0].width,this._renderer[0].height),o[this.type]=t.default,this.init()});this._env=new _}}cumulativeReward(t){return this._cumulativeReward}rewardHistory(t){return this._rewardHistory}init(){this._game&&(this._game.terminate(),this._game=null),this.task==="GM"&&this._type!==""&&(this._game=new p(this)),this._loss&&(this._loss.terminate(),this._loss=null),this._renderer.forEach(t=>t.init())}reset(...t){return this._epoch=0,this._agents&&this._agents.some((e,s)=>e!==t[s])&&(this._is_updated_reward=!1,this._rewardHistory=[],this._loss&&(this._loss.terminate(),this._loss=null)),this._game&&this._manager._modelname!==""?(this._game.terminate(),this._game=null):!this._game&&this._manager._modelname===""&&(this._game=new p(this)),this._agents=t,this._is_updated_reward&&this._rewardHistory.push(this._cumulativeReward),this._is_updated_reward=!1,this._cumulativeReward=0,this._plotter&&(this._plotter.printEpisode(),this._plotter.printStep(),this._plotter.plotRewards()),this._env.reset()}render(t){this._renderer.forEach(e=>e.render(t))}terminate(){this._plotter?.terminate(),this._game?.terminate(),this.setting.rl.configElement.replaceChildren(),this.setting.task.configElement.replaceChildren(),this._env.close(),this._loss&&(this._loss.terminate(),this._loss=null),super.terminate()}state(t){return this._env.state(t)}step(t,e){this._epoch++;const s=this._env.step(t,e);return this._is_updated_reward=!0,this._cumulativeReward+=s.reward,this._plotter&&(this._plotter.printEpisode(),this._plotter.printStep(),this._plotter.plotRewards()),s}test(t,e,s){return this._env.test(t,e,s)}sample_action(t){return this._env.sample_action(t)}plotRewards(t){this._plotter=new w(this,t),this._plotter.printEpisode(),this._plotter.printStep(),this._plotter.plotRewards()}plotLoss(t){this._loss||(this._loss=new l(this.setting.footer)),this._loss.add(t)}}class w{static{h(this,"RewardPlotter")}constructor(t,e){this._platform=t,this._r=e.select("span.reward_plotarea"),this._r.size()===0&&(this._r=e.append("span").classed("reward_plotarea",!0)),this._r.style("white-space","nowrap"),this._loss=null,this._plot_rewards_count=1e4,this._plot_smooth_window=20}terminate(){this._r.remove()}lastHistory(t=0){if(t<=0)return this._platform._rewardHistory;const e=this._platform._rewardHistory.length;return this._platform._rewardHistory.slice(Math.max(0,e-t),e)}printEpisode(){let t=this._r.select("span[name=episode]");t.size()===0&&(t=this._r.append("span").attr("name","episode")),t.text(" Episode: "+(this.lastHistory().length+1))}printStep(){let t=this._r.select("span[name=step]");t.size()===0&&(t=this._r.append("span").attr("name","step")),t.text(" Step: "+this._platform.epoch)}plotRewards(){this._loss||(this._loss=new l(this._r.node())),this._loss.setValues({"":this.lastHistory(this._plot_rewards_count)})}}
