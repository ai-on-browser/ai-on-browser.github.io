export default class MinmaxPlayer{constructor(t=5){this._d=t}set turn(t){this._turn=t}_minmax(t,n,s){if(0===n)return t.score(this._turn);const o=t.choices(s),r=t.nextTurn(s);if(0===o.length)return this._minmax(t,n-1,r);if(s===this._turn){let e=-1/0;for(const i of o){const o=t.copy();o.set(i,s);const c=this._minmax(o,n-1,r);c>e&&(e=c)}return e}{let e=1/0;for(const i of o){const o=t.copy();o.set(i,s);const c=this._minmax(o,n-1,r);c<e&&(e=c)}return e}}action(t){const n=t.choices(this._turn),s=t.nextTurn(this._turn);let o=[],r=-1/0;for(const e of n){const n=t.copy();n.set(e,this._turn);const i=this._minmax(n,this._d-1,s);i>r?(r=i,o=[e]):i===r&&o.push(e)}const e=o[Math.floor(Math.random()*o.length)];return new Promise((t=>setTimeout((()=>t(e)),100)))}close(){}}