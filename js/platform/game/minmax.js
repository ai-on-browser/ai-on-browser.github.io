export default class MinmaxPlayer{constructor(t=5){this._d=t}set turn(t){this._turn=t}_minmax(t,n,s){if(0===n)return t.score(this._turn);const o=t.choices(s),r=t.nextTurn(s);if(0===o.length)return this._minmax(t,n-1,r);if(s===this._turn){let c=-1/0;for(const i of o){const o=t.copy();o.set(i,s);const e=this._minmax(o,n-1,r);e>c&&(c=e)}return c}{let c=1/0;for(const i of o){const o=t.copy();o.set(i,s);const e=this._minmax(o,n-1,r);e<c&&(c=e)}return c}}action(t,n){const s=t.choices(this._turn),o=t.nextTurn(this._turn);let r=[],c=-1/0;for(const n of s){const s=t.copy();s.set(n,this._turn);const i=this._minmax(s,this._d-1,o);i>c?(c=i,r=[n]):i===c&&r.push(n)}const i=r[Math.floor(Math.random()*r.length)];setTimeout((()=>{n(i)}),100)}close(){}}