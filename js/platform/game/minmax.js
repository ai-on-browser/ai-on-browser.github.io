var u=Object.defineProperty;var m=(f,t)=>u(f,"name",{value:t,configurable:!0});export default class l{static{m(this,"MinmaxPlayer")}constructor(t=5){this._d=t}set turn(t){this._turn=t}_minmax(t,r,o){if(r===0)return t.score(this._turn);const i=t.choices(o),h=t.nextTurn(o);if(i.length===0)return this._minmax(t,r-1,h);if(o===this._turn){let s=-1/0;for(const n of i){const e=t.copy();e.set(n,o);const c=this._minmax(e,r-1,h);c>s&&(s=c)}return s}else{let s=1/0;for(const n of i){const e=t.copy();e.set(n,o);const c=this._minmax(e,r-1,h);c<s&&(s=c)}return s}}action(t){const r=t.choices(this._turn),o=t.nextTurn(this._turn);let i=[],h=-1/0;for(const n of r){const e=t.copy();e.set(n,this._turn);const c=this._minmax(e,this._d-1,o);c>h?(h=c,i=[n]):c===h&&i.push(n)}const s=i[Math.floor(Math.random()*i.length)];return new Promise(n=>setTimeout(()=>n(s),100))}close(){}}
