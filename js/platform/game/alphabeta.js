export default class AlphaBetaPlayer{constructor(t=5){this._d=t}set turn(t){this._turn=t}_alphabeta(t,s,n,o,e){if(0===s)return t.score(this._turn);const r=t.choices(n),a=t.nextTurn(n);if(0===r.length)return this._alphabeta(t,s-1,a,o,e);if(n===this._turn){for(const h of r){const r=t.copy();r.set(h,n);const c=this._alphabeta(r,s-1,a,o,e);if((o=Math.max(o,c))>=e)break}return o}for(const h of r){const r=t.copy();r.set(h,n);const c=this._alphabeta(r,s-1,a,o,e);if(o>=(e=Math.min(e,c)))break}return e}action(t){const s=t.choices(this._turn),n=t.nextTurn(this._turn);let o=[],e=-1/0;for(const r of s){const s=t.copy();s.set(r,this._turn);const a=this._alphabeta(s,this._d-1,n,-1/0,1/0);a>e?(e=a,o=[r]):a===e&&o.push(r)}const r=o[Math.floor(Math.random()*o.length)];return new Promise((t=>setTimeout((()=>t(r)),100)))}close(){}}