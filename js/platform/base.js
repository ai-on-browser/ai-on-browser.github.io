import ScatterRenderer from"../renderer/scatter.js";import Matrix from"../../lib/util/matrix.js";export class BasePlatform{constructor(t,e){this._manager=e,this._task=t,this._renderer=new ScatterRenderer(e)}get task(){return this._task}get setting(){return this._manager.setting}get svg(){return this._manager.setting.svg}get width(){return this._width||(this._width=document.querySelector("#plot-area svg").getBoundingClientRect().width),this._width}set width(t){document.querySelector("#plot-area").style.width=t-2+"px",this._width=null}get height(){return this._height||(this._height=document.querySelector("#plot-area svg").getBoundingClientRect().height),this._height}set height(t){document.querySelector("#plot-area").style.height=t-2+"px",this._height=null}get datas(){return this._manager._datas}get params(){return{}}set params(t){}get trainInput(){return null}get trainOutput(){return null}testInput(){return null}init(){}terminate(){this._renderer.terminate()}}export class DefaultPlatform extends BasePlatform{constructor(t,e){super(t,e);const s=this.setting.task.configElement;if("DR"===this._task||"FS"===this._task){s.appendChild(document.createTextNode("Target dimension"));const t=document.createElement("input");t.type="number",t.min=1,t.max=2,t.value=2,t.name="dimension",s.appendChild(t)}}get dimension(){const t=this.setting.task.configElement.querySelector("[name=dimension]");return t?+t.value:null}get trainInput(){return this.datas.dimension>0?this.datas.x:this.datas.index.map((t=>[t]))}get trainOutput(){return this.datas.y.map((t=>[t]))}set trainResult(t){if("CT"===this._task)t.forEach(((t,e)=>{this.datas.at(e).y=t}));else if("AD"===this._task){0===this._r_task.select(".tile").size()&&this._r_task.insert("g").classed("tile",!0).classed("anormal_point",!0),this._r_task.selectAll(".tile *").remove();const e=this._r_task.select(".anormal_point");t.forEach(((t,s)=>{if(t){new DataCircle(e,this.datas.points[s]).color=getCategoryColor(specialCategory.error)}}))}else if("DR"===this._task||"FS"===this._task||"TF"===this._task){0===this._r_task.select(".tile").size()&&this._r_task.insert("g",":first-child").classed("tile",!0).attr("opacity",.5);const e=this._r_task.select(".tile");e.selectAll("*").remove();const s=t[0].length;let i=t;1===s&&(i=i.map((t=>[t,0])));let r=[],n=[];for(let t=0;t<i[0].length;t++){const e=i.map((e=>e[t]));r.push(Math.max(...e)),n.push(Math.min(...e))}const a=this.datas.dimension<=1?[this.height,this.height]:[this.width,this.height],o=a.map(((t,e)=>(t-10)/(r[e]-n[e])));let h=Math.min(...o);const l=[5,5];for(let t=0;t<o.length;t++)(!isFinite(h)||o[t]>h)&&(isFinite(o[t])?l[t]+=(o[t]-h)*(r[t]-n[t])/2:l[t]=a[t]/2-n[t]);isFinite(h)||(h=0);let d=1/0,c=null;const _=Matrix.fromArray(this.datas.points.map((t=>t.at)));for(let t=0;t<(this.datas.dimension<=1?1:2**s);t++){const e=t.toString(2).padStart(s,"0").split("").map((t=>!!+t)),a=i.map((t=>t.map(((t,s)=>((e[s]?r[s]-t+n[s]:t)-n[s])*h+l[s])))),o=Matrix.fromArray(a);o.sub(_);const m=o.norm();m<d&&(d=m,c=a)}c.forEach(((t,s)=>{const i=new DataPoint(e,this.datas.dimension<=1?[this.datas.points[s].at[0],t[0]]:t,this.datas.points[s].category);i.radius=2;new DataLine(e,this.datas.points[s],i).setRemoveListener((()=>i.remove()))}))}else{if("GR"!==this._task)throw new Error(`Invalid task ${this._task}`);{0===this._r_task.select(".tile").size()&&this._r_task.insert("g",":first-child").classed("tile",!0).classed("generated",!0).attr("opacity",.5);const e=this._r_task.select(".tile.generated");e.selectAll("*").remove();let s=null;Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[0][0])&&([t,s]=t),t.forEach(((t,i)=>{new DataPoint(e,this._renderer.toPoint(t),s?s[i][0]:0).radius=2}))}}}testInput(t=10){const[e,s]=this._renderer.predict(t);return"CF"!==this._task&&"RG"!==this._task||e.push(...this.datas.dimension>0?this.datas.x:this.datas.index.map((t=>[t]))),this.__plot=s,e}testResult(t){if("AD"===this._task&&(t=t.map((t=>t?specialCategory.error:specialCategory.errorRate(0)))),"CF"===this._task||"RG"===this._task){const e=t.slice(t.length-this.datas.length),s=this.datas.y;if(t=t.slice(0,t.length-this.datas.length),"CF"===this._task){let t=0;for(let i=0;i<s.length;i++)s[i]===e[i]&&t++;this._getEvaluateElm().innerText="Accuracy:"+t/s.length}else if("RG"===this._task){let t=0;for(let i=0;i<s.length;i++)t+=(s[i]-e[i])**2;this._getEvaluateElm().innerText="RMSE:"+Math.sqrt(t/s.length)}}this.__plot(t,this._r_tile)}evaluate(t){"CF"!==this._task&&"RG"!==this._task||t(this.datas.x,(t=>{const e=this.datas.y;if("CF"===this._task){let s=0;for(let i=0;i<e.length;i++)e[i]===t[i]&&s++;this._getEvaluateElm().innerText="Accuracy:"+s/e.length}else if("RG"===this._task){let s=0;for(let i=0;i<e.length;i++)s+=(e[i]-t[i])**2;this._getEvaluateElm().innerText="RMSE:"+Math.sqrt(s/e.length)}}))}init(){this._r&&this._r.remove(),this._cur_dimension=this.setting.dimension;const t=1===this.datas?.dimension&&("RG"===this._task||"IN"===this._task);this._r=t?this.svg.append("g"):this.svg.insert("g",":first-child"),this._r.classed("default-render",!0),this._r_task=this._r.append("g").classed("tasked-render",!0),this._r_tile=this._r.append("g").classed("tile-render",!0).attr("opacity",t?1:.5),this.setting.footer.innerText="",this.svg.select("g.centroids").remove(),this._renderer.init(),this.render(),this._loss&&(this._loss.terminate(),this._loss=null,this.setting.footer.replaceChildren())}render(){this._renderer.render()}centroids(t,e,{line:s=!1,duration:i=0}={}){let r=this.svg.select("g.centroids");0===r.size()&&(r=this.svg.append("g").classed("centroids",!0),r.append("g").classed("c-line",!0),this._centroids_line=[],this._centroids=null);const n=[];this._centroids&&this._centroids.forEach((t=>{Array.isArray(e)&&e.indexOf(t.category)<0?t.remove():n.push(t)}));const a=this._renderer.points;for(let t=0;t<a.length;t++)this._centroids_line[t]?._from===a[t]&&s||(this._centroids_line[t]?.remove(),this._centroids_line[t]=null);this._centroids=t.map(((t,i)=>{let a=Array.isArray(e)?n.find((t=>t.category===e[i])):n[i];if(a||(a=new DataPoint(r,this._renderer.toPoint(t),Array.isArray(e)?e[i]:e),a.plotter(DataPointStarPlotter)),s){const t=this._renderer.points,s=this.datas.y;for(let n=0;n<t.length;n++)s[n]===e[i]&&(this._centroids_line[n]?this._centroids_line[n].to=a:this._centroids_line[n]=new DataLine(r.select(".c-line"),t[n],a))}return a})),Promise.resolve().then((()=>{this._centroids.forEach(((e,s)=>{e.move(this._renderer.toPoint(t[s]),i)}))}))}_getEvaluateElm(){if(this._loss){const t=this.setting.footer.querySelector("div.evaluate_result");if(!t){const t=document.createElement("div");return t.classList.add("evaluate_result"),this.setting.footer.insertBefore(t,this.setting.footer.firstChild),t}return t}return this.setting.footer}plotLoss(t){if(!this._loss){const t=this.setting.footer.innerText;this.setting.footer.innerText="",this._loss=new LossPlotter(this,this.setting.footer),this._getEvaluateElm().innerText=t}this._loss.add(t)}terminate(){this._r&&this._r.remove(),this.svg.select("g.centroids").remove(),this.svg.selectAll("g").style("visibility",null),this.setting.task.configElement.replaceChildren(),this.setting.footer.innerText="",super.terminate()}}export class LossPlotter{constructor(t,e){this._platform=t,this._r=e,this._item=null}add(t){if(!this._item)if("object"==typeof t){this._item={};for(const e of Object.keys(t))this._item[e]=new LossPlotterItem(this._platform,this._r),this._item[e].name=e}else this._item=new LossPlotterItem(this._platform,this._r);if("object"==typeof t)for(const e of Object.keys(t))this._item[e].add(t[e]);else this._item.add(t)}terminate(){if(this._item instanceof LossPlotterItem)this._item.terminate();else for(const t of Object.keys(this._item))this._item[t].terminate()}}class LossPlotterItem{constructor(t,e){this._platform=t,this._root=document.createElement("span"),this._root.style.display="inline-flex",this._root.style.flexDirection="column",e.appendChild(this._root),this._caption=document.createElement("span"),this._caption.innerText="loss",this._root.appendChild(this._caption),this._r=document.createElement("span"),this._r.style.whiteSpace="nowrap",this._root.appendChild(this._r),this._plot_count=1e4,this._print_count=10,this._plot_smooth_window=20,this._history=[]}set name(t){this._caption.innerText=t}add(t){this._history.push(t),this.plotRewards()}terminate(){this._root.remove()}lastHistory(t=0){if(t<=0)return this._history;const e=this._history.length;return this._history.slice(Math.max(0,e-t),e)}plotRewards(){const t=200;let e=this._r.querySelector("svg"),s=null,i=null,r=null,n=null,a=null;e?(s=e.querySelector("path[name=value]"),i=e.querySelector("path[name=smooth]"),r=e.querySelector("text.mintxt"),n=e.querySelector("text.maxtxt"),a=e.querySelector("text.avetxt")):(e=document.createElementNS("http://www.w3.org/2000/svg","svg"),e.setAttribute("width",400),e.setAttribute("height",50),this._r.appendChild(e),s=document.createElementNS("http://www.w3.org/2000/svg","path"),s.setAttribute("name","value"),s.setAttribute("stroke","black"),s.setAttribute("fill-opacity",0),e.appendChild(s),i=document.createElementNS("http://www.w3.org/2000/svg","path"),i.setAttribute("name","smooth"),i.setAttribute("stroke","green"),i.setAttribute("fill-opacity",0),e.appendChild(i),r=document.createElementNS("http://www.w3.org/2000/svg","text"),r.classList.add("mintxt"),r.setAttribute("x",t),r.setAttribute("y",50),r.setAttribute("fill","red"),r.setAttribute("font-weight","bold"),e.appendChild(r),n=document.createElementNS("http://www.w3.org/2000/svg","text"),n.classList.add("maxtxt"),n.setAttribute("x",t),n.setAttribute("y",12),n.setAttribute("fill","red"),n.setAttribute("font-weight","bold"),e.appendChild(n),a=document.createElementNS("http://www.w3.org/2000/svg","text"),a.classList.add("avetxt"),a.setAttribute("x",t),a.setAttribute("y",24),a.setAttribute("fill","blue"),a.setAttribute("font-weight","bold"),e.appendChild(a));const o=this.lastHistory(this._plot_count);if(0===o.length)return e.style.display="none",s.removeAttribute("d"),void i.removeAttribute("d");e.style.display=null;const h=Math.max(...o),l=Math.min(...o),d=t=>{if("number"!=typeof t)return t;const e=3-Math.floor(Math.log10(Math.abs(t)));return Math.round(t*10**e)/10**e};if(r.replaceChildren(),r.appendChild(document.createTextNode(`Min: ${d(l)}`)),n.replaceChildren(),n.appendChild(document.createTextNode(`Max: ${d(h)}`)),h===l)return;const c=(e,s)=>[t*e/(o.length-1),50*(1-(s-l)/(h-l))],_=o.map(((t,e)=>c(e,t))),m=d3.line().x((t=>t[0])).y((t=>t[1]));s.setAttribute("d",m(_));const u=[];for(let t=0;t<o.length-this._plot_smooth_window;t++){let e=0;for(let s=0;s<this._plot_smooth_window;s++)e+=o[t+s];u.push([t+this._plot_smooth_window,e/this._plot_smooth_window])}if(u.length>0){i.setAttribute("d",m(u.map((t=>c(...t)))));const t=document.createTextNode(`Mean(${this._plot_smooth_window}): ${d(u[u.length-1]?.[1])}`);a.replaceChildren(),a.appendChild(t)}}}