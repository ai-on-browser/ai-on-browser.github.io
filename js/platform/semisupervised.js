import{DefaultPlatform,LossPlotter}from"./base.js";export default class SemisupervisedPlatform extends DefaultPlatform{constructor(t,s){super(t,s);const e=this.setting.task.configElement;e.append("div").text("Unlabeled data category is '0' (black)."),e.append("span").text("Unlabeled Rate"),e.append("input").attr("type","number").attr("min",0).attr("max",1).attr("value",.9).attr("step",.1).attr("name","unlabeled-rate").on("change",(()=>{if(this.datas&&this._original_classes)for(let t=0;t<this._original_classes.length;t++)this.datas.at(t).y=this._original_classes[t];this._original_classes=null,this.init()}))}get trainInput(){return this.datas.x}get trainOutput(){return this.datas.y.map((t=>[t]))}set trainResult(t){this._r_task.selectAll("*").remove(),t.forEach(((t,s)=>{new DataCircle(this._r_task,this._renderer.points[s]).color=getCategoryColor(t)}))}testInput(t=10){const[s,e]=this._renderer.predict(t);return"SC"===this._task&&s.push(...this.datas.x),this.__plot=e,s}testResult(t){if("SC"===this._task){const s=t.slice(t.length-this.datas.length),e=this.datas.y;if(t=t.slice(0,t.length-this.datas.length),"SC"===this._task){let t=0;for(let i=0;i<e.length;i++)e[i]===s[i]&&t++;this._getEvaluateElm().text("Accuracy:"+t/e.length)}}this.__plot(t,this._r_tile)}init(){this._r?.remove(),this._r=this.svg.insert("g",":first-child").classed("default-render",!0),this._r_task=this._r.append("g").classed("tasked-render",!0),this._r_tile=this._r.append("g").classed("tile-render",!0).attr("opacity",.5),this.setting.footer.text(""),this.svg.select("g.centroids").remove();const t=+this.setting.task.configElement.select("[name=unlabeled-rate]").property("value");if(t>0&&!this._original_classes){this._original_classes=this.datas.y.concat();const s={};for(let t=0;t<this.datas.length;t++)s[this._original_classes[t]]||(s[this._original_classes[t]]=[]),s[this._original_classes[t]].push(t);for(const e of Object.keys(s)){let i=Math.floor(s[e].length*t);for(;i>0;){const t=Math.floor(Math.random()*s[e].length);this.datas.at(s[e][t]).y=null,s[e].splice(t,1),i--}}}this.render(),this._loss&&(this._loss.terminate(),this._loss=null,this.setting.footer.selectAll("*").remove())}render(){this._renderer.render()}_getEvaluateElm(){if(this._loss){const t=this.setting.footer.select("div.evaluate_result");return 0===t.size()?this.setting.footer.insert("div",":first-child").classed("evaluate_result",!0):t}return this.setting.footer}plotLoss(t){if(!this._loss){const t=this.setting.footer.text();this.setting.footer.text(""),this._loss=new LossPlotter(this,this.setting.footer),this._getEvaluateElm().text(t)}this._loss.add(t)}terminate(){if(this.datas&&this._original_classes)for(let t=0;t<this._original_classes.length;t++)this.datas.at(t).y=this._original_classes[t];this._r?.remove(),this.svg.select("g.centroids").remove(),this.svg.selectAll("g").style("visibility",null);this.setting.task.configElement.selectAll("*").remove(),this.setting.footer.text(""),super.terminate()}}