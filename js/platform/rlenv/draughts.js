import DraughtsRLEnvironment from"../../../lib/rl/draughts.js";import{Game}from"../game/base.js";export default class DraughtsRenderer extends DraughtsRLEnvironment{constructor(t){super(),this._platform=t,this._game=new Draughts(this),this._org_width=this._platform.width,this._org_height=this._platform.height}init(t){this._platform.width=500,this._platform.height=500;const r=this._platform.width,e=this._platform.height,i=r/this._size[1],h=e/this._size[0];this._cells=[];for(let r=0;r<this._size[0];r++){this._cells[r]=[];for(let e=0;e<this._size[1];e++)this._cells[r][e]=t.append("g"),this._cells[r][e].append("rect").attr("x",e*i).attr("y",r*h).attr("width",i).attr("height",h).attr("fill",(r+e)%2==0?"#aa9977":"#eeddcc").attr("stroke","#333333").attr("stroke-width","1")}}render(t){const r=this._platform._grid();r.reset();for(let t=0;t<this._size[0];t++)for(let e=0;e<this._size[1];e++){if(this._board.at([t,e])===DraughtsRLEnvironment.EMPTY)continue;const i=r.gridSize[1],h=r.gridSize[0],s=r.at(t,e).append("circle").attr("cx",i/2).attr("cy",h/2).attr("r",.4*Math.min(i,h)).attr("stroke","black").attr("stroke-width","1");this._board.at([t,e])&DraughtsRLEnvironment.WHITE?s.attr("fill","white"):this._board.at([t,e])&DraughtsRLEnvironment.RED&&s.attr("fill","red"),this._board.at([t,e])&DraughtsRLEnvironment.KING&&r.at(t,e).append("text").attr("x",i/2+"px").attr("y",h/2+"px").style("transform","translate(-0.4em, 0.3em)").text("K")}}game(...t){return t[0]||(t[0]=new ManualPlayer(this)),t[1]||(t[1]=new ManualPlayer(this)),t[0].turn=DraughtsRLEnvironment.RED,t[1].turn=DraughtsRLEnvironment.WHITE,this._game.players=t,this._game}close(){this._platform.width=this._org_width,this._platform.height=this._org_height}}class Draughts extends Game{constructor(t){super(t),this._board=t._board,this.turns=[DraughtsRLEnvironment.RED,DraughtsRLEnvironment.WHITE]}_showResult(t){t.append("tspan").attr("x","0em").attr("y","0em").text(this._board.winner===DraughtsRLEnvironment.RED?"RED WIN":"WHITE WIN")}}class ManualPlayer{constructor(t){this._turn=null,this._env=t,this._obj=null}set turn(t){this._turn=t}action(t,r){const e=this._env._platform.width,i=this._env._platform.height,h=e/t.size[1],s=i/t.size[0],a=t.choices(this._turn);this._obj=this._env._platform.svg.append("g"),this._check=[];for(let e=0;e<t.size[0];e++){this._check[e]=[];for(let i=0;i<t.size[1];i++)if(!((e+i)%2>0)){this._check[e][i]=this._obj.append("rect").attr("x",h*i).attr("y",s*e).attr("width",h).attr("height",s).attr("fill","rgba(255, 255, 0, 0.5)").attr("opacity",0);for(let h=0;h<a.length;h++)a[h].from[0]===e&&a[h].from[1]===i&&this._check[e][i].attr("opacity",1).on("click",((e,i)=>()=>{this.nextPath(t,a.filter((t=>t.from[0]===e&&t.from[1]===i)),r)})(e,i))}}}nextPath(t,r,e,i=0){for(let t=0;t<this._check.length;t++)for(let r=0;r<this._check[t].length;r++)this._check[t][r]&&this._check[t][r].attr("opacity",0).on("click",null);for(let h=0;h<r.length;h++)this._check[r[h].path[i][0]][r[h].path[i][1]].attr("opacity",1).on("click",(h=>()=>{r[h].path.length===i+1?(e(r[h]),this._obj.remove(),this._obj=null):this.nextPath(t,r.filter((t=>t.path[i][0]===r[h].path[i][0]&&t.path[i][1]===r[h].path[i][1])),e,i+1)})(h))}close(){this._obj&&this._obj.remove()}}