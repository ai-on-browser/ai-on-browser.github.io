import GomokuRLEnvironment from"../../../lib/rl/gomoku.js";import{Game}from"../game/base.js";export default class GomokuRenderer extends GomokuRLEnvironment{constructor(t){super(),this._platform=t,this._game=new Gomoku(this),this._org_width=this._platform.width,this._org_height=this._platform.height}init(t){this._platform.width=500,this._platform.height=500;const o=this._platform.width,e=this._platform.height,i=o/this._size[1],r=e/this._size[0];this._cells=[];for(let o=0;o<this._size[0];o++){this._cells[o]=[];for(let e=0;e<this._size[1];e++)this._cells[o][e]=t.append("g"),this._cells[o][e].append("rect").attr("x",e*i).attr("y",o*r).attr("width",i).attr("height",r).attr("fill","#eeddcc").attr("stroke","#333333").attr("stroke-width","1")}}render(t){const o=this._platform._grid();o.reset();for(let t=0;t<this._cells.length;t++)for(let e=0;e<this._cells[t].length;e++){if(this._board.at([t,e])===GomokuRLEnvironment.EMPTY)continue;const i=this._cells[t][e].select("rect"),r=+i.attr("width"),s=+i.attr("height"),h=o.at(t,e).append("circle").attr("cx",r/2).attr("cy",s/2).attr("r",.4*Math.min(r,s)).attr("stroke","black").attr("stroke-width","1");this._board.at([t,e])===GomokuRLEnvironment.WHITE?h.attr("fill","white"):this._board.at([t,e])===GomokuRLEnvironment.BLACK&&h.attr("fill","black")}}game(...t){return t[0]||(t[0]=new ManualPlayer(this)),t[1]||(t[1]=new ManualPlayer(this)),t[0].turn=GomokuRLEnvironment.BLACK,t[1].turn=GomokuRLEnvironment.WHITE,this._game.players=t,this._game}close(){this._platform.width=this._org_width,this._platform.height=this._org_height}}class Gomoku extends Game{constructor(t){super(t),this._board=t._board,this.turns=[GomokuRLEnvironment.BLACK,GomokuRLEnvironment.WHITE]}_showResult(t){const o=this._board.winner;t.append("tspan").attr("x","0em").attr("y","0em").text(o===GomokuRLEnvironment.BLACK?"BLACK WIN":o===GomokuRLEnvironment.WHITE?"WHITE WIN":"DRAW")}}class ManualPlayer{constructor(t){this._turn=null,this._env=t,this._obj=null}set turn(t){this._turn=t}action(t,o){const e=this._env._platform.width,i=this._env._platform.height,r=this;this._obj=this._env._platform.svg.append("g");t.choices(this._turn);this._obj.append("rect").attr("x",0).attr("y",0).attr("width",e).attr("height",i).attr("opacity",0).on("click",(s=>{const h=d3.pointer(s),n=[Math.floor(h[1]/e*t.size[0]),Math.floor(h[0]/i*t.size[1])];o(n),r._obj.remove(),r._obj=null}))}close(){this._obj&&this._obj.remove()}}