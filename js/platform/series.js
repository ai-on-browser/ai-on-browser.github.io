import LineRenderer from"../renderer/line.js";import{BasePlatform,LossPlotter}from"./base.js";export default class SeriesPlatform extends BasePlatform{constructor(e,t){super(e,t),this._renderer.terminate(),this._renderer=new LineRenderer(t)}get trainInput(){const e=this.datas.dimension>0?this.datas.x:this.datas.y.map((e=>[e]));return e.rolling||Object.defineProperty(e,"rolling",{value:t=>{const s=[];for(let r=0;r<e.length-t+1;r++)s.push([].concat(...e.slice(r,r+t)));return s}}),e}get trainOutput(){return this.datas.y}set trainResult(e){this._renderer.testResult(e),this.render()}set threshold(e){this._renderer.updateThreshold(e)}init(){this._loss&&(this._loss.terminate(),this._loss=null),this._renderer.init(),this._renderer._make_selector(),this.datas&&(this.datas.clip=!1,this._renderer._pred_count=0,this.render())}render(){this.datas&&this._renderer.render()}resetPredicts(){this._renderer.resetPredicts()}plotLoss(e){this._loss||(this._loss=new LossPlotter(this,this.setting.footer)),this._loss.add(e)}terminate(){this.datas&&(this.datas.clip=!0),this._loss&&this._loss.terminate(),super.terminate()}}