import LineRenderer from"../renderer/line.js";import{BasePlatform}from"./base.js";class TpPlotter{constructor(t,e){this._platform=t,0===e.select("g.tp-render").size()&&e.append("g").classed("tp-render",!0),this._r=e.select("g.tp-render"),this._r.append("path").attr("stroke","black").attr("fill-opacity",0).style("pointer-events","none"),this._pred=[],this._points=[]}set trainResult(t){this._pred=t}remove(){this._r.remove()}reset(){this._points.forEach((t=>t.remove())),this._points=[],this._r.select("path").attr("opacity",0)}plot(t){const e=d3.line().x((t=>t[0])).y((t=>t[1]));this._points.forEach((t=>t.remove())),this._points=[];const r=this._platform.datas;this._platform._renderer._pred_count=this._pred.length;const s=[];r.length>0&&s.push(t([r.length-1,r.x[r.length-1]||[r.y[r.length-1]]]));for(let e=0;e<this._pred.length;e++){const i=t([e+r.length,this._pred[e]]),h=new DataPoint(this._r,i,specialCategory.dummy);s.push(i),this._points.push(h)}0===s.length?this._r.select("path").attr("opacity",0):this._r.select("path").attr("d",e(s)).attr("opacity",.5)}}class SmoothPlotter{constructor(t,e){this._platform=t,0===e.select("g.smooth-render").size()&&e.append("g").classed("smooth-render",!0),this._r=e.select("g.smooth-render"),this._r.append("path").attr("stroke","red").attr("fill-opacity",0).style("pointer-events","none"),this._pred=[]}set trainResult(t){this._pred=t}remove(){this._r.remove()}plot(t){const e=d3.line().x((t=>t[0])).y((t=>t[1])),r=[];for(let e=0;e<this._pred.length;e++){const s=t([e,this._pred[e]]);r.push(s)}0===r.length?this._r.select("path").attr("opacity",0):this._r.select("path").attr("d",e(r)).attr("opacity",1)}}class CpdPlotter{constructor(t,e){this._platform=t,0===e.select("g.cpd-render").size()&&e.insert("g",":first-child").classed("cpd-render",!0),this._r=e.select("g.cpd-render"),this._pred=[]}set trainResult(t){"number"==typeof t[0]?(this._pred=t.map((t=>t>0)),this._pred_value=t.concat()):(this._pred=t.concat(),this._pred_value=null)}set threshold(t){this._pred_value&&(this._pred=this._pred_value.map((e=>e>t)),this._platform.render())}remove(){this._r.remove()}plot(t){if(this._r.selectAll("*").remove(),this._pred_value){let e=Math.max(...this._pred_value);const r=Math.min(...this._pred_value);e===r&&(e+=1);const s=document.createElement("canvas");s.width=this._platform.width,s.height=this._platform.height;const i=s.getContext("2d");let h=0;for(let s=0;s<this._pred_value.length;s++){const a=t([s+.5,[0]])[0],n=(this._pred_value[s]-r)/(e-r);i.fillStyle=getCategoryColor(specialCategory.errorRate(n)),i.fillRect(h,0,a-h+1,this._platform.height),h=a}this._r.append("image").attr("x",0).attr("y",0).attr("width",s.width).attr("height",s.height).attr("xlink:href",s.toDataURL()).attr("opacity",.3)}for(let e=0;e<this._pred.length;e++){if(!this._pred[e])continue;const r=t([e,[0]])[0];this._r.append("line").attr("x1",r).attr("x2",r).attr("y1",0).attr("y2",this._platform.height).attr("stroke","red")}}}export default class SeriesPlatform extends BasePlatform{constructor(t,e){super(t,e),this._renderer.terminate(),this._renderer=new LineRenderer(e)}get trainInput(){const t=this.datas.dimension>0?this.datas.x:this.datas.y.map((t=>[t]));return Object.defineProperty(t,"rolling",{value:e=>{const r=[];for(let s=0;s<t.length-e+1;s++)r.push([].concat(...t.slice(s,s+e)));return r}}),t}get trainOutput(){return this.datas.y}set trainResult(t){this._plotter.trainResult=t,this.render()}init(){0===this.svg.select("g.ts-render").size()&&("SM"===this._task?this.svg.append("g").classed("ts-render",!0):this.svg.insert("g",":first-child").classed("ts-render",!0)),this._r=this.svg.select("g.ts-render"),this._r.selectAll("*").remove(),"TP"===this._task?this._plotter=new TpPlotter(this,this._r):"SM"===this._task?this._plotter=new SmoothPlotter(this,this._r):"CP"===this._task&&(this._plotter=new CpdPlotter(this,this._r)),this._renderer._make_selector(),this.datas&&(this.datas.clip=!1,this._renderer._pred_count=0,this.render())}render(){this.datas&&(this._renderer.render(),this._plotter.plot(this._renderer.toPoint.bind(this._renderer)))}terminate(){this.datas&&(this.datas.clip=!0),this._r.remove(),this.svg.select("g.ts-render-path").remove(),super.terminate()}}