import{BasePlatform}from"./base.js";import ImageData from"../data/image.js";import{specialCategory,getCategoryColor}from"../utils.js";export default class ImagePlatform extends BasePlatform{constructor(t,e){super(t,e),this._reduce_algorithm="mean",this._color_space="rgb",this._normalize=!1,this._step=10,this._binary_threshold=180;const a=this.setting.task.configElement;a.appendChild(document.createTextNode("Color space"));const s=document.createElement("select");s.name="space",s.onchange=()=>{this._color_space=s.value,i.style.display="binary"===this._color_space?null:"none",this.render()};for(const t of Object.keys(ImageData.colorSpaces).map((t=>ImageData.colorSpaces[t]))){const e=document.createElement("option");e.value=t,e.innerText=t,s.appendChild(e)}a.appendChild(s);const i=document.createElement("input");i.type="number",i.name="threshold",i.min=0,i.max=255,i.value=this._binary_threshold,i.style.display="none",i.onchange=()=>{this._binary_threshold=i.value,this.render()},a.appendChild(i),a.appendChild(document.createTextNode(" overwrap ")),this._opacity=document.createElement("input"),this._opacity.name="opacity",this._opacity.type="range",this._opacity.min=0,this._opacity.max=1,this._opacity.step=.1,this._opacity.value=.5,this._opacity.oninput=()=>{let t=this._r.select("g.predict-img");t.size()>0&&t.attr("opacity",this._opacity.value)},a.appendChild(this._opacity)}set colorSpace(t){this._color_space=t,this.setting.task.configElement.querySelector("[name=space]").value=t,this.setting.task.configElement.querySelector("[name=threshold]").style.display="binary"===this._color_space?null:"none",this.render()}get trainInput(){const t=this.datas.x[0];return this.datas._applySpace(this.datas._reduce(t,this._step,this._reduce_algorithm),this._color_space,this._normalize,this._binary_threshold)}set trainResult(t){this._pred=t,this._displayResult(this.trainInput,t,this._step)}testInput(t=8){const e=this.datas.x[0],a=this.datas._reduce(e,t,this._reduce_algorithm);if("DN"===this.task)for(let t=0;t<a.length;t++)for(let e=0;e<a[t].length;e++)for(let s=0;s<a[t][e].length;s++)a[t][e][s]=Math.max(0,Math.min(255,a[t][e][s]+Math.floor(510*Math.random()-255)));const s=this.datas._applySpace(a,this._color_space,this._normalize,this._binary_threshold);return this.__pred=s,this.__pred_x=a,this.__pred_step=t,s}testResult(t){if(!Array.isArray(t[0])){const e=[];for(let a=0;a<t.length;a+=this.__pred[0][0].length){const s=[];for(let e=0;e<this.__pred[0][0].length;e++)s.push(t[a+e]);e.push(s)}t=e}this._pred=t,this._displayResult(this.__pred_x,t,this.__pred_step)}init(){0===this.svg.select("g.im-render").size()&&this.svg.append("g").classed("im-render",!0).style("transform","scale(1, -1) translate(0, -100%)"),this._r=this.svg.select("g.im-render"),this._r.selectAll("*").remove(),this.render()}render(){let t=this._r.select("g.target-image");if(0===t.size()&&(t=this._r.insert("g",":first-child").classed("target-image",!0)),!(this.datas&&this.datas.x&&Array.isArray(this.datas.x[0])&&Array.isArray(this.datas.x[0][0])))return;const e=this.datas.x[0],a=this.datas._applySpace(e,this._color_space,this._normalize,this._binary_threshold),s=a[0][0].length,i=document.createElement("canvas");i.width=e[0].length,i.height=e.length;const r=i.getContext("2d"),h=r.createImageData(i.width,i.height);for(let t=0,e=0;t<i.height;t++)for(let r=0;r<i.width;r++,e+=4)h.data[e]=a[t][r][0],1===s?(h.data[e+1]=a[t][r][0],h.data[e+2]=a[t][r][0],h.data[e+3]=255):3===s?(h.data[e+1]=a[t][r][1],h.data[e+2]=a[t][r][2],h.data[e+3]=255):(h.data[e+1]=a[t][r][1],h.data[e+2]=a[t][r][2],h.data[e+3]=a[t][r][3]);r.putImageData(h,0,0),t.selectAll("*").remove(),t.append("image").attr("x",0).attr("y",0).attr("width",i.width).attr("height",i.height).attr("xlink:href",i.toDataURL()),this._manager.platform.width=i.width,this._manager.platform.height=i.height}_displayResult(t,e,a){let s=this._r.select("g.predict-img");0===s.size()&&(s=this._r.append("g").attr("opacity",this._opacity.value).classed("predict-img",!0)),s.selectAll("*").remove();const i=document.createElement("canvas");i.width=this.width,i.height=this.height;const r=i.getContext("2d"),h=r.createImageData(i.width,i.height);for(let s=0,r=0;s<t.length;s++)for(let o=0;o<t[s].length;o++,r++){const t=[0,0,0,0];if(Array.isArray(e[r]))t[0]=e[r][0],t[3]=255,1===e[r].length?(t[1]=e[r][0],t[2]=e[r][0]):(t[1]=e[r][1],t[2]=e[r][2]);else if(!0===e[r]||!1===e[r])if(e[r]){const e=getCategoryColor(specialCategory.error);t[0]=e.r,t[1]=e.g,t[2]=e.b,t[3]=255*e.opacity}else t[0]=255,t[1]=255,t[2]=255,t[3]=255;else{const a=getCategoryColor(e[r]);t[0]=a.r,t[1]=a.g,t[2]=a.b,t[3]=255*a.opacity}for(let e=0;e<a;e++)for(let r=0;r<a;r++){const l=4*((s*a+e)*i.width+o*a+r);h.data[l]=t[0],h.data[l+1]=t[1],h.data[l+2]=t[2],h.data[l+3]=t[3]}}r.putImageData(h,0,0),s.append("image").attr("x",0).attr("y",0).attr("width",i.width).attr("height",i.height).attr("xlink:href",i.toDataURL())}terminate(){this._r.remove(),this.setting.task.configElement.replaceChildren(),super.terminate()}}