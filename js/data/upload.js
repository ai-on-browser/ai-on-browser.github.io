import{BaseData}from"./base.js";import CSVData from"./csv.js";import ImageData from"./image.js";import DocumentData from"./document.js";export default class UploadData extends BaseData{constructor(t){super(t);const e=this.setting.data.configElement,a=e.append("input").attr("type","file").classed("data-upload",!0).on("change",(()=>{!a.files||a.files.length<=0||this.loadFile(a.files[0])})).node();e.append("div").text("You can upload Text/Image/CSV files.").classed("data-upload",!0),e.append("div").text("CSV: A header in the first line and a target variable in the last column.").classed("data-upload",!0).classed("sub-menu",!0),e.append("div").text("Image: JPEG, PNG, BMP, GIF etc.").classed("data-upload",!0).classed("sub-menu",!0),e.append("div").text("Text: Plain text or PDF.").classed("data-upload",!0).classed("sub-menu",!0)}get availTask(){return"image"===this._filetype?["SG","DN","ED"]:"text"===this._filetype?["WE"]:["CF","RG","AD","DR","FS"]}loadFile(t){if(this._file=t,this._filetype=null,t.type.startsWith("image/"))this._filetype="image";else if("application/pdf"===t.type)this._filetype="text";else if("text/plain"===t.type)this._filetype="text";else if("text/csv"===t.type)this._filetype="csv";else{if(""!==t.type)throw"Unknown file type: "+t.type;this._filetype="csv"}this.setting.data.configElement.selectAll(":not(.data-upload)").remove(),this._manager.platform._renderer.terminate(),"image"===this._filetype?(UploadData.prototype.__proto__=ImageData.prototype,UploadData.__proto__=ImageData,this.readImage(t,(t=>{this._x=[t],this._y=[0],this._manager.platform.render&&this._manager.platform.render()}))):"text"===this._filetype?(UploadData.prototype.__proto__=DocumentData.prototype,UploadData.__proto__=DocumentData,this.readDocument(t,(t=>{this._x=[t],this._y=[0],this._manager.platform.render&&this._manager.platform.render()}))):(UploadData.prototype.__proto__=CSVData.prototype,UploadData.__proto__=CSVData,this._input_category_names=[],this._output_category_names=[],this.setCSV(t,null,!0)),this.setting.ml.refresh(),this.setting.vue.mlTask="",this.setting.vue.$forceUpdate()}}