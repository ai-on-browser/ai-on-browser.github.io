export class BaseData{constructor(t){this._x=[],this._y=[],this._manager=t}get setting(){return this._manager.setting}get svg(){return this._manager.setting.svg}get availTask(){return[]}get dimension(){return this.domain.length}get domain(){if(0===this.length)return[];const t=[];for(let e=0;e<this.x[0].length;e++)t.push([1/0,-1/0]);for(const e of this.x)if(!Array.isArray(e[0]))for(let s=0;s<e.length;s++)t[s][0]=Math.min(t[s][0],e[s]),t[s][1]=Math.max(t[s][1],e[s]);return t}get range(){const t=[1/0,-1/0];for(const e of this.y)t[0]=Math.min(t[0],e),t[1]=Math.max(t[1],e);return t}get categories(){return[...new Set(this.y)]}get length(){return this.x.length}get x(){return this._x}get series(){return{values:this.x,get domain(){if(0===this.values.length)return[];const t=[];for(let e=0;e<this.values[0].length;e++)t.push([1/0,-1/0]);for(const e of this.values)for(let s=0;s<e.length;s++)t[s][0]=Math.min(t[s][0],e[s]),t[s][1]=Math.max(t[s][1],e[s]);return t}}}get y(){return this._y}get points(){return this._manager.platform._renderer.points}get scale(){return 1}set scale(t){}get isSeries(){const t=this.setting.vue.mlTask;return["TP","SM","CP"].indexOf(t)>=0}get params(){return{}}set params(t){}*[Symbol.iterator](){const t=this.length;for(let e=0;e<t;e++)yield this.at(e)}splice(t,e,...s){return[]}set(t,e,s){this.splice(t,1,e,s)}push(...t){this.splice(this.length,0,...t)}pop(){return this.splice(this.length-1,1)[0]}unshift(...t){this.splice(0,0,...t)}shift(){return this.splice(0,1)[0]}slice(t,e){const s=[];for(let i=t;i<e;i++)s.push(this.at(i));return s}forEach(t){const e=this.length;for(let s=0;s<e;s++)t(this.at(s),s,this)}map(t){const e=this.length,s=[];for(let i=0;i<e;i++)s.push(t(this.at(i),i,this));return s}swap(t,e){[this._x[t],this._x[e]]=[this._x[e],this._x[t]],[this._y[t],this._y[e]]=[this._y[e],this._y[t]]}sort(t){const e=this.length,s=[];for(let i=0;i<e;i++){s[i]=this.at(i);for(let e=i;e>0;e--)t(s[e-1],s[e])>0&&this.swap(e-1,e)}}remove(){this.splice(0,this.length)}terminate(){this.setting.data.configElement.selectAll("*").remove(),this.remove()}}export class MultiDimensionalData extends BaseData{constructor(t){super(t),this._categorical_output=!1,this._output_category_names=null}terminate(){super.terminate()}}export class FixData extends MultiDimensionalData{constructor(t){super(t),this._domain=null}get domain(){return this._domain?this._domain:this._domain=super.domain}at(t){return Object.defineProperties({},{x:{get:()=>this._x[t]},y:{get:()=>this._y[t]},point:{get:()=>this.points[t]}})}}