var R=Object.defineProperty;var S=(A,r)=>R(A,"name",{value:r,configurable:!0});import{MultiDimensionalData as w}from"./base.js";import b from"../expression.js";const P=`
Variables:
  x: Data vector. x[0] means the first axis value.
  t: Index of the data
  n: Total number of the data
  d: Number of dimensions
Constants:
  pi: Pi (about 3.14159)
  e: Napier's constant (about 2.71828) 
Operations:
  +: Add/Positive
  -: Subtract/Negative
  *: Multiply
  /: Divide
  ^: Power
  //: Quotient
  %: Modulus
  !: Not
  ||: Or
  &&: And
  ==: Equal
  !=: Not equal
  <: Less
  <=: Less or equal
  >: Greater
  >=: Greater or equal
Functions:
  abs: Absolute
  ceil: Ceil
  floor: Floor
  round: Round
  sqrt: Square root
  cbrt: Qubic root
  sin: Sine
  cos: Cosine
  tan: Tangent
  asin: Arcsine
  acos: Arccosine
  atan: Arctangent
  tanh: Hyperbolic tangent
  exp: Exponential
  log: Logarithm
  sign: Sign
  rand: Random value in [0, 1)
  randn: Random value from normal distribution
  cond: Switch values with a condition. cond(condition, when truthy, when falsy)
`;export default class N extends w{static{S(this,"FunctionalData")}constructor(r){super(r),this._n=100,this._x=[],this._y=[],this._defaultrange=[[0,10]],this._range=[[0,10]],this._axisDomains=[],this._depRpn=[];const s=this;this._presets={linear:{expr:"x[0]"},sin:{expr:"sin(x[0])"},tanh:{expr:"tanh(x[0])",get range(){const i=[];for(let t=0;t<s._d;t++)i[t]=[-5,5];return i}},gaussian:{get expr(){return s._d===1?"exp(-(x[0] ^ 2) / 2)":"4 * exp(-(x[0] ^ 2 + x[1] ^ 2) / 2)"},get range(){return s._d===1?[[-5,5]]:s._d===2?[[-3,3],[-3,3]]:[[-3,3],[-3,3],[-3,3]]}},expdist:{expr:"0.5 * exp(-0.5 * x[0])",dim:1},plaid:{get expr(){return s._d===1?"abs(floor(x[0])) % 2 + 1":s._d===2?"(abs(floor(x[0])) + abs(floor(x[1]))) % 2 + 1":"(abs(floor(x[0])) + abs(floor(x[1])) + abs(floor(x[2]))) % 2 + 1"},get range(){return s._d===1?[[-2,2]]:s._d===2?[[-2,2],[-2,2]]:[[-2,2],[-2,2],[-2,2]]}},spiral:{expr:"(abs(1 * atan(x[1] / x[0]) - sqrt(x[0] ^ 2 + x[1] ^ 2)) % 4 < 2) + 1",range:[[-5,5],[-5,5]],dim:2},swiss_roll:{expr:"t / 50",range:["t / 40 * sin(t / 40)","t / 40 * cos(t / 40)",[-2,2]],dim:2},trefoil_knot:{expr:"4 * sin(t / n * 2 * pi) +  4",range:["sin(t / n * 2 * pi) + 2 * sin(4 * t / n * pi)","cos(t / n * 2 * pi) - 2 * cos(4 * t / n * pi)","-sin(6 * t / n * pi)"],dim:3},"M\xF6bius strip":{expr:"sin(t / n * pi) * 5 + 1",range:["((t % (n // 100) / (n // 100 - 1) * 2 - 1) * cos(t / n * pi) + 2) * cos(2 * t / n * pi)","((t % (n // 100) / (n // 100 - 1) * 2 - 1) * cos(t / n * pi) + 2) * sin(2 * t / n * pi)","(t % (n // 100) / (n // 100 - 1) * 2 - 1) * sin(t / n * pi) + 2"],dim:3},"Klein bottle":{expr:"sin(t / n * pi) * 5 + 1",range:["cos(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * cos(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) - sin(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 4 * pi)","sin(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * cos(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) + cos(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 4 * pi)","cos(t // floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) * (1 + 0.1 * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi))","sin(t // floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) * (1 + 0.1 * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi))"],dim:4},saddle:{expr:"x[2]",range:[[-1,1],[-1,1],"x[0] ^ 2 - x[1] ^ 2"],dim:3}};const h=S(()=>{const i=this.preset;this._range=(this._presets[i].range||this._defaultrange).map(t=>t.concat()),this._range.length=this._d;for(let t=0;t<this._d;t++)this._range[t]||(this._range[t]=this._defaultrange[t]),Array.isArray(this._range[t])?this._axisDomains[t].range=this._range[t]:this._axisDomains[t].expr=this._range[t];g.value=this._presets[i].expr,this._rpn=b(this._presets[i].expr)},"initValues"),e=S(i=>{this._d=i,a.value=i,this._defaultrange=[];for(let t=0;t<this._d;this._defaultrange[t++]=[0,10]);E.replaceChildren(),this._axisDomains=[];for(let t=0;t<this._d;t++){const f=document.createElement("div");E.appendChild(f);const D=this;this._axisDomains[t]={set expr(p){q.value="func",f.querySelectorAll(".axis-domain").forEach(u=>u.style.display="none"),l.style.display=null,y.value=p,D._depRpn[t]=b(p)},set range(p){q.value="range",f.querySelectorAll(".axis-domain").forEach(u=>u.style.display="none"),x.style.display=null,d.value=D._range[t][0]=p[0],c.value=D._range[t][1]=p[1],D._depRpn[t]=null}};const q=document.createElement("select");q.onchange=()=>{const p=q.value;f.querySelectorAll(".axis-domain").forEach(u=>u.style.display="none"),f.querySelector(`[name=${p}]`).style.display=null,p==="func"?this._depRpn[t]=b(y.value):(this._depRpn[t]=null,this._range[t][0]=+d.value,this._range[t][1]=+c.value),this._createData()};for(const p of["range","func"]){const u=document.createElement("option");u.value=u.innerText=p,q.appendChild(u)}f.appendChild(q);const x=document.createElement("span");x.setAttribute("name","range"),x.classList.add("axis-domain"),f.appendChild(x);const d=document.createElement("input");d.type="number",d.max=1e3,d.min=-1e3,d.value=0,d.onchange=()=>{this._range[t][0]=+d.value,this._createData()},x.appendChild(d),x.append(`<= x[${t}] <=`);const c=document.createElement("input");c.type="number",c.max=1e3,c.min=-100,c.value=10,c.onchange=()=>{this._range[t][1]=+c.value,this._createData()},x.appendChild(c);const l=document.createElement("span");l.setAttribute("name","func"),l.classList.add("axis-domain"),l.style.display="none",f.appendChild(l),l.append(` x[${t}] = `),t===0?l.append("f(t) = "):t===1?l.append("f(t, x[0]) = "):t===2?l.append("f(t, x[0], x[1]) = "):l.append(`f(t, x[0], ..., x[${t-1}]) = `);const y=document.createElement("input");y.type="text",y.value="rand()",y.onchange=()=>{this._depRpn[t]=b(y.value),this._createData()},l.appendChild(y)}this._tf&&(this._tf.style.display=this._d===1?null:"none"),_.value=this._n=this._d===1?100:500,this.setting.vue.$forceUpdate()},"initDim"),n=this.setting.data.configElement,o=document.createElement("div");n.appendChild(o);const a=document.createElement("input");a.type="number",a.name="dim",a.min=1,a.max=10,a.value=this._d=1,a.onchange=()=>{e(+a.value),Promise.resolve().then(()=>{h(),this._createData()})},o.append("Dimension",a);const M=document.createElement("div");n.appendChild(M),this._setPreset=i=>{v.value=i,this._presets[i].dim&&this._presets[i].dim!==this._d&&e(this._presets[i].dim),Promise.resolve().then(()=>{h(),this._createData()})};const v=document.createElement("select");v.name="preset",v.onchange=()=>{this._setPreset(v.value),this.setting.vue.pushHistory()};for(const i of Object.keys(this._presets)){const t=document.createElement("option");t.value=t.innerText=i,v.appendChild(t)}M.append("Preset",v);const C=document.createElement("span");C.title=P,C.innerText=" f(t, x) = ",n.appendChild(C);const g=document.createElement("input");g.type="text",g.value=this._presets.linear.expr,g.title=P,g.onchange=()=>{this._rpn=b(g.value),this._createData()},n.appendChild(g),this._rpn=b(this._presets.linear.expr);const E=document.createElement("div");E.style.display="inline-block",n.append(" Domain ",E);const _=document.createElement("input");_.type="number",_.max=1e3,_.min=1,_.value=100,_.onchange=()=>{this._n=+_.value,this._createData()},n.append(" Number ",_);const m=document.createElement("input");m.type="number",m.name="error_scale",m.min=0,m.max=10,m.step=.1,m.value=.1,m.onchange=()=>{this._createData()},n.append(" Noise ",m),e(this._d),this._createData()}get _isSeries(){return["SM","TP","CP"].includes(this._manager.platform.task)}get columnNames(){if(this._isSeries)return[];const r=[];for(let s=0;s<this._d;s++)r.push(`x[${s}]`);return r}get x(){return this._isSeries?[]:this._x}get y(){return["CF"].includes(this._manager.platform.task)?this._y.map(r=>Math.round(r)):this._y}get availTask(){return this._d===1?["RG","IN","TF","SM","TP","CP"]:["RG","IN","CF","AD","DR","FS"]}get dimension(){return this._isSeries?0:this._d}get domain(){return this._range}get preset(){return this.setting.data.configElement.querySelector("[name=preset]").value}get params(){return{preset:this.preset}}set params(r){r.preset&&this._setPreset(r.preset)}_fitData(r){return r.map((s,h)=>s*(this._range[h][1]-this._range[h][0])+this._range[h][0])}_createData(){const s=+this.setting.data.configElement.querySelector("input[name=error_scale]").value;this._x=[];for(let e=0;e<this._n;e++)if(this._d===1)this._x.push(this._fitData([e/this._n]));else{const n=[];for(let o=0;o<this._d;o++)n[o]=Math.random();this._x.push(this._fitData(n))}for(let e=0;e<this._d;e++)if(this._depRpn[e]){this._range[e]=[1/0,-1/0];for(let n=0;n<this._n;n++){const o=this._x[n].slice(0,e),a=this._depRpn[e]({x:o,t:n,n:this._n,d:this._d});this._x[n][e]=a,this._range[e][0]=Math.min(this._range[e][0],a),this._range[e][1]=Math.max(this._range[e][1],a)}}this._y=this._x.map((e,n)=>this._rpn({x:e,t:n,n:this._n,d:this._d}));const h=this._x.map((e,n)=>this._isSeries?[n,[this._y[n]]]:[e,this._y[n]]);for(let e=0;e<this._n;e++)this._y[e]+=s*Math.sqrt(-2*Math.log(Math.random()))*Math.cos(2*Math.PI*Math.random());this._manager.onReady(()=>{if(this._manager.platform.init(),!this._tf&&this._manager.platform.svg){const e=document.createElementNS("http://www.w3.org/2000/svg","g");e.classList.add("true-function"),this._manager.platform.svg.appendChild(e),this._tf=document.createElementNS("http://www.w3.org/2000/svg","path"),this._tf.setAttribute("stroke","blue"),this._tf.setAttribute("stroke-opacity",.3),this._tf.setAttribute("fill-opacity",0),this._tf.style.display=this._d===1?null:"none",e.appendChild(this._tf)}if(this._tf&&this._d===1){let e="";for(let n=0;n<h.length;n++){const o=this._manager.platform._renderer[0].toPoint(h[n]);e+=`${n===0?"M":"L"}${o[0]},${o[1]}`}this._tf.setAttribute("d",e)}})}terminate(){this._manager.platform.svg?.querySelector("g.true-function")?.remove(),super.terminate()}}
