import{MultiDimensionalData}from"./base.js";import stringToFunction from"../expression.js";const exprUsage="\nVariables:\n  x: Data vector. x[0] means the first axis value.\n  t: Index of the data\n  n: Total number of the data\n  d: Number of dimensions\nConstants:\n  pi: Pi (about 3.14159)\n  e: Napier's constant (about 2.71828) \nOperations:\n  +: Add/Positive\n  -: Subtract/Negative\n  *: Multiply\n  /: Divide\n  ^: Power\n  //: Quotient\n  %: Modulus\n  !: Not\n  ||: Or\n  &&: And\n  ==: Equal\n  !=: Not equal\n  <: Less\n  <=: Less or equal\n  >: Greater\n  >=: Greater or equal\nFunctions:\n  abs: Absolute\n  ceil: Ceil\n  floor: Floor\n  round: Round\n  sqrt: Square root\n  cbrt: Qubic root\n  sin: Sine\n  cos: Cosine\n  tan: Tangent\n  asin: Arcsine\n  acos: Arccosine\n  atan: Arctangent\n  tanh: Hyperbolic tangent\n  exp: Exponential\n  log: Logarithm\n  sign: Sign\n  rand: Random value in [0, 1)\n  randn: Random value from normal distribution\n  cond: Switch values with a condition. cond(condition, when truthy, when falsy)\n";export default class FunctionalData extends MultiDimensionalData{constructor(t){super(t),this._n=100,this._x=[],this._y=[],this._defaultrange=[[0,10]],this._range=[[0,10]],this._axisDomains=[],this._depRpn=[];const e=this;this._presets={linear:{expr:"x[0]"},sin:{expr:"sin(x[0])"},tanh:{expr:"tanh(x[0])",get range(){const t=[];for(let n=0;n<e._d;n++)t[n]=[-5,5];return t}},gaussian:{get expr(){return 1===e._d?"exp(-(x[0] ^ 2) / 2)":"4 * exp(-(x[0] ^ 2 + x[1] ^ 2) / 2)"},get range(){return 1===e._d?[[-5,5]]:2===e._d?[[-3,3],[-3,3]]:[[-3,3],[-3,3],[-3,3]]}},expdist:{expr:"0.5 * exp(-0.5 * x[0])",dim:1},plaid:{get expr(){return 1===e._d?"abs(floor(x[0])) % 2 + 1":2===e._d?"(abs(floor(x[0])) + abs(floor(x[1]))) % 2 + 1":"(abs(floor(x[0])) + abs(floor(x[1])) + abs(floor(x[2]))) % 2 + 1"},get range(){return 1===e._d?[[-2,2]]:2===e._d?[[-2,2],[-2,2]]:[[-2,2],[-2,2],[-2,2]]}},spiral:{expr:"(abs(1 * atan(x[1] / x[0]) - sqrt(x[0] ^ 2 + x[1] ^ 2)) % 4 < 2) + 1",range:[[-5,5],[-5,5]],dim:2},swiss_roll:{expr:"t / 50",range:["t / 40 * sin(t / 40)","t / 40 * cos(t / 40)",[-2,2]],dim:2},trefoil_knot:{expr:"4 * sin(t / n * 2 * pi) +  4",range:["sin(t / n * 2 * pi) + 2 * sin(4 * t / n * pi)","cos(t / n * 2 * pi) - 2 * cos(4 * t / n * pi)","-sin(6 * t / n * pi)"],dim:3},"MÃ¶bius strip":{expr:"sin(t / n * pi) * 5 + 1",range:["((t % (n // 100) / (n // 100 - 1) * 2 - 1) * cos(t / n * pi) + 2) * cos(2 * t / n * pi)","((t % (n // 100) / (n // 100 - 1) * 2 - 1) * cos(t / n * pi) + 2) * sin(2 * t / n * pi)","(t % (n // 100) / (n // 100 - 1) * 2 - 1) * sin(t / n * pi) + 2"],dim:3},"Klein bottle":{expr:"sin(t / n * pi) * 5 + 1",range:["cos(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * cos(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) - sin(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 4 * pi)","sin(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * cos(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) + cos(t // floor(sqrt(n)) / floor(sqrt(n)) * pi) * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 4 * pi)","cos(t // floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) * (1 + 0.1 * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi))","sin(t // floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi) * (1 + 0.1 * sin(t % floor(sqrt(n)) / floor(sqrt(n)) * 2 * pi))"],dim:4},saddle:{expr:"x[2]",range:[[-1,1],[-1,1],"x[0] ^ 2 - x[1] ^ 2"],dim:3}};const n=()=>{const t=this.preset;this._range=(this._presets[t].range||this._defaultrange).map((t=>t.concat())),this._range.length=this._d;for(let t=0;t<this._d;t++)this._range[t]||(this._range[t]=this._defaultrange[t]),Array.isArray(this._range[t])?this._axisDomains[t].range=this._range[t]:this._axisDomains[t].expr=this._range[t];p.value=this._presets[t].expr,this._rpn=stringToFunction(this._presets[t].expr)},s=t=>{this._d=t,r.value=t,this._defaultrange=[];for(let t=0;t<this._d;this._defaultrange[t++]=[0,10]);h.replaceChildren(),this._axisDomains=[];for(let t=0;t<this._d;t++){const e=document.createElement("div");h.appendChild(e);const n=this;this._axisDomains[t]={set expr(i){s.value="func",e.querySelectorAll(".axis-domain").forEach((t=>t.style.display="none")),o.style.display=null,l.value=i,n._depRpn[t]=stringToFunction(i)},set range(o){s.value="range",e.querySelectorAll(".axis-domain").forEach((t=>t.style.display="none")),i.style.display=null,a.value=n._range[t][0]=o[0],r.value=n._range[t][1]=o[1],n._depRpn[t]=null}};const s=document.createElement("select");s.onchange=()=>{const n=s.value;e.querySelectorAll(".axis-domain").forEach((t=>t.style.display="none")),e.querySelector(`[name=${n}]`).style.display=null,"func"===n?this._depRpn[t]=stringToFunction(l.value):(this._depRpn[t]=null,this._range[t][0]=+a.value,this._range[t][1]=+r.value),this._createData()};for(const t of["range","func"]){const e=document.createElement("option");e.value=t,e.innerText=t,s.appendChild(e)}e.appendChild(s);const i=document.createElement("span");i.setAttribute("name","range"),i.classList.add("axis-domain"),e.appendChild(i);const a=document.createElement("input");a.type="number",a.max=1e3,a.min=-1e3,a.value=0,a.onchange=()=>{this._range[t][0]=+a.value,this._createData()},i.appendChild(a),i.appendChild(document.createTextNode(`<= x[${t}] <=`));const r=document.createElement("input");r.type="number",r.max=1e3,r.min=-100,r.value=10,r.onchange=()=>{this._range[t][1]=+r.value,this._createData()},i.appendChild(r);const o=document.createElement("span");o.setAttribute("name","func"),o.classList.add("axis-domain"),o.style.display="none",e.appendChild(o),o.appendChild(document.createTextNode(` x[${t}] = `)),0===t?o.appendChild(document.createTextNode("f(t) = ")):1===t?o.appendChild(document.createTextNode("f(t, x[0]) = ")):2===t?o.appendChild(document.createTextNode("f(t, x[0], x[1]) = ")):o.appendChild(document.createTextNode(`f(t, x[0], ..., x[${t-1}]) = `));const l=document.createElement("input");l.type="text",l.value="rand()",l.onchange=()=>{this._depRpn[t]=stringToFunction(l.value),this._createData()},o.appendChild(l)}this._tf.style("display",1===this._d?null:"none"),c.value=this._n=1===this._d?100:500,this.setting.vue.$forceUpdate()},i=this.setting.data.configElement,a=document.createElement("div");i.appendChild(a),a.appendChild(document.createTextNode("Dimension"));const r=document.createElement("input");r.type="number",r.name="dim",r.min=1,r.max=10,r.value=this._d=1,r.onchange=()=>{s(+r.value),Promise.resolve().then((()=>{n(),this._createData()}))},a.appendChild(r);const o=document.createElement("div");i.appendChild(o),this._setPreset=t=>{l.value=t,this._presets[t].dim&&this._presets[t].dim!==this._d&&s(this._presets[t].dim),Promise.resolve().then((()=>{n(),this._createData()}))},o.appendChild(document.createTextNode("Preset"));const l=document.createElement("select");l.name="preset",l.onchange=()=>{this._setPreset(l.value),this.setting.vue.pushHistory()};for(const t of Object.keys(this._presets)){const e=document.createElement("option");e.value=t,e.innerText=t,l.appendChild(e)}o.appendChild(l);const d=document.createElement("span");d.title=exprUsage,d.innerText=" f(t, x) = ",i.appendChild(d);const p=document.createElement("input");p.type="text",p.value=this._presets.linear.expr,p.title=exprUsage,p.onchange=()=>{this._rpn=stringToFunction(p.value),this._createData()},i.appendChild(p),this._rpn=stringToFunction(this._presets.linear.expr),i.appendChild(document.createTextNode(" Domain "));const h=document.createElement("div");h.style.display="inline-block",i.appendChild(h),i.appendChild(document.createTextNode(" Number "));const c=document.createElement("input");c.type="number",c.max=1e3,c.min=1,c.value=100,c.onchange=()=>{this._n=+c.value,this._createData()},i.appendChild(c),i.appendChild(document.createTextNode(" Noise "));const u=document.createElement("input");u.type="number",u.name="error_scale",u.min=0,u.max=10,u.step=.1,u.value=.1,u.onchange=()=>{this._createData()},i.appendChild(u),this._tf=this.setting.svg.append("g").classed("true-function",!0).append("path").attr("stroke","blue").attr("stroke-opacity",.3).attr("fill-opacity",0),s(this._d),this._createData()}get _isSeries(){return["SM","TP","CP"].indexOf(this._manager.platform.task)>=0}get columnNames(){if(this._isSeries)return[];const t=[];for(let e=0;e<this._d;e++)t.push(`x[${e}]`);return t}get x(){return this._isSeries?[]:this._x}get y(){return["CF"].indexOf(this._manager.platform.task)>=0?this._y.map((t=>Math.round(t))):this._y}get availTask(){return 1===this._d?["RG","IN","TF","SM","TP","CP"]:["RG","IN","CF","AD","DR","FS"]}get dimension(){return this._isSeries?0:this._d}get domain(){return this._range}get preset(){return this.setting.data.configElement.querySelector("[name=preset]").value}get params(){return{preset:this.preset}}set params(t){t.preset&&this._setPreset(t.preset)}_fitData(t){return t.map(((t,e)=>t*(this._range[e][1]-this._range[e][0])+this._range[e][0]))}_createData(){const t=+this.setting.data.configElement.querySelector("input[name=error_scale]").value;this._x=[];for(let t=0;t<this._n;t++)if(1===this._d)this._x.push(this._fitData([t/this._n]));else{const t=[];for(let e=0;e<this._d;e++)t[e]=Math.random();this._x.push(this._fitData(t))}for(let t=0;t<this._d;t++)if(this._depRpn[t]){this._range[t]=[1/0,-1/0];for(let e=0;e<this._n;e++){const n=this._x[e].slice(0,t),s=this._depRpn[t]({x:n,t:e,n:this._n,d:this._d});this._x[e][t]=s,this._range[t][0]=Math.min(this._range[t][0],s),this._range[t][1]=Math.max(this._range[t][1],s)}}this._y=this._x.map(((t,e)=>this._rpn({x:t,t:e,n:this._n,d:this._d})));const e=this._x.map(((t,e)=>this._isSeries?[e,[this._y[e]]]:[t,this._y[e]]));for(let e=0;e<this._n;e++)this._y[e]+=t*Math.sqrt(-2*Math.log(Math.random()))*Math.cos(2*Math.PI*Math.random());this._manager.onReady((()=>{if(this._manager.platform.init(),1===this._d){const t=d3.line().x((t=>t[0])).y((t=>t[1]));this._tf.attr("d",t(e.map((t=>this._manager.platform._renderer.toPoint(t)))))}}))}terminate(){super.terminate(),this.setting.svg.select("g.true-function").remove()}}