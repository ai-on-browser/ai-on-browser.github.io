import BaseDB from"./db/base.js";import DocumentData from"./document.js";export default class TextData extends DocumentData{constructor(e){super(e);const t=this.setting.data.configElement,a=document.createElement("div");a.style.width="100%",a.style.display="inline-flex",a.style.justifyContent="space-between",t.appendChild(a);const i=document.createElement("div");a.appendChild(i),i.append("Preset");const n=document.createElement("select");for(const e of["Wikipedia"]){const t=document.createElement("option");t.value=t.innerText=e,n.appendChild(t)}i.appendChild(n);const s=document.createElement("span");i.appendChild(s);const o=document.createElement("span");s.appendChild(o);const r=document.createElement("input");r.value="Artificial intelligence",r.onchange=async()=>{l.value=await WikipediaPreset.getText(r.value),this._x=[this.segment(l.value)],this.setting.vue.pushHistory()},o.append("Title",r);const c=document.createElement("input");c.type="button",c.value="Random",c.onclick=async()=>{c.disabled=!0,r.value=await WikipediaPreset.getRandom(),l.value=await WikipediaPreset.getText(r.value),this._x=[this.segment(l.value)],c.disabled=!1},o.appendChild(c);const d=document.createElement("a");a.appendChild(d),d.href="https://en.wikipedia.org/",d.setAttribute("ref","noreferrer noopener"),d.target="_blank",d.innerText="Wikipedia";const l=document.createElement("textarea");l.cols=70,l.rows=15,l.classList.add("data-upload"),l.value="",l.onchange=()=>{this._x=[this.segment(l.value)],this._y=[0]},t.appendChild(l),this._x=[this.segment(l.value)],this._y=[0],WikipediaPreset.getText(r.value).then((e=>{l.value=e,this._x=[this.segment(l.value)]}))}get availTask(){return["WE"]}}class WikipediaPreset{static BASE_URL="https://en.wikipedia.org/w/api.php";static ExpiredTime=2592e6;static RandomDataExpiredTime=864e5;static lockKeys={};static async getRandom(){const e=new WikipediaDB,t=await e.list("random");for(;t.length>0;){const a=t.shift();if(await e.delete("random",a.id),new Date-a.fetchDate<WikipediaPreset.RandomDataExpiredTime)return a.title}const a=`${WikipediaPreset.BASE_URL}?${new URLSearchParams({origin:"*",format:"json",action:"query",list:"random",rnlimit:"10",rnnamespace:"0"})}`;console.debug(`Fetch to ${a}`),await new Promise((e=>setTimeout(e,100)));const i=await fetch(a),n=await i.json(),s=n.query.random[0].title,o=n.query.random.slice(1);for(let e=0;e<o.length;e++)o[e].fetchDate=new Date;return await e.save("random",o),s}static async getData(e){const t={origin:"*",format:"json",action:"query",titles:e,prop:"extracts",explaintext:!0,exsectionformat:"plain"},a=new WikipediaDB,i=await a.get("data",e);if(!i||new Date-i.fetchDate>WikipediaPreset.ExpiredTime){if(WikipediaPreset.lockKeys[e])return new Promise((t=>{WikipediaPreset.lockKeys[e]?WikipediaPreset.lockKeys[e].push(t):t(a.get("data",e))}));const i=`${WikipediaPreset.BASE_URL}?${new URLSearchParams(t)}`;console.debug(`Fetch to ${i}`),WikipediaPreset.lockKeys[e]=[],await new Promise((e=>setTimeout(e,200)));const n=await fetch(i),s=await n.json();s.title=e,s.fetchDate=new Date,await a.save("data",s);for(const t of WikipediaPreset.lockKeys[e])t(s);return WikipediaPreset.lockKeys[e]=void 0,s}return i}static async getText(e){const t=(await WikipediaPreset.getData(e)).query.pages;return t[Object.keys(t)[0]].extract}}class WikipediaDB extends BaseDB{constructor(){super("en.wikipedia.org",1)}onupgradeneeded(e){const t=e.target.result;t.createObjectStore("data",{keyPath:"title"}),t.createObjectStore("random",{keyPath:"id"})}}