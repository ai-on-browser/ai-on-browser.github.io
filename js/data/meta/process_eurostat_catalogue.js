var S=Object.defineProperty;var g=(o,s)=>S(o,"name",{value:s,configurable:!0});import w from"fs/promises";import d from"path";import{XMLParser as B}from"fast-xml-parser";const b=import.meta.dirname,y=g(async(o,s)=>{let f=.01;const e=["B","KiB","MiB","GiB"];for(let h=0;h<100;h++)try{const a=await fetch(o,s),m=a.headers.get("content-length");let i=0,t=0;const c=new TransformStream({transform(n,u){u.enqueue(n),i+=n.byteLength;const l=Date.now();if(l-t>1e3)if(t=l,m)console.info(i+" / "+m+" bytes");else{let r=0,p=i;for(;p>1e3&&r+1<e.length;)p/=1024,r++;console.info(Math.floor(p*100)/100+" "+e[r])}}});return new Response(a.body.pipeThrough(c))}catch{await new Promise(a=>setTimeout(a,f*1e3)),f=Math.min(f*2,5)}return null},"fetchProgress"),x=g(async()=>{console.log("Fetching catalogue...");const o=await y("https://ec.europa.eu/eurostat/api/dissemination/catalogue/toc/xml");if(!o)throw new Error("Failed to fetch catalogue");const s=await o.text(),h=new B({ignoreAttributes:!1}).parse(s,"application/xml")["nt:tree"]["nt:branch"][0],a=g(n=>{const u={title:n["nt:title"][0]["#text"],children:[]},l=n["nt:children"]["nt:branch"];if(l)for(const r of Array.isArray(l)?l:[l])u.children.push(a(r));else{const r=n["nt:children"]["nt:leaf"];for(const p of Array.isArray(r)?r:[r])u.children.push({title:p["nt:title"][0]["#text"],code:p["nt:code"]})}return u},"getLeafs"),m=a(h),t=new Blob([JSON.stringify(m)]).stream().pipeThrough(new CompressionStream("gzip")),c=await new Response(t).arrayBuffer();w.writeFile(d.join(b,"catalogue.json.gz"),Buffer.from(c))},"getCatalogue"),T=g(async()=>{console.log("Fetching metabase...");let o=await y("https://ec.europa.eu/eurostat/api/dissemination/catalogue/metabase.txt.gz");if(!o)throw new Error("Failed to fetch metadata");const s=o.body.pipeThrough(new DecompressionStream("gzip")),f=await new Response(s).text(),e={};for(const i of f.split(`
`)){if(i.trim().length===0)continue;const[t,c,n]=i.split("	");e[t]||(e[t]={}),e[t][c]||(e[t][c]=[]),e[t][c].push(n)}const a=new Blob([JSON.stringify(e)]).stream().pipeThrough(new CompressionStream("gzip")),m=await new Response(a).arrayBuffer();w.writeFile(d.join(b,"metabase.json.gz"),Buffer.from(m))},"getMetabase");await T(),await x();
