import JSONData from"./json.js";const BASE_URL="https://dashboard.e-stat.go.jp/api/1.0",ExpiredTime=2592e6,lang=(()=>{switch(window.navigator.languages&&window.navigator.languages[0]||window.navigator.language){case"ja-JP":case"ja":return"JP";default:return"EN"}})(),resources={link:"JP"===lang?"https://dashboard.e-stat.go.jp/":"https://dashboard.e-stat.go.jp/en/",text:"JP"===lang?"統計ダッシュボード":"Statistics Dashboard",credit:"JP"===lang?"このサービスは、統計ダッシュボードのAPI機能を使用していますが、サービスの内容は国によって保証されたものではありません。":"This service uses the API feature of Statistics Dashboard, but the contents of this service are not guaranteed by the Statistics Bureau of Japan."},datasetInfos={"Nikkei Indexes":{indicatorCode:["0702020501000010010"],columnKeys:["indicator"],indexKeys:["time"],availTask:["SM","TP","CP"]},"Number of entries/departures":{indicatorCode:["0204030001000010010","0204040001000010010"],columnKeys:["indicator"],indexKeys:["time"],filter:{cycle:["Month","月"]},availTask:["RG","SM","TP","CP"]},"Employed persons":{indicatorCode:["0301010000010010010","0301010000020010010","0301010000030010010"],columnKeys:["indicator"],indexKeys:["time"],filter:{cycle:["Month","月"]},availTask:["RG","SM","TP","CP"]}},lockKeys={};export default class EStatData extends JSONData{constructor(t){super(t),this._name="Nikkei Indexes",this._columns=[],this._availTask=[];const e=this.setting.data.configElement,a=e.append("div").style("display","flex").style("justify-content","space-between");a.append("span").text("Name").append("select").attr("name","name").on("change",(()=>{this._name=e.select("[name=name]").property("value"),this._readyData(),this.setting.vue.pushHistory()})).selectAll("option").data(Object.keys(datasetInfos)).enter().append("option").attr("value",(t=>t)).text((t=>datasetInfos[t].caption||t)),a.append("span").append("a").attr("href",resources.link).attr("ref","noreferrer noopener").attr("target","_blank").text(resources.text),e.append("span").text(resources.credit).style("font-size","80%"),this._outSelector=e.append("div"),this._readyData()}get availTask(){return this._availTask}get columnNames(){if(this._target>=0){const t=this._columns.concat();return t.splice(this._target,1),t}return this._columns}get x(){return this._target>=0?this._x.map((t=>{const e=t.concat();return e.splice(this._target,1),e})):this._x}get y(){return this._target>=0?this._x.map((t=>t[this._target])):Array(this._x.length).fill(0)}get params(){return{dataname:this._name}}set params(t){if(t.dataname&&Object.keys(datasetInfos).indexOf(t.dataname)>=0){const e=this.setting.data.configElement;this._name=t.dataname,e.select("[name=name]").property("value",t.dataname),this._readyData()}}async _getData(t){const e={Lang:"JP"===lang?"JP":"EN",IndicatorCode:t,IsSeasonalAdjustment:1,MetaGetFlg:"Y"},a=new EStatDB,s=await a.get("data",t);if(!s||+s.GET_STATS.RESULT.status>=100||new Date-s.fetchDate>2592e6){const n=t.join(",");if(lockKeys[n])return new Promise((t=>lockKeys[n].push(t)));const r=`${BASE_URL}/Json/getData?${new URLSearchParams(e)}`;console.debug(`Fetch to ${r}`),lockKeys[n]=[];const o=await fetch(r),i=await o.json();+s.GET_STATS.RESULT.status>=100&&console.error(s.GET_STATS.RESULT),i.fetchDate=new Date,await a.save("data",i);for(const t of lockKeys[n])t(i);return lockKeys[n]=void 0,i}return s}async _readyData(){const t=datasetInfos[this._name];this._availTask=t.availTask,this._outSelector.selectAll("*").remove();const e=await this._getData(t.indicatorCode),a=e.GET_STATS.STATISTICAL_DATA.DATA_INF.DATA_OBJ,s=e.GET_STATS.STATISTICAL_DATA.CLASS_INF.CLASS_OBJ,n={};for(const t of s)n[t["@id"]]=t;const r=(t,e)=>{for(const a of t.CLASS)if(a["@code"]===e)return a.$||a["@name"]},o=t.columnKeys.map((t=>n[t])),i=t.indexKeys.map((t=>n[t])),c={},d=[];for(let e=0;e<a.length;e++){const s=a[e].VALUE;if(t.filter){let e=!0;for(const a of Object.keys(t.filter)){const o=n[a],i=s[`@${o["@id"]}`],c=r(o,i),d=t.filter[a];if("string"==typeof d)e&&=c===d;else{if(!Array.isArray(d))throw new Error("Invalid condition");e&&=d.indexOf(c)>=0}}if(!e)continue}const l=i.map((t=>s[`@${t["@id"]}`])).join("_"),h=o.map((t=>r(t,s[`@${t["@id"]}`]))).join("_");c[l]||(c[l]={}),c[l][h]=s.$,d.indexOf(h)<0&&d.push(h)}this._columns=d,this._target=1===d.length?-1:this._columns.length-1;const l=Object.keys(c);if(l.sort(),this._index=l,this.setJSON(l.map((t=>c[t])),d.map((t=>({name:t,nan:0})))),d.length>1){const t=this._outSelector.append("span").text("Output").append("select").attr("name","target").on("change",(()=>{const t=this._outSelector.select("[name=target]").property("value");this._target=this._columns.indexOf(t),this._domain=null,this._manager.onReady((()=>{this._manager.platform.init()}))}));t.selectAll("option").data(["",...this._columns]).enter().append("option").attr("value",(t=>t)).text((t=>t)),t.property("value",this._columns[this._target])}this.setting.ml.refresh(),this.setting.vue.$forceUpdate()}}const DB_NAME="dashboard.e-stat.go.jp";class EStatDB{constructor(){this.db=null}async _ready(){if(this.db)return;const t=indexedDB.open(DB_NAME,1);return new Promise(((e,a)=>{t.onerror=a,t.onsuccess=()=>{this.db=t.result,e()},t.onupgradeneeded=t=>{t.target.result.createObjectStore("data",{keyPath:"GET_STATS.PARAMETER.indicatorCode"})}}))}async save(t,e){return await this._ready(),new Promise(((a,s)=>{const n=this.db.transaction([t],"readwrite"),r=n.objectStore(t);Array.isArray(e)||(e=[e]);for(const t of e)r.put(t);n.oncomplete=a,n.onerror=s}))}async get(t,e){return await this._ready(),new Promise(((a,s)=>{const n=this.db.transaction(t).objectStore(t).get(e);n.onsuccess=t=>{a(t.target.result)},n.onerror=s}))}async list(t){return await this._ready(),new Promise(((e,a)=>{const s=this.db.transaction(t).objectStore(t).getAll();s.onsuccess=t=>{e(t.target.result)},s.onerror=a}))}async deleteDatabase(){return new Promise(((t,e)=>{const a=indexedDB.deleteDatabase(DB_NAME);a.onerror=e,a.onsuccess=()=>{this.db=null,t()}}))}}