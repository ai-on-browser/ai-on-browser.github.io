var l=Object.defineProperty;var d=(h,e)=>l(h,"name",{value:e,configurable:!0});export default class c{static{d(this,"CSV")}constructor(e,{header:r=0}={}){this._data=e,this._header=r}get data(){return this._header>0?this._data.slice(this._header):this._data}get columns(){return this._header>0?this._data[0]:Array.from(this._data[0],(e,r)=>r)}get type(){const e=this.data;return e[0].map((r,i)=>e.some(s=>isNaN(s[i]))?"category":"numeric")}get info(){const e=this.columns,r=this.type,i=[];for(let t=0;t<e.length;t++)i[t]={name:e[t],type:r[t]};return i[i.length-1].out=!0,i}static parse(e,r={}){const i=r.delimiter||",",t=[];let s=[],o=!1,n="";for(let a=0;a<e.length;a++)o?e[a]==='"'&&e[a+1]==='"'?(n+='"',a++):e[a]==='"'?o=!1:n+=e[a]:e[a]==='"'?o=!0:e.startsWith(i,a)?(s.push(n),n=""):e[a]===`
`||e[a]==="\r"?((n.length>0||s.length>0)&&(s.push(n),t.push(s),n="",s=[]),e[a]==="\r"&&e[a+1]===`
`&&a++):n+=e[a];return(n.length>0||s.length>0)&&(s.push(n),t.push(s)),new c(t,r)}static async load(e,r={}){if(typeof e=="string"){let t=await(await fetch(e)).arrayBuffer();const s=new TextDecoder(r.encoding||"utf-8");if(e.endsWith(".gz")){const o=new DecompressionStream("gzip"),n=new Blob([t]).stream().pipeThrough(o);t=await new Response(n).arrayBuffer()}return c.parse(s.decode(t),r)}else if(e instanceof File){const i=await new Promise(t=>{const s=new FileReader;s.onload=()=>{t(s.result)},s.readAsText(e,r.encoding)});return c.parse(i,r)}}}
