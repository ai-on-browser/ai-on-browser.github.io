var p=Object.defineProperty;var o=(u,e)=>p(u,"name",{value:e,configurable:!0});import"https://cdnjs.cloudflare.com/ajax/libs/pako/2.1.0/pako.min.js";import{FixData as d}from"./base.js";class c{static{o(this,"CSV")}constructor(e){this._data=e}get data(){return this._data}static parse(e,t={}){const n=t.delimiter||",",i=[];let s=[],l=!1,a="";for(let r=0;r<e.length;r++)l?e[r]==='"'&&e[r+1]==='"'?(a+='"',r++):e[r]==='"'?l=!1:a+=e[r]:e[r]==='"'?l=!0:e.startsWith(n,r)?(s.push(a),a=""):e[r]===`
`||e[r]==="\r"?((a.length>0||s.length>0)&&(s.push(a),i.push(s),a="",s=[]),e[r]==="\r"&&e[r+1]===`
`&&r++):a+=e[r];return(a.length>0||s.length>0)&&(s.push(a),i.push(s)),new c(i)}static async load(e,t={}){if(typeof e=="string"){const i=await(await fetch(e)).arrayBuffer(),s=new TextDecoder(t.encoding||"utf-8");return e.endsWith(".gz")?c.parse(s.decode(pako.ungzip(i)),t):c.parse(s.decode(i),t)}else if(e instanceof File){const n=await new Promise(i=>{const s=new FileReader;s.onload=()=>{i(s.result)},s.readAsText(e,t.encoding)});return c.parse(n,t)}}}export default class f extends d{static{o(this,"CSVData")}constructor(e,t,n){super(e),t&&n&&this.setCSV(t,n)}async readCSV(e,t){return(await c.load(e,t)).data}setCSV(e,t,n=!1){if(!Array.isArray(e)){this.readCSV(e).then(i=>{this.setCSV(i,t,n)});return}if(n){const i=e[0];e=e.slice(1),t||(t=i.map((s,l)=>{const a=e.some(r=>isNaN(r[l]));return{name:s,type:a?"category":"numeric"}}),t[t.length-1].out=!0)}this.setArray(e,t)}}
