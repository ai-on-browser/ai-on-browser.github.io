import{ContinuousHMM,HMMClassifier}from"../../lib/model/hmm.js";import Controller from"../controller.js";import{specialCategory}from"../utils.js";export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".';const n=new Controller(t);let e=null;const i=n.input.number({label:" state = ",min:2,max:100,value:3});n.stepLoopButtons().init((()=>{e=null,t.init()})).step((function(n){if("CP"===t.task){e||(e=new ContinuousHMM(i.value,t.trainInput[0].length));const n=[t.trainInput];e.fit(n,!0);const a=e.bestPath(n)[0],s=[];for(let t=0;t<a.length-1;t++)s.push(a[t]!==a[t+1]);t.trainResult=s}else if("DE"===t.task){e||(e=new ContinuousHMM(i.value,1)),e.fit(t.trainInput,!0);const n=e.probability(t.testInput()),a=Math.min(...n),s=Math.max(...n);t.testResult(n.map((t=>specialCategory.density((t-a)/(s-a)))))}else if("GR"===t.task){e||(e=new ContinuousHMM(i.value,1)),e.fit(t.trainInput,!0);const n=e.generate(t.trainInput.length,2);t.trainResult=n.map((t=>t.map((t=>t[0]))))}else{e||(e=new HMMClassifier(new Set(t.trainOutput.map((t=>t[0]))),i.value)),e.fit(t.trainInput,t.trainOutput.map((t=>t[0])));const n=e.predict(t.testInput(5));t.testResult(n.map((t=>t??-1)))}n&&n()})).epoch()}