import{ContinuousHMM,HMMClassifier}from"../../lib/model/hmm.js";var dispHMM=function(t,e){let n=null;t.append("span").text(" state = "),t.append("input").attr("type","number").attr("name","state").attr("value",3).attr("min",2).attr("max",100),e.setting.ml.controller.stepLoopButtons().init((()=>{n=null,e.init()})).step((function(i){e.fit(((a,s,l,o)=>{const p=+t.select("[name=state]").property("value");if("CP"===e.task){n||(n=new ContinuousHMM(p,a[0].length));const t=[a];n.fit(t,!0);const e=n.bestPath(t)[0],i=[];for(let t=0;t<e.length-1;t++)i.push(e[t]!==e[t+1]);l(i)}else if("DE"===e.task)n||(n=new ContinuousHMM(p,1)),n.fit(a,!0),e.predict(((t,e)=>{const i=n.probability(t),a=Math.min(...i),s=Math.max(...i);e(i.map((t=>specialCategory.density((t-a)/(s-a)))))}));else if("GR"===e.task){n||(n=new ContinuousHMM(p,1)),n.fit(a,!0);l(n.generate(a.length,2).map((t=>t.map((t=>t[0])))))}else n||(n=new HMMClassifier(new Set(s.map((t=>t[0]))),p)),n.fit(a,s),e.predict(((t,e)=>{e(n.predict(t))}),5);i&&i()}))})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispHMM(t.setting.ml.configElement,t)}