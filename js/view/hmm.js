import{ContinuousHMM,HMMClassifier}from"../../lib/model/hmm.js";import Controller from"../controller.js";var dispHMM=function(t,n){const e=new Controller(n);let a=null;t.append("span").text(" state = "),t.append("input").attr("type","number").attr("name","state").attr("value",3).attr("min",2).attr("max",100),e.stepLoopButtons().init((()=>{a=null,n.init()})).step((function(e){const i=+t.select("[name=state]").property("value");if("CP"===n.task){a||(a=new ContinuousHMM(i,n.trainInput[0].length));const t=[n.trainInput];a.fit(t,!0);const e=a.bestPath(t)[0],s=[];for(let t=0;t<e.length-1;t++)s.push(e[t]!==e[t+1]);n.trainResult=s}else if("DE"===n.task){a||(a=new ContinuousHMM(i,1)),a.fit(n.trainInput,!0);const t=a.probability(n.testInput()),e=Math.min(...t),s=Math.max(...t);n.testResult(t.map((t=>specialCategory.density((t-e)/(s-e)))))}else if("GR"===n.task){a||(a=new ContinuousHMM(i,1)),a.fit(n.trainInput,!0);const t=a.generate(n.trainInput.length,2);n.trainResult=t.map((t=>t.map((t=>t[0]))))}else{a||(a=new HMMClassifier(new Set(n.trainOutput.map((t=>t[0]))),i)),a.fit(n.trainInput,n.trainOutput.map((t=>t[0])));const t=a.predict(n.testInput(5));n.testResult(t.map((t=>t??-1)))}e&&e()})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispHMM(t.setting.ml.configElement,t)}