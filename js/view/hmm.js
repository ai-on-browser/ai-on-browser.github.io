import{ContinuousHMM,HMMClassifier}from"../../lib/model/hmm.js";import Controller from"../controller.js";var dispHMM=function(t,e){const n=new Controller(e);let a=null;t.append("span").text(" state = "),t.append("input").attr("type","number").attr("name","state").attr("value",3).attr("min",2).attr("max",100),n.stepLoopButtons().init((()=>{a=null,e.init()})).step((function(n){e.fit(((i,o,s,l)=>{const p=+t.select("[name=state]").property("value");if("CP"===e.task){a||(a=new ContinuousHMM(p,i[0].length));const t=[i];a.fit(t,!0);const e=a.bestPath(t)[0],n=[];for(let t=0;t<e.length-1;t++)n.push(e[t]!==e[t+1]);s(n)}else if("DE"===e.task)a||(a=new ContinuousHMM(p,1)),a.fit(i,!0),e.predict(((t,e)=>{const n=a.probability(t),i=Math.min(...n),o=Math.max(...n);e(n.map((t=>specialCategory.density((t-i)/(o-i)))))}));else if("GR"===e.task){a||(a=new ContinuousHMM(p,1)),a.fit(i,!0);s(a.generate(i.length,2).map((t=>t.map((t=>t[0])))))}else a||(a=new HMMClassifier(new Set(o.map((t=>t[0]))),p)),a.fit(i,o.map((t=>t[0]))),e.predict(((t,e)=>{e(a.predict(t).map((t=>t??-1)))}),5);n&&n()}))})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispHMM(t.setting.ml.configElement,t)}