import ARMA from"../../lib/model/arma.js";import Controller from"../controller.js";var dispARMA=function(t,e){const n=new Controller(e);let a=null;const p=n=>{const p=+t.select("[name=p]").property("value"),r=+t.select("[name=q]").property("value"),o=+t.select("[name=c]").property("value");e.fit(((t,e,l)=>{if(!a){a=[];for(let e=0;e<t[0].length;e++)a[e]=new ARMA(p,r)}const i=[];for(let t=0;t<o;i[t++]=[]);for(let e=0;e<t[0].length;e++){const n=t.map((t=>t[e]));a[e].fit(n);const p=a[e].predict(n,o);for(let t=0;t<i.length;t++)i[t][e]=p[t]}l(i),n&&n()}))};t.append("span").text("p"),t.append("input").attr("type","number").attr("name","p").attr("min",0).attr("max",1e3).attr("value",1),t.append("span").text("q"),t.append("input").attr("type","number").attr("name","q").attr("min",0).attr("max",1e3).attr("value",1),n.stepLoopButtons().init((()=>{a=null,e._plotter.reset()})).step(p).epoch(),t.append("span").text("predict count"),t.append("input").attr("type","number").attr("name","c").attr("min",1).attr("max",100).attr("value",100).on("change",p)};export default function(t){t.setting.ml.usage='Click and add data point. Click "fit" to update.',dispARMA(t.setting.ml.configElement,t)}