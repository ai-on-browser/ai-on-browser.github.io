import ARMA from"../../lib/model/arma.js";var dispARMA=function(t,e){let n=null;const a=a=>{const p=+t.select("[name=p]").property("value"),r=+t.select("[name=q]").property("value"),l=+t.select("[name=c]").property("value");e.fit(((t,e,o)=>{if(!n){n=[];for(let e=0;e<t[0].length;e++)n[e]=new ARMA(p,r)}const i=[];for(let t=0;t<l;i[t++]=[]);for(let e=0;e<t[0].length;e++){const a=t.map((t=>t[e]));n[e].fit(a);const p=n[e].predict(a,l);for(let t=0;t<i.length;t++)i[t][e]=p[t]}o(i),a&&a()}))};t.append("span").text("p"),t.append("input").attr("type","number").attr("name","p").attr("min",0).attr("max",1e3).attr("value",1),t.append("span").text("q"),t.append("input").attr("type","number").attr("name","q").attr("min",0).attr("max",1e3).attr("value",1),e.setting.ml.controller.stepLoopButtons().init((()=>{n=null,e._plotter.reset()})).step(a).epoch(),t.append("span").text("predict count"),t.append("input").attr("type","number").attr("name","c").attr("min",1).attr("max",100).attr("value",100).on("change",a)};export default function(t){t.setting.ml.usage='Click and add data point. Click "fit" to update.',dispARMA(t.setting.ml.configElement,t)}