import LaplacianEigenmaps from"../../lib/model/laplacian_eigenmaps.js";var dispLE=function(t,e){t.append("select").attr("name","method").on("change",(function(){const t=d3.select(this).property("value");a.selectAll("*").style("display","none"),a.selectAll(`.${t}`).style("display","inline")})).selectAll("option").data(["rbf","knn"]).enter().append("option").attr("value",(t=>t)).text((t=>t));const a=t.append("span");a.append("span").classed("rbf",!0).text("s ="),a.append("input").attr("type","number").attr("name","sigma").classed("rbf",!0).attr("min",.01).attr("max",100).attr("step",.01).property("value",1),t.append("span").text("k ="),t.append("input").attr("type","number").attr("name","k_nearest").attr("min",1).attr("max",100).property("value",10),t.append("input").attr("type","button").attr("value","Fit").on("click",(()=>{const n=t.select("[name=method]").property("value"),p=+a.select("[name=sigma]").property("value"),l=+t.select("[name=k_nearest]").property("value"),i=e.dimension,r=new LaplacianEigenmaps(n,l,p).predict(e.trainInput,i);e.trainResult=r}))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',dispLE(t.setting.ml.configElement,t)}