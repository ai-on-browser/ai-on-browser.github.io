var u=Object.defineProperty;var l=(e,n)=>u(e,"name",{value:n,configurable:!0});import{SimpleMovingAverage as v,LinearWeightedMovingAverage as h,TriangularMovingAverage as k}from"../../lib/model/moving_average.js";var m=l(function(e,n){n.setting.ml.reference={title:"Moving average (Wikipedia)",url:"https://en.wikipedia.org/wiki/Moving_average"};const p=l(()=>{const i=e.select("[name=method]").property("value"),c=+e.select("[name=k]").property("value");let r;switch(i){case"simple":r=new v;break;case"linear weighted":r=new h;break;case"triangular":r=new k;break}const g=n.trainInput,o=[];for(let t=0;t<g.length;o[t++]=[]);for(let t=0;t<g[0].length;t++){const d=g.map(a=>a[t]),s=r.predict(d,c);for(let a=0;a<o.length;a++)o[a][t]=s[a]}n.trainResult=o},"fitModel");e.append("select").attr("name","method").on("change",()=>{p()}).selectAll("option").data(["simple","linear weighted","triangular"]).enter().append("option").attr("value",i=>i).text(i=>i),e.append("span").text("k"),e.append("input").attr("type","number").attr("name","k").attr("min",1).attr("max",100).attr("value",5).on("change",p),e.append("input").attr("type","button").attr("value","Calculate").on("click",p)},"dispMovingAverage");export default function w(e){e.setting.ml.usage='Click and add data point. Click "Calculate" to update.',m(e.setting.ml.configElement,e)}l(w,"default");
