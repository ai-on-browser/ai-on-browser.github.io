import{SimpleMovingAverage,LinearWeightedMovingAverage,TriangularMovingAverage}from"../../lib/model/moving_average.js";var dispMovingAverage=function(e,t){const a=()=>{const a=e.select("[name=method]").property("value"),n=+e.select("[name=k]").property("value");let r;switch(a){case"simple":r=new SimpleMovingAverage;break;case"linear weighted":r=new LinearWeightedMovingAverage;break;case"triangular":r=new TriangularMovingAverage}const i=t.trainInput,l=[];for(let e=0;e<i.length;l[e++]=[]);for(let e=0;e<i[0].length;e++){const t=i.map((t=>t[e])),a=r.predict(t,n);for(let t=0;t<l.length;t++)l[t][e]=a[t]}t.trainResult=l};e.append("select").attr("name","method").on("change",(()=>{a()})).selectAll("option").data(["simple","linear weighted","triangular"]).enter().append("option").attr("value",(e=>e)).text((e=>e)),e.append("span").text("k"),e.append("input").attr("type","number").attr("name","k").attr("min",1).attr("max",100).attr("value",5).on("change",a),e.append("input").attr("type","button").attr("value","Calculate").on("click",a)};export default function(e){e.setting.ml.usage='Click and add data point. Click "Calculate" to update.',dispMovingAverage(e.setting.ml.configElement,e)}