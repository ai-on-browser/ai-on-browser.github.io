var d=Object.defineProperty;var r=(t,e)=>d(t,"name",{value:e,configurable:!0});import l from"../../lib/model/optics.js";var h=r(function(t,e){e.setting.ml.reference={title:"OPTICS algorithm (Wikipedia)",url:"https://en.wikipedia.org/wiki/OPTICS_algorithm"};let p=null;const n=r((a=!0)=>{if(!p||a){const s=t.select("[name=metric]").property("value"),o=+t.select("[name=eps]").property("value"),u=+t.select("[name=minpts]").property("value");p=new l(o,u,s),p.fit(e.trainInput)}const c=+t.select("[name=threshold]").property("value"),i=p.predict(c);e.trainResult=i.map(s=>s+1),t.select("[name=clusters]").text(new Set(i).size)},"fitModel");t.append("select").attr("name","metric").on("change",()=>n()).selectAll("option").data(["euclid","manhattan","chebyshev"]).enter().append("option").attr("value",a=>a).text(a=>a),t.append("span").text("eps"),t.append("input").attr("type","number").attr("name","eps").attr("min",.01).attr("max",100).attr("step",.01).attr("value",100).on("change",()=>n()),t.append("span").text("min pts"),t.append("input").attr("type","number").attr("name","minpts").attr("min",2).attr("max",1e3).attr("value",10).on("change",()=>n());const g=t.append("input").attr("type","button").attr("value","Fit").on("click",()=>n());t.append("span").text("threshold"),t.append("input").attr("type","number").attr("name","threshold").attr("min",.01).attr("max",10).attr("step",.01).attr("value",.08).on("change",()=>n(!1)),t.append("span").text(" Clusters: "),t.append("span").attr("name","clusters")},"dispOPTICS");export default function m(t){t.setting.ml.usage='Click and add data point. Then, click "Fit" button.',h(t.setting.ml.configElement,t)}r(m,"default");
