import OPTICS from"../../lib/model/optics.js";var dispOPTICS=function(t,e){let a=null;const n=(n=!0)=>{if(!a||n){const n=t.select("[name=metric]").property("value"),p=+t.select("[name=eps]").property("value"),r=+t.select("[name=minpts]").property("value");a=new OPTICS(p,r,n),a.fit(e.trainInput)}const p=+t.select("[name=threshold]").property("value"),r=a.predict(p);e.trainResult=r.map((t=>t+1)),t.select("[name=clusters]").text(new Set(r).size)};t.append("select").attr("name","metric").on("change",(()=>n())).selectAll("option").data(["euclid","manhattan","chebyshev"]).enter().append("option").attr("value",(t=>t)).text((t=>t)),t.append("span").text("eps"),t.append("input").attr("type","number").attr("name","eps").attr("min",.01).attr("max",100).attr("step",.01).attr("value",100).on("change",(()=>n())),t.append("span").text("min pts"),t.append("input").attr("type","number").attr("name","minpts").attr("min",2).attr("max",1e3).attr("value",10).on("change",(()=>n()));t.append("input").attr("type","button").attr("value","Fit").on("click",(()=>n()));t.append("span").text("threshold"),t.append("input").attr("type","number").attr("name","threshold").attr("min",.01).attr("max",10).attr("step",.01).attr("value",.08).on("change",(()=>n(!1))),t.append("span").text(" Clusters: "),t.append("span").attr("name","clusters")};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Fit" button.',dispOPTICS(t.setting.ml.configElement,t)}