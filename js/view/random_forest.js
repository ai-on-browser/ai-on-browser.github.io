var c=Object.defineProperty;var p=(t,e)=>c(t,"name",{value:e,configurable:!0});import{RandomForestClassifier as l,RandomForestRegressor as m}from"../../lib/model/random_forest.js";var h=p(function(t,e){e.setting.ml.reference={title:"Random forest (Wikipedia)",url:"https://en.wikipedia.org/wiki/Random_forest"};const i=e.task;let n=null,u=4;const s=p(function(){let a=n.predict(e.testInput(u));e.testResult(a)},"dispRange"),o=i==="CF"?["CART","ID3"]:["CART"];t.append("select").attr("name","method").selectAll("option").data(o).enter().append("option").attr("value",a=>a).text(a=>a),t.append("span").text(" Tree #"),t.append("input").attr("type","number").attr("name","tree_num").property("value",50).attr("min",1).attr("max",200),t.append("span").text(" Sampling rate "),t.append("input").attr("type","number").attr("name","srate").property("value",.2).attr("min",.1).attr("max",1).attr("step",.1),t.append("input").attr("type","button").attr("value","Initialize").on("click",()=>{if(e.datas.length===0){n=null,t.select("[name=depthnumber]").text("0");return}const a=+t.select("input[name=tree_num]").property("value"),d=+t.select("input[name=srate]").property("value");if(i==="CF"){const r=t.select("[name=method]").property("value");n=new l(a,d,r)}else n=new m(a,d);n.init(e.trainInput,e.trainOutput.map(r=>r[0])),s(),t.select("[name=depthnumber]").text(n.depth)}),t.append("input").attr("type","button").attr("value","Separate").on("click",()=>{n&&(n.fit(),s(),t.select("[name=depthnumber]").text(n.depth))}),t.append("span").attr("name","depthnumber").text("0"),t.append("span").text(" depth ")},"dispRandomForest");export default function x(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Separate".',h(t.setting.ml.configElement,t)}p(x,"default");
