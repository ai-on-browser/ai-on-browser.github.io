import{RandomForestClassifier,RandomForestRegressor}from"../../lib/model/random_forest.js";var dispRandomForest=function(t,e){e.setting.ml.reference={title:"Random forest (Wikipedia)",url:"https://en.wikipedia.org/wiki/Random_forest"};const n=e.task;let a=null;const p=function(){let t=a.predict(e.testInput(4));e.testResult(t)},r="CF"===n?["CART","ID3"]:["CART"];t.append("select").attr("name","method").selectAll("option").data(r).enter().append("option").attr("value",(t=>t)).text((t=>t)),t.append("span").text(" Tree #"),t.append("input").attr("type","number").attr("name","tree_num").property("value",50).attr("min",1).attr("max",200),t.append("span").text(" Sampling rate "),t.append("input").attr("type","number").attr("name","srate").property("value",.2).attr("min",.1).attr("max",1).attr("step",.1),t.append("input").attr("type","button").attr("value","Initialize").on("click",(()=>{if(0===e.datas.length)return a=null,void t.select("[name=depthnumber]").text("0");const r=+t.select("input[name=tree_num]").property("value"),i=+t.select("input[name=srate]").property("value");if("CF"===n){const e=t.select("[name=method]").property("value");a=new RandomForestClassifier(r,i,e)}else a=new RandomForestRegressor(r,i);a.init(e.trainInput,e.trainOutput.map((t=>t[0]))),p(),t.select("[name=depthnumber]").text(a.depth)})),t.append("input").attr("type","button").attr("value","Separate").on("click",(()=>{a&&(a.fit(),p(),t.select("[name=depthnumber]").text(a.depth))})),t.append("span").attr("name","depthnumber").text("0"),t.append("span").text(" depth ")};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Separate".',dispRandomForest(t.setting.ml.configElement,t)}