var o=Object.defineProperty;var c=(e,t)=>o(e,"name",{value:t,configurable:!0});import{RadiusNeighbor as l,RadiusNeighborRegression as m,SemiSupervisedRadiusNeighbor as R}from"../../lib/model/radius_neighbor.js";var g=c(function(e,t){const u=t.task,d=c(function(){const n=+e.select("[name=r]").property("value"),p=e.select("[name=metric]").property("value");if(u==="CF"){const i=new l(n,p);i.fit(t.trainInput,t.trainOutput.map(s=>s[0]));const a=i.predict(t.testInput(4));t.testResult(a.map(s=>s??-1))}else if(u==="RG"){const i=t.datas.dimension,a=new m(n,p);a.fit(t.trainInput,t.trainOutput.map(r=>r[0]));const s=a.predict(t.testInput(i===1?1:4));t.testResult(s.map(r=>r??-1))}else if(u==="SC"){const i=new R(n,p);i.fit(t.trainInput,t.trainOutput.map(a=>a[0])),t.trainResult=i.predict()}},"calc");e.append("select").attr("name","metric").selectAll("option").data(["euclid","manhattan","chebyshev"]).enter().append("option").attr("value",n=>n).text(n=>n),e.append("span").text(" r = "),e.append("input").attr("type","number").attr("name","r").attr("value",.2).attr("min",0).attr("max",100).attr("step",.1),e.append("input").attr("type","button").attr("value","Calculate").on("click",d)},"dispRN");export default function v(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".',g(e.setting.ml.configElement,e)}c(v,"default");
