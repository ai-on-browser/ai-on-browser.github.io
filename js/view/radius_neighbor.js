import{RadiusNeighbor,RadiusNeighborRegression,SemiSupervisedRadiusNeighbor}from"../../lib/model/radius_neighbor.js";var dispRN=function(t,e){const a=e.task;t.append("select").attr("name","metric").selectAll("option").data(["euclid","manhattan","chebyshev"]).enter().append("option").attr("value",(t=>t)).text((t=>t)),t.append("span").text(" r = "),t.append("input").attr("type","number").attr("name","r").attr("value",.2).attr("min",0).attr("max",100).attr("step",.1),t.append("input").attr("type","button").attr("value","Calculate").on("click",(function(){const n=+t.select("[name=r]").property("value"),i=t.select("[name=metric]").property("value");if("CF"===a){const t=new RadiusNeighbor(n,i);t.fit(e.trainInput,e.trainOutput.map((t=>t[0])));const a=t.predict(e.testInput(4));e.testResult(a.map((t=>t??-1)))}else if("RG"===a){const t=e.datas.dimension,a=new RadiusNeighborRegression(n,i);a.fit(e.trainInput,e.trainOutput.map((t=>t[0])));const r=a.predict(e.testInput(1===t?1:4));e.testResult(r.map((t=>t??-1)))}else if("SC"===a){const t=new SemiSupervisedRadiusNeighbor(n,i);t.fit(e.trainInput,e.trainOutput.map((t=>t[0]))),e.trainResult=t.predict()}}))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispRN(t.setting.ml.configElement,t)}