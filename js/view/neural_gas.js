var g=Object.defineProperty;var r=(e,i)=>g(e,"name",{value:i,configurable:!0});import o from"../../lib/model/neural_gas.js";import m from"../controller.js";export default function v(e){e.setting.ml.usage='Click and add data point. Next, click "Add centroid" to add centroid. Finally, click "Step" button repeatedly.',e.setting.ml.reference={title:"Neural gas (Wikipedia)",url:"https://en.wikipedia.org/wiki/Neural_gas"};const i=new m(e);let t=new o;const a=r(()=>{const s=t.predict(e.testInput(4));e.testResult(s.map(n=>n+1)),c.value=t._l},"fitPoints"),p=i.stepLoopButtons().init(()=>{t=new o(c.value,d.value),u.value=t.size+" clusters",e.init()});i.input.button("Add centroid").on("click",()=>{t.add(e.trainInput);const s=t.predict(e.trainInput);e.trainResult=s.map(n=>n+1),e.centroids(t.centroids,t.centroids.map((n,l)=>l+1),{line:!0}),a(),u.value=t.size+" clusters"});const u=i.text("0 clusters");u.element.style.padding="0 10px";const c=i.input.number({label:" l ",max:10,step:.1,value:1}).on("change",()=>{t._l=c.value}),d=i.input.number({label:"*=",min:.01,max:1,step:.01,value:.99}).on("change",()=>{t._m=d.value});p.step(async()=>{if(t.size===0)return;t.fit(e.trainInput);const s=t.predict(e.trainInput);e.trainResult=s.map(n=>n+1),e.centroids(t.centroids,t.centroids.map((n,l)=>l+1),{line:!0,duration:100}),a(),await new Promise(n=>setTimeout(n,100))})}r(v,"default");
