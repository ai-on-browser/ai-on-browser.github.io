import SVM from"../../lib/model/svm.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".',e.setting.ml.reference={title:"Support vector machine (Wikipedia)",url:"https://en.wikipedia.org/wiki/Support_vector_machine"};const t=new Controller(e);let n=null,l=0;const i=t.select({values:["oneone","onerest"],value:"onerest"}),a=t.select(["gaussian","linear"]).on("change",(()=>{"gaussian"===a.value?o.element.style.display="inline":o.element.style.display="none"})),o=t.input.number({value:1,min:.01,max:10,step:.01}),s=t.stepLoopButtons().init((()=>{const t=[];"gaussian"===a.value&&t.push(o.value),n=new EnsembleBinaryModel((function(){return new SVM(a.value,t)}),i.value),n.init(e.trainInput,e.trainOutput.map((e=>e[0]))),l=0,e.init()})),r=t.select({label:" Iteration ",values:[1,10,100,1e3]});s.step((function(t){if(0===e.datas.length)return;for(let e=0;e<+r.value;e++)n.fit();const i=n.predict(e.testInput(4));e.testResult(i),l+=+r.value,t&&t()})).epoch((()=>l))}