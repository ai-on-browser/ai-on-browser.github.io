import SVM from"../../lib/model/svm.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".';const t=new Controller(e);let n=null,l=0;const a=t.select({values:["oneone","onerest"],value:"onerest"}),s=t.select(["gaussian","linear"]).on("change",(()=>{"gaussian"===s.value?i.element.style.display="inline":i.element.style.display="none"})),i=t.input.number({value:1,min:.01,max:10,step:.01}),o=t.stepLoopButtons().init((()=>{const t=[];"gaussian"===s.value&&t.push(i.value),n=new EnsembleBinaryModel((function(){return new SVM(s.value,t)}),a.value),n.init(e.trainInput,e.trainOutput.map((e=>e[0]))),l=0,e.init()})),u=t.select({label:" Iteration ",values:[1,10,100,1e3]});o.step((function(t){if(0===e.datas.length)return;for(let e=0;e<+u.value;e++)n.fit();const a=n.predict(e.testInput(4));e.testResult(a),l+=+u.value,t&&t()})).epoch((()=>l))}