import BoxCox from"../../lib/model/box_cox.js";var dispBoxCox=function(t,e){const a=()=>{const t=p.property("checked"),a=+o.property("value"),n=new BoxCox(a);t&&(n.fit(e.trainOutput),o.property("value",n._lambda[0])),e.trainResult=n.predict(e.trainOutput)};t.append("span").text("lambda");const p=t.append("input").attr("type","checkbox").attr("name","auto").attr("title","auto").property("checked",!0).on("change",(()=>{o.property("disabled",p.property("checked"))})),o=t.append("input").attr("type","number").attr("name","lambd").attr("value",.1).attr("step",.1).property("disabled",!0).on("change",a);t.append("input").attr("type","button").attr("value","Fit").on("click",a)};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',dispBoxCox(t.setting.ml.configElement,t)}