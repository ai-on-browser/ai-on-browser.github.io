import TightestPerceptron from"../../lib/model/tightest_perceptron.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Step".',e.setting.ml.reference={author:"Z. Wang, S. Vucetic",title:"Tighter perceptron with improved dual use of cached data for model representation and validation",year:2009};const t=new Controller(e);let n=null;const o=t.select(["oneone","onerest"]),l=t.select(["gaussian","polynomial"]),r=t.input.number({label:" b ",min:0,max:1e3,value:10}),i=t.select({values:["zero_one","hinge"],value:"hinge"});t.stepLoopButtons().init((()=>{n=null,e.init()})).step((t=>{n||(n=new EnsembleBinaryModel((function(){return new TightestPerceptron(r.value,l.value,i.value)}),o.value)),n.fit(e.trainInput,e.trainOutput.map((e=>e[0])));const a=n.predict(e.testInput(3));e.testResult(a),t&&t()})).epoch()}