import SVC from"../../lib/model/svc.js";var dispSVC=function(t,e){let n=null;t.append("select").attr("name","kernel").on("change",(function(){"gaussian"===d3.select(this).property("value")?t.select("input[name=gamma]").style("display","inline"):t.select("input[name=gamma]").style("display","none")})).selectAll("option").data(["gaussian","linear"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("input").attr("type","number").attr("name","gamma").attr("value",.1).attr("min",.01).attr("max",10).attr("step",.01),e.setting.ml.controller.stepLoopButtons().init((()=>{const a=t.select("[name=kernel]").property("value"),i=[];"gaussian"===a&&i.push(+t.select("input[name=gamma]").property("value")),n=new SVC(a,i),e.fit(((t,e)=>{n.init(t)})),e.init()})).step((a=>{e.fit(((e,i,p)=>{n.fit(),t.select("[name=clusters]").text(n.size);p(n.predict().map((t=>t+1))),a&&a()}))})).epoch(),t.append("span").text(" Clusters: "),t.append("span").attr("name","clusters")};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Fit" button.',dispSVC(t.setting.ml.configElement,t)}