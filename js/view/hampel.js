var h=Object.defineProperty;var r=(t,a)=>h(t,"name",{value:a,configurable:!0});import m from"../../lib/model/hampel.js";var g=r(function(t,a){const o=r(()=>{const c=+t.select("[name=k]").property("value"),l=+t.select("[name=th]").property("value"),i=a.trainInput,u=new m(c,l),p=[];for(let e=0;e<i.length;p[e++]=[]);for(let e=0;e<i[0].length;e++){const d=i.map(n=>n[e]),s=u.predict(d);for(let n=0;n<p.length;n++)p[n][e]=s[n]}a.trainResult=p},"fitModel");t.append("span").text("k"),t.append("input").attr("type","number").attr("name","k").attr("min",1).attr("max",100).attr("value",3).on("change",o),t.append("span").text(" threshold "),t.append("input").attr("type","number").attr("name","th").attr("min",0).attr("max",10).attr("value",3).attr("step",.1).on("change",o),t.append("input").attr("type","button").attr("value","Calculate").on("click",o)},"dispHampel");export default function k(t){t.setting.ml.usage='Click and add data point. Click "Calculate" to update.',g(t.setting.ml.configElement,t)}r(k,"default");
