var x=Object.defineProperty;var i=(t,e)=>x(t,"name",{value:e,configurable:!0});import y from"../../lib/model/niblack.js";var b=i(function(t,e){e.colorSpace="gray";const o=i(()=>{const g=+t.select("[name=n]").property("value"),d=+t.select("[name=k]").property("value"),h=e._step;e._step=1;const p=e.trainInput,k=new y(g,d),s=[];for(let a=0;a<p.length*p[0].length;a++)s[a]=[];for(let a=0;a<p[0][0].length;a++){const u=[];for(let n=0;n<p.length;n++)u[n]=p[n].map(r=>r[a]);const c=k.predict(u);for(let n=0,r=0;n<c.length;n++)for(let l=0;l<c[n].length;l++,r++)s[r].push(c[n][l]*255)}e.trainResult=s,e._step=h},"fitModel");t.append("span").text(" n "),t.append("input").attr("type","number").attr("name","n").attr("value",3).attr("min",3).attr("max",99).attr("step",2).on("change",o),t.append("span").text(" k "),t.append("input").attr("type","number").attr("name","k").attr("value",.1).attr("min",-100).attr("max",100).attr("step",.1).on("change",o),t.append("input").attr("type","button").attr("value","Fit").on("click",o)},"dispNiblackThresholding");export default function v(t){t.setting.ml.usage='Click "Fit" button.',b(t.setting.ml.configElement,t)}i(v,"default");
