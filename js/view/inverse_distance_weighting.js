var o=Object.defineProperty;var i=(t,e)=>o(t,"name",{value:e,configurable:!0});import l from"../../lib/model/inverse_distance_weighting.js";var g=i(function(t,e){e.setting.ml.reference={title:"Inverse distance weighting (Wikipedia)",url:"https://en.wikipedia.org/wiki/Inverse_distance_weighting"};const a=i(function(){const n=t.select("[name=metric]").property("value"),c=+t.select("[name=k]").property("value"),r=+t.select("[name=p]").property("value"),s=e.datas.dimension,p=new l(c,r,n);p.fit(e.trainInput,e.trainOutput.map(d=>d[0]));const u=p.predict(e.testInput(s===1?1:4));e.testResult(u)},"calcIDW");t.append("select").attr("name","metric").on("change",a).selectAll("option").data(["euclid","manhattan","chebyshev"]).enter().append("option").attr("value",n=>n).text(n=>n),t.append("span").text(" k = "),t.append("input").attr("type","number").attr("name","k").attr("value",2).attr("min",1).attr("max",100).on("change",a),t.append("span").text(" p = "),t.append("input").attr("type","number").attr("name","p").attr("value",2).attr("min",0).attr("max",100).on("change",a),t.append("input").attr("type","button").attr("value","Calculate").on("click",a)},"dispIDW");export default function v(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',g(t.setting.ml.configElement,t)}i(v,"default");
