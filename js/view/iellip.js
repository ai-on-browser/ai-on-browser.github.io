import{CELLIP,IELLIP}from"../../lib/model/iellip.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";var dispCELLIP=function(e,t){t.setting.ml.reference={author:"L. Yang, R. Jin, K. Ye",title:"Online Learning by Ellipsoid Method.",year:2009};e.append("select").attr("name","method").selectAll("option").data(["oneone","onerest"]).enter().append("option").property("value",(e=>e)).text((e=>e)),e.append("select").attr("name","type").on("change",(()=>{const t=e.select("[name=type]").property("value");e.selectAll(".params").style("display","none"),e.selectAll(`.${t.toLowerCase()}`).style("display",null)})).selectAll("option").data(["CELLIP","IELLIP"]).enter().append("option").property("value",(e=>e)).text((e=>e));const a=e.append("span").classed("params",!0).classed("cellip",!0);a.append("span").text(" gamma = "),a.append("input").attr("type","number").attr("name","gamma").attr("min",0).attr("max",10).attr("value",1).attr("step",.1),a.append("span").text(" a = "),a.append("input").attr("type","number").attr("name","a").attr("min",0).attr("max",1).attr("value",.5).attr("step",.1);const n=e.append("span").classed("params",!0).classed("iellip",!0).style("display","none");n.append("span").text(" b = "),n.append("input").attr("type","number").attr("name","b").attr("min",0).attr("max",1).attr("value",.5).attr("step",.1),n.append("span").text(" c = "),n.append("input").attr("type","number").attr("name","c").attr("min",0).attr("max",1).attr("value",.5).attr("step",.1),e.append("input").attr("type","button").attr("value","Calculate").on("click",(()=>{const a=e.select("[name=method]").property("value");let n;if("CELLIP"===e.select("[name=type]").property("value")){const t=+e.select("[name=gamma]").property("value"),p=+e.select("[name=a]").property("value");n=new EnsembleBinaryModel((function(){return new CELLIP(t,p)}),a)}else{const t=+e.select("[name=b]").property("value"),p=+e.select("[name=c]").property("value");n=new EnsembleBinaryModel((function(){return new IELLIP(t,p)}),a)}n.init(t.trainInput,t.trainOutput.map((e=>e[0]))),n.fit();const p=n.predict(t.testInput(3));t.testResult(p)}))};export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispCELLIP(e.setting.ml.configElement,e)}