var g=Object.defineProperty;var p=(t,a)=>g(t,"name",{value:a,configurable:!0});import x from"../../lib/model/gplvm.js";import v from"../controller.js";var y=p(function(t,a){const s=new v(a);let e=null;const i=p(()=>{if(!e){const u=a.dimension,o=+t.select("[name=alpha]").property("value"),l=+t.select("[name=sigma]").property("value"),c=+t.select("[name=ez]").property("value"),m=+t.select("[name=ea]").property("value"),d=+t.select("[name=ep]").property("value");e=new x(u,o,c,m,d,"gaussian",[1,l]),e.init(a.trainInput)}e.fit();const n=e.predict(a.trainInput);a.trainResult=n},"fitModel"),r=t.append("span");r.append("select").attr("name","kernel").selectAll("option").data(["gaussian"]).enter().append("option").attr("value",n=>n).text(n=>n),r.append("span").append("span").text(" sigma = ").append("input").attr("type","number").attr("name","sigma").attr("value",1).attr("min",0).attr("max",10).attr("step",.1),t.append("span").text(" alpha = ").append("input").attr("type","number").attr("name","alpha").attr("value",.05).attr("min",0).attr("max",10).attr("step",.01),t.append("span").text(" ez = ").append("input").attr("type","number").attr("name","ez").attr("value",1).attr("min",0).attr("max",10).attr("step",.1),t.append("span").text(" ea = ").append("input").attr("type","number").attr("name","ea").attr("value",.005).attr("min",0).attr("max",10).attr("step",.001),t.append("span").text(" ep = ").append("input").attr("type","number").attr("name","ep").attr("value",.02).attr("min",0).attr("max",10).attr("step",.001),s.stepLoopButtons().init(()=>{e=null,a.init()}).step(i).epoch()},"dispGPLVM");export default function b(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',y(t.setting.ml.configElement,t)}p(b,"default");
