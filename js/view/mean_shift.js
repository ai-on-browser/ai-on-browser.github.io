import MeanShift from"../../lib/model/mean_shift.js";import Controller from"../controller.js";import{getCategoryColor}from"../utils.js";export default function(t){t.setting.ml.usage='Click and add data point. Finally, click "Step" button repeatedly.';const e=t.svg.insert("g",":first-child").attr("class","centroids").attr("opacity",.8),a=new Controller(t);let r=[];const o=t.width/(t.datas.domain[0][1]-t.datas.domain[0][0]);let l=new MeanShift(50,10);const i=()=>{const e=l.predict();t.trainResult=e.map((t=>t+1));for(let t=0;t<r.length;t++)r[t].attr("stroke",getCategoryColor(e[t]+1)).attr("cx",l._centroids[t][0]*o).attr("cy",l._centroids[t][1]*o)},n=a.input.number({min:0,max:10,step:.01,value:.1});a.stepLoopButtons().init((()=>{l.h=n.value,l.threshold=s.value;let a=t.trainInput;"SG"===t.task&&(a=a.flat()),l.init(a),"SG"!==t.task&&(r.forEach((t=>t.remove())),r=t.datas.points.map((t=>e.append("circle").attr("cx",t.at[0]*o).attr("cy",t.at[1]*o).attr("r",l.h*o).attr("stroke","black").attr("fill-opacity",0).attr("stroke-opacity",.5)))),i(),c.value=l.categories})).step((t=>{null!==l&&(l.fit(),i(),c.value=l.categories,t&&t())}));const s=a.input.number({min:0,max:10,step:.01,value:.01}).on("change",(()=>{l.threshold=s.value,i(),c.value=l.categories})),c=a.text({label:" clusters ",value:0});t.setting.terminate=()=>{e.remove()}}