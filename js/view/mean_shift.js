import MeanShift from"../../lib/model/mean_shift.js";import Controller from"../controller.js";import{getCategoryColor}from"../utils.js";export default function(t){t.setting.ml.usage='Click and add data point. Finally, click "Step" button repeatedly.',t.setting.ml.reference={title:"Mean shift (Wikipedia)",url:"https://en.wikipedia.org/wiki/Mean_shift"};const e=d3.select(t.svg).insert("g",":first-child").attr("class","centroids").attr("opacity",.8),r=new Controller(t);let a=[],i=new MeanShift(50,10);const n=()=>{const e=t._renderer[0].scale?.[0]??0,r=i.predict(l.value);t.trainResult=r.map((t=>t+1));for(let t=0;t<a.length;t++)a[t].attr("stroke",getCategoryColor(r[t]+1)).attr("cx",i._centroids[t][0]*e).attr("cy",i._centroids[t][1]*e)},o=r.input.number({min:0,max:10,step:.01,value:.1});r.stepLoopButtons().init((()=>{const r=t._renderer[0].scale?.[0]??0;i=new MeanShift(o.value);let l=t.trainInput;"SG"===t.task&&(l=l.flat()),i.init(l),"SG"!==t.task&&r>0&&(a.forEach((t=>t.remove())),a=t._renderer[0].points.map((t=>e.append("circle").attr("cx",t.at[0]*r).attr("cy",t.at[1]*r).attr("r",i.h*r).attr("stroke","black").attr("fill-opacity",0).attr("stroke-opacity",.5)))),n(),s.value=i.categories})).step((t=>{null!==i&&(i.fit(),n(),s.value=i.categories,t&&t())}));const l=r.input.number({min:0,max:10,step:.01,value:.01}).on("change",(()=>{n(),s.value=i.categories})),s=r.text({label:" clusters ",value:0});t.setting.terminate=()=>{e.remove()}}