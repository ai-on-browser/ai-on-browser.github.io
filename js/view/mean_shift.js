var p=Object.defineProperty;var u=(e,n)=>p(e,"name",{value:n,configurable:!0});import _ from"../../lib/model/mean_shift.js";import k from"../controller.js";import{getCategoryColor as w}from"../utils.js";export default function A(e){e.setting.ml.usage='Click and add data point. Finally, click "Step" button repeatedly.',e.setting.ml.reference={title:"Mean shift (Wikipedia)",url:"https://en.wikipedia.org/wiki/Mean_shift"};let n=null;e.task!=="SG"&&(n=document.createElementNS("http://www.w3.org/2000/svg","g"),e.svg.insertBefore(n,e.svg.firstChild),n.classList.add("centroids"),n.setAttribute("opacity",.8));const o=new k(e);let l=[],s=null;const a=u(()=>{const c=s.predict(d.value);e.trainResult=c.map(t=>t+1);for(let t=0;t<l.length;t++){const r=e._renderer[0].toPoint(e.invertScale(s._centroids[t]));l[t].setAttribute("stroke",w(c[t]+1)),l[t].setAttribute("cx",r[0]),l[t].setAttribute("cy",r[1])}},"plot"),g=o.input.number({label:"h",min:0,max:10,step:.01,value:.1}),d=o.input.number({label:"threshold",min:0,max:10,step:.01,value:.01});o.stepLoopButtons().init(()=>{const c=e._renderer[0].scale?.[0]??0;s=new _(g.value,d.value);let t=e.trainInput;if(e.task==="SG"&&(t=t.flat()),s.init(t),e.task!=="SG"&&c>0){const r=e.invertScale([Array(e.datas.dimension).fill(1),Array(e.datas.dimension).fill(2)]),h=r[1][e._renderer[0]._select[0]]-r[0][e._renderer[0]._select[0]],b=r[1][e._renderer[0]._select[1]]-r[0][e._renderer[0]._select[1]];l.forEach(i=>i.remove()),l=e._renderer[0].points.map(()=>{const i=document.createElementNS("http://www.w3.org/2000/svg","ellipse");return i.setAttribute("rx",s.h*c*h),i.setAttribute("ry",s.h*c*b),i.setAttribute("stroke","black"),i.setAttribute("fill-opacity",0),i.setAttribute("stroke-opacity",.5),n.append(i),i})}a(),v.value=s.categories}).step(()=>{s!==null&&(s.fit(),a(),v.value=s.categories)});const v=o.text({label:" clusters ",value:0});return()=>{n?.remove()}}u(A,"default");
