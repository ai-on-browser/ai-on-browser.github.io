var l=Object.defineProperty;var p=(t,n)=>l(t,"name",{value:n,configurable:!0});import _ from"../../lib/model/isodata.js";import k from"../controller.js";var v=p(function(t,n){const s=new k(n);let e=null;const u=p(i=>{if(!e){const a=+t.select("[name=init_k]").property("value"),r=+t.select("[name=max_k]").property("value"),c=+t.select("[name=min_k]").property("value"),m=+t.select("[name=min_n]").property("value"),o=+t.select("[name=spl_std]").property("value"),x=+t.select("[name=merge_dist]").property("value");e=new _(a,c,r,m,o,x),e.init(n.trainInput)}e.fit(n.trainInput);const d=e.predict(n.trainInput);n.trainResult=d.map(a=>a+1),t.select("[name=clusters]").text(e.size),n.centroids(e.centroids,e.centroids.map((a,r)=>r+1),{line:!0}),i&&i()},"fitModel");t.append("span").text(" init k "),t.append("input").attr("type","number").attr("name","init_k").attr("min",1).attr("max",100).attr("value",20),t.append("span").text(" max k "),t.append("input").attr("type","number").attr("name","max_k").attr("min",2).attr("max",100).attr("value",100),t.append("span").text(" min k "),t.append("input").attr("type","number").attr("name","min_k").attr("min",1).attr("max",100).attr("value",2),t.append("span").text(" min n "),t.append("input").attr("type","number").attr("name","min_n").attr("min",1).attr("max",100).attr("value",2),t.append("span").text(" split std "),t.append("input").attr("type","number").attr("name","spl_std").attr("min",.01).attr("max",100).attr("step",.01).attr("value",1),t.append("span").text(" merge dist "),t.append("input").attr("type","number").attr("name","merge_dist").attr("min",.01).attr("max",10).attr("step",.01).attr("value",.1),s.stepLoopButtons().init(()=>{e=null,t.select("[name=clusters]").text(0),n.init()}).step(u).epoch(),t.append("span").text(" Clusters: "),t.append("span").attr("name","clusters")},"dispISODATA");export default function y(t){t.setting.ml.usage='Click and add data point. Then, click "Step" button repeatedly.',v(t.setting.ml.configElement,t)}p(y,"default");
