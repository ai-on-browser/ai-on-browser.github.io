var v=Object.defineProperty;var i=(e,n)=>v(e,"name",{value:n,configurable:!0});import x from"../../lib/model/isodata.js";import k from"../controller.js";export default function _(e){e.setting.ml.usage='Click and add data point. Then, click "Step" button repeatedly.';const n=new k(e);let t=null;const a=i(()=>{t||(t=new x(s.value,o.value,m.value,r.value,c.value,p.value),t.init(e.trainInput)),t.fit(e.trainInput);const d=t.predict(e.trainInput);e.trainResult=d.map(u=>u+1),l.value=t.size,e.centroids(t.centroids,t.centroids.map((u,b)=>b+1),{line:!0})},"fitModel"),s=n.input.number({label:" init k ",min:1,max:100,value:20}),m=n.input.number({label:" max k ",min:2,max:100,value:100}),o=n.input.number({label:" min k ",min:1,max:100,value:2}),r=n.input.number({label:" min n ",min:1,max:100,value:2}),c=n.input.number({label:" split std ",min:.01,max:100,step:.01,value:1}),p=n.input.number({label:" merge dist ",min:.01,max:10,step:.01,value:.1});n.stepLoopButtons().init(()=>{t=null,l.value=0,e.init()}).step(a).epoch();const l=n.text({label:" Clusters: "})}i(_,"default");
