import S3VM from"../../lib/model/s3vm.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Currently, this model works only with binary classification. Click and add data point. Finally, click "Step" button repeatedly.',e.setting.ml.reference={author:"K. P. Bennett, A. Demiriz",title:"Semi-Supervised Support Vector Machines",year:1998};const t=new Controller(e);let n=null;const l=t.select(["gaussian","linear"]).on("change",(()=>{"gaussian"===l.value?a.element.style.display="inline":a.element.style.display="none"})),a=t.input.number({value:.1,min:.01,max:10,step:.01}),i=t.stepLoopButtons().init((()=>{const t=[];"gaussian"===l.value&&t.push(a.value),n=new S3VM(l.value,t),n.init(e.trainInput,e.trainOutput.map((e=>null==e[0]?null:1===e[0]?-1:1))),e.init()})),u=t.input.number({label:"learning rate = max(",min:0,max:1,step:.01,value:0}),s=t.input.number({label:", ",min:0,max:1,step:.1,value:.1}),r=t.input.number({label:" * ",min:0,max:1,step:.01,value:.999});t.text(") "),i.step((t=>{n._rate=Math.max(u.value,s.value),n.fit();const l=n.predict(e.testInput(4));s.value=s.value*r.value,e.testResult(l.map((e=>e<0?1:2))),t&&t()})).epoch()}