var d=Object.defineProperty;var s=(e,n)=>d(e,"name",{value:n,configurable:!0});import v from"../../lib/model/s3vm.js";import g from"../controller.js";export default function b(e){e.setting.ml.usage='Currently, this model works only with binary classification. Click and add data point. Finally, click "Step" button repeatedly.',e.setting.ml.reference={author:"K. P. Bennett, A. Demiriz",title:"Semi-Supervised Support Vector Machines",year:1998};const n=new g(e);let t=null;const o=s(()=>{t._rate=Math.max(m.value,l.value),t.fit();const a=t.predict(e.testInput(4));l.value=l.value*c.value,e.testResult(a.map(p=>p<0?1:2))},"fitModel"),u=n.select(["gaussian","linear"]).on("change",()=>{u.value==="gaussian"?i.element.style.display="inline":i.element.style.display="none"}),i=n.input.number({value:.1,min:.01,max:10,step:.01}),r=n.stepLoopButtons().init(()=>{t=new v({name:u.value,d:i.value}),t.init(e.trainInput,e.trainOutput.map(a=>a[0]==null?null:a[0]===1?-1:1)),e.init()}),m=n.input.number({label:"learning rate = max(",min:0,max:1,step:.01,value:0}),l=n.input.number({label:", ",min:0,max:1,step:.1,value:.1}),c=n.input.number({label:" * ",min:0,max:1,step:.01,value:.999});n.text(") "),r.step(o).epoch()}s(b,"default");
