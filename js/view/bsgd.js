import BSGD,{MulticlassBSGD}from"../../lib/model/bsgd.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Step".',e.setting.ml.reference={author:"Z. Wang, K. Crammer, S. Vucetie",title:"Breaking the Curse of Kernelization: Budgeted Stochastic Gradient Descent for Large-Scale SVM Training",year:2012};const t=new Controller(e);let l=null;const n=t.select(["oneone","onerest","multiclass"]),a=t.select(["gaussian","polynomial"]),i=t.select(["removal","projection","merging"]),u=t.input.number({label:" B ",min:0,max:100,value:10}),r=t.input.number({label:" eta ",min:0,max:100,step:.1,value:1}),o=t.input.number({label:" lambda ",min:0,max:100,step:.1,value:.1});t.stepLoopButtons().init((()=>{l=null,e.init()})).step((t=>{l||(l="multiclass"===n.value?new MulticlassBSGD(u.value,r.value,o.value,i.value,a.value):new EnsembleBinaryModel((function(){return new BSGD(u.value,r.value,o.value,i.value,a.value)}),n.value)),l.fit(e.trainInput,e.trainOutput.map((e=>e[0])));const s=l.predict(e.testInput(3));e.testResult(s),t&&t()})).epoch()}