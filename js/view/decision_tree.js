var g=Object.defineProperty;var d=(i,t)=>g(i,"name",{value:t,configurable:!0});import f from"../../lib/util/matrix.js";import{DecisionTreeClassifier as v,DecisionTreeRegression as w}from"../../lib/model/decision_tree.js";import A from"../controller.js";import{getCategoryColor as k}from"../utils.js";class b{static{d(this,"DecisionTreePlotter")}constructor(t){this._platform=t,this._mode=t.task,this._svg=t.svg,this._r=null,this._lineEdge=[]}remove(){this._svg.querySelector(".separation")?.remove()}plot(t){if(this._svg.querySelector(".separation")?.remove(),this._platform.datas.length!==0&&(this._r=document.createElementNS("http://www.w3.org/2000/svg","g"),this._r.classList.add("separation"),this._platform.datas.dimension===1?this._svg.append(this._r):(this._svg.insertBefore(this._r,this._svg.firstChild),this._r.setAttribute("opacity",.5)),this._lineEdge=[],this._dispRange(t._tree),this._platform.datas.dimension===1)){const r=d(e=>{let s="";for(let n=0;n<e.length;n++)s+=`${n===0?"M":"L"}${e[n][0]},${e[n][1]}`;return s},"line"),o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("stroke","red"),o.setAttribute("fill-opacity",0),o.setAttribute("d",r(this._lineEdge)),this._r.append(o)}}_dispRange(t,r){if(r=r||this._platform.datas.domain,t.children.length===0){let o=0,e=0;if(this._mode==="CF"?t.value.forEach((s,n)=>{s>e&&(e=s,o=n)}):o=t.value,this._platform.datas.dimension===1){const s=this._platform._renderer[0].toPoint([r[0][0],o]),n=this._platform._renderer[0].toPoint([r[0][1],o]);this._lineEdge.push(s),this._lineEdge.push(n)}else{const s=this._platform._renderer[0].toPoint([r[0][0],r[1][0]]),n=this._platform._renderer[0].toPoint([r[0][1],r[1][1]]),a=document.createElementNS("http://www.w3.org/2000/svg","rect");a.setAttribute("x",s[0]),a.setAttribute("y",s[1]),a.setAttribute("width",n[0]-s[0]),a.setAttribute("height",n[1]-s[1]),a.setAttribute("fill",k(o)),this._r.append(a)}}else t.children.forEach((o,e)=>{let s=[[].concat(r[0]),[].concat(r[1])],n=e===0?1:0;s[t.feature][n]=t.threshold,this._dispRange(o,s)})}}export default function C(i){i.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Separate".',i.setting.ml.reference={title:"Decision tree (Wikipedia)",url:"https://en.wikipedia.org/wiki/Decision_tree"};const t=new A(i),r=i.task,o=new b(i);let e=null;const s=d(function(){if(i.task==="FS"){const l=e.importance().map((c,p)=>[c,p]);l.sort((c,p)=>p[0]-c[0]);const h=i.dimension,_=l.map(c=>c[1]).slice(0,h),m=f.fromArray(i.trainInput);i.trainResult=m.col(_).toArray()}else if(i.datas.dimension<=2)o.plot(e);else{let l=e.predict(i.testInput(2));i.testResult(l)}i.evaluate((l,h)=>{h(e.predict(l))})},"dispRange"),n=r==="CF"?["CART","ID3"]:["CART"],a=t.select(n);t.input.button("Initialize").on("click",()=>{r==="CF"?e=new v(a.value):e=new w,e.init(i.trainInput,i.trainOutput.map(l=>l[0])),s(),u.value=e.depth}),t.input.button("Separate").on("click",()=>{e&&(e.fit(),s(),u.value=e.depth)});const u=t.text("0");t.text(" depth "),i.setting.terminate=()=>{o.remove()}}d(C,"default");
