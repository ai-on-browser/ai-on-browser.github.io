import{Matrix}from"../../lib/util/math.js";import BayesianNetwork from"../../lib/model/bayesian_network.js";var dispQuadraticDiscriminant=function(t,a){t.append("span").text(" discrete = "),t.append("input").attr("type","number").attr("name","discrete").attr("value",10).attr("min",2).attr("max",100),t.append("input").attr("type","button").attr("value","Calculate").on("click",(e=>{a.fit(((n,i)=>{const r=+t.select("[name=discrete]").property("value"),l=Matrix.fromArray(n),o=l.max(),p=l.min();n=(n=n.map((t=>t.map((t=>Math.floor((t-p)/(o-p)*r)))))).map(((t,a)=>[...t,...i[a]]));const m=new BayesianNetwork(1);m.fit(n);const c=[...new Set(i.map((t=>t[0])))];a.predict(((t,a)=>{t=t.map((t=>t.map((t=>Math.floor((t-p)/(o-p)*r)))));const n=[];for(let a=0;a<t.length;a++)for(let e=0;e<c.length;e++)n.push([...t[a],c[e]]);const i=m.probability(n),l=[];for(let t=0,a=0;t<i.length;a++){let e=-1/0;l[a]=-1;for(let n=0;n<c.length;n++,t++)i[t]>e&&(e=i[t],l[a]=c[n])}a(l),e&&e()}),3)}))}))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispQuadraticDiscriminant(t.setting.ml.configElement,t)}