import Matrix from"../../lib/util/matrix.js";import BayesianNetwork from"../../lib/model/bayesian_network.js";var dispQuadraticDiscriminant=function(t,a){t.append("span").text(" discrete = "),t.append("input").attr("type","number").attr("name","discrete").attr("value",10).attr("min",2).attr("max",100),t.append("input").attr("type","button").attr("value","Calculate").on("click",(()=>{let e=a.trainInput,n=a.trainOutput;const i=+t.select("[name=discrete]").property("value"),r=Matrix.fromArray(e),l=r.max(),o=r.min();e=e.map((t=>t.map((t=>Math.floor((t-o)/(l-o)*i))))),e=e.map(((t,a)=>[...t,...n[a]]));const p=new BayesianNetwork(1);p.fit(e);const s=[...new Set(n.map((t=>t[0])))];let m=a.testInput(3);m=m.map((t=>t.map((t=>Math.floor((t-o)/(l-o)*i)))));const c=[];for(let t=0;t<m.length;t++)for(let a=0;a<s.length;a++)c.push([...m[t],s[a]]);const u=p.probability(c),d=[];for(let t=0,a=0;t<u.length;a++){let e=0;d[a]=-1;for(let n=0;n<s.length;n++,t++)u[t]>e&&(e=u[t],d[a]=s[n])}a.testResult(d)}))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispQuadraticDiscriminant(t.setting.ml.configElement,t)}