var x=Object.defineProperty;var l=(e,i)=>x(e,"name",{value:i,configurable:!0});import y from"../../lib/model/ranknet.js";import b from"../controller.js";export default function f(e){e.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',e.setting.ml.reference={author:"C. Burges, T. Shaked, E. Renshaw, A. Lazier, M. Deeds, N. Hamilton, G. Hullender",title:"Learning to Rank using Gradient Descent",year:2005};const i=new b(e);let a=null;const h=l(()=>{if(!a)return;const s=e.trainInput,o=e.trainOutput,u=[],r=[],c=[];for(let t=0;t<s.length;t++)for(let n=Math.max(0,t-5);n<Math.min(s.length,t+5);n++)t!==n&&(u.push(s[t]),r.push(s[n]),c.push(Math.sign(o[t]-o[n])));a.fit(u,r,c);const d=a.predict(e.testInput(4)),v=d.reduce((t,n)=>Math.min(t,n),1/0);e.testResult(d.map(t=>t-v+1))},"fitModel"),p=i.array({label:" Hidden Layers ",type:"number",values:[10],default:10,min:1,max:100}),m=i.select({label:" Activation ",values:["sigmoid","tanh","relu","identity"]}),g=i.input.number({label:" Learning rate ",value:.1,min:0,max:100,step:.1});i.stepLoopButtons().init(()=>{a=new y(p.value,m.value,g.value),e.init()}).step(h).epoch()}l(f,"default");
