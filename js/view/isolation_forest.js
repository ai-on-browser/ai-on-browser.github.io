var l=Object.defineProperty;var s=(t,e)=>l(t,"name",{value:e,configurable:!0});import d from"../../lib/model/isolation_forest.js";var h=s(function(t,e){e.setting.ml.reference={author:"F. T. Liu, K. M. Ting, Z. H. Zhou",title:"Isolation Forest",year:2008};let n=null;const o=s(function(){const p=+t.select("input[name=tree_num]").property("value"),i=+t.select("input[name=srate]").property("value"),a=+t.select("input[name=threshold]").property("value");n=new d(p,i,a),n.fit(e.trainInput);const r=n.predict(e.trainInput).map(u=>u>a);e.trainResult=r;const c=n.predict(e.testInput(3)).map(u=>u>a);e.testResult(c)},"calcIsolationForest");t.append("span").text(" Tree #"),t.append("input").attr("type","number").attr("name","tree_num").property("value",100).attr("min",1).attr("max",1e3),t.append("span").text(" Sampling rate "),t.append("input").attr("type","number").attr("name","srate").property("value",.6).attr("min",.1).attr("max",1).attr("step",.1),t.append("input").attr("type","button").attr("value","Calculate").on("click",o),t.append("span").text(" threshold = "),t.append("input").attr("type","number").attr("name","threshold").attr("value",.5).attr("min",0).attr("max",1).property("required",!0).attr("step",.01).on("change",()=>{const p=+t.select("input[name=threshold]").property("value"),i=n.predict(e.trainInput).map(r=>r>p);e.trainResult=i;const a=n.predict(e.testInput(3)).map(r=>r>p);e.testResult(a)})},"dispIsolationForest");export default function y(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',h(t.setting.ml.configElement,t)}s(y,"default");
