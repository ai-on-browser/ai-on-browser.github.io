var m=Object.defineProperty;var r=(t,n)=>m(t,"name",{value:n,configurable:!0});import x from"../../lib/model/fuzzy_cmeans.js";import y from"../../lib/util/matrix.js";import g from"../controller.js";var f=r(function(t,n){const s=new g(n);let e=null;const c=r((a,i)=>{a&&e.fit();const u=y.fromArray(e.predict());n.trainResult=u.argmax(1).value.map(o=>o+1),n.centroids(e._c,e._c.map((o,l)=>l+1),{line:!0}),i&&i()},"fitModel");t.append("span").text("m"),t.append("input").attr("type","number").attr("name","m").attr("max",10).attr("min",1.1).attr("step",.1).attr("value",2);const d=r(()=>{e.add(),t.select("[name=clusternumber]").text(e._c.length+" clusters"),n.centroids(e._c,e._c.map((a,i)=>i+1),{line:!0}),c(!1)},"addCentroid"),p=s.stepLoopButtons().init(()=>{const a=+t.select("[name=m]").property("value");e=new x(a),e.init(n.trainInput),n.init(),d()});t.append("input").attr("type","button").attr("value","Add centroid").on("click",d),t.append("span").attr("name","clusternumber").style("padding","0 10px").text("0 clusters"),p.step(a=>{c(!0,a)}).epoch()},"dispFuzzyCMeans");export default function C(t){t.setting.ml.usage='Click and add data point. Next, click "Add centroid" to add centroid. Finally, click "Step" button repeatedly.',f(t.setting.ml.configElement,t)}r(C,"default");
