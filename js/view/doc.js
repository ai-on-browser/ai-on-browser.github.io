var d=Object.defineProperty;var a=(t,e)=>d(t,"name",{value:e,configurable:!0});import{DOC as r}from"../../lib/model/doc.js";import C from"../controller.js";export default function x(t){t.setting.ml.usage='Click and add data point. Then, click "Fit" button.',t.setting.ml.reference={author:"C. M. Procopiuc, M. Jones, P. K. Agarwal, T. M. Murali",title:"A monte carlo algorithm for fast projective clustering",year:2002};const e=new C(t),c=a(()=>{let l=null;i.value==="DOC"?l=new r(u.value,o.value,s.value):l=new r(u.value,o.value,s.value,m.value,p.value),l.fit(t.trainInput);const v=l.predict().map(b=>b+1);t.trainResult=v},"fitModel"),i=e.select(["DOC","FastDOC"]).on("change",()=>{n.element.style.display=i.value==="DOC"?"none":null}),u=e.input.number({label:" alpha ",min:0,max:1,step:.01,value:.1}),o=e.input.number({label:" beta ",min:0,max:.5,step:.01,value:.25}),s=e.input.number({label:" width ",min:0,max:1e3,step:.1,value:.1}),n=e.span();n.element.style.display="none";const m=n.input.number({label:" maxiter ",min:1,max:1e6,value:100}),p=n.input.number({label:" d0 ",min:1,max:100,value:2});e.input.button("Fit").on("click",c)}a(x,"default");
