var z=Object.defineProperty;var o=(e,n)=>z(e,"name",{value:n,configurable:!0});import d from"../../lib/model/genetic_algorithm.js";import C from"../controller.js";export default function R(e){e.setting.ml.usage='Click "step" to update.';const n=new C(e),a=e.type==="grid"?Math.max(...e.env.size):10;e.reward="achieve";let t=new d(e,100,a),i=0,u=[];e.reset(t),e.render(()=>t.get_score());const b=o(()=>{t.run(),u.push(t.top_agent().total_reward),t.next(T.value),e.reset(t),e.render(()=>t.get_score()),l.value=++i,v.value=" ["+u.slice(-10).reverse().join(",")+"]"},"step"),x=n.input.number({label:"Generation size",min:5,max:200,value:100}),_=n.input.number({label:"Resolution",min:2,max:100,value:a}),p=n.stepLoopButtons().init(()=>{t=new d(e,x.value,_.value),u=[],e.reset(t),e.render(()=>t.get_score()),l.value=i=0,v.value=""}),T=n.input.number({label:"Mutation rate",min:0,max:1,step:1e-4,value:.001});p.step(b);const l=n.text({label:" Generation: ",value:i});let s=!1;const c=n.input.button("Test").on("click",function(){if(s=!s,c.element.value=s?"Stop":"Test",s){const r=t.top_agent();let g=e.reset(r);o(function h(){const m=r.get_action(g),{state:w,done:G}=e.step(m,r);g=w,e.render(),s&&!G?setTimeout(()=>h(),0):(s=!1,c.element.value="Test")},"loop")()}}),v=n.text();return()=>{s=!1}}o(R,"default");
