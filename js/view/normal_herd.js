var l=Object.defineProperty;var a=(t,n)=>l(t,"name",{value:n,configurable:!0});import u from"../../lib/model/normal_herd.js";import d from"../../lib/model/ensemble_binary.js";var m=a(function(t,n){n.setting.ml.reference={author:"K. Crammer, D. Lee",title:"Learning via Gaussian Herding",year:2010};const r=a(()=>{const e=t.select("[name=method]").property("value"),o=t.select("[name=type]").property("value"),c=+t.select("[name=c]").property("value"),p=new d(function(){return new u(o,c)},e);p.init(n.trainInput,n.trainOutput.map(s=>s[0])),p.fit();const i=p.predict(n.testInput(3));n.testResult(i)},"calc");t.append("select").attr("name","method").selectAll("option").data(["oneone","onerest"]).enter().append("option").property("value",e=>e).text(e=>e),t.append("select").attr("name","type").selectAll("option").data(["full","exact","project","drop"]).enter().append("option").property("value",e=>e).text(e=>e),t.append("span").text(" c = "),t.append("input").attr("type","number").attr("name","c").attr("min",0).attr("max",10).attr("value",.1).attr("step",.1),t.append("input").attr("type","button").attr("value","Calculate").on("click",r)},"dispNormalHERD");export default function y(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',m(t.setting.ml.configElement,t)}a(y,"default");
