import NormalHERD from"../../lib/model/normal_herd.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";var dispNormalHERD=function(e,t){t.setting.ml.reference={author:"K. Crammer, D. Lee",title:"Learning via Gaussian Herding",year:2010};e.append("select").attr("name","method").selectAll("option").data(["oneone","onerest"]).enter().append("option").property("value",(e=>e)).text((e=>e)),e.append("select").attr("name","type").selectAll("option").data(["full","exact","project","drop"]).enter().append("option").property("value",(e=>e)).text((e=>e)),e.append("span").text(" c = "),e.append("input").attr("type","number").attr("name","c").attr("min",0).attr("max",10).attr("value",.1).attr("step",.1),e.append("input").attr("type","button").attr("value","Calculate").on("click",(()=>{const a=e.select("[name=method]").property("value"),n=e.select("[name=type]").property("value"),r=+e.select("[name=c]").property("value"),p=new EnsembleBinaryModel((function(){return new NormalHERD(n,r)}),a);p.init(t.trainInput,t.trainOutput.map((e=>e[0]))),p.fit();const l=p.predict(t.testInput(3));t.testResult(l)}))};export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispNormalHERD(e.setting.ml.configElement,e)}