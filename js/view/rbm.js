import{RBM,GBRBM}from"../../lib/model/rbm.js";import Controller from"../controller.js";var dispRBM=function(t,e){e.setting.ml.reference={title:"Restricted Boltzmann machine (Wikipedia)",url:"https://en.wikipedia.org/wiki/Restricted_Boltzmann_machine"};const n=new Controller(e);let a=null,p=null,i=null,r=1;"GR"===e.task?t.append("input").attr("type","hidden").attr("name","type").attr("value","GBRBM"):t.append("select").attr("name","type").selectAll("option").data(["RBM","GBRBM"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text(" hidden nodes "),t.append("input").attr("type","number").attr("name","hiddens").attr("min",1).attr("max",100).attr("value",10),t.append("span").text(" learning rate "),t.append("input").attr("type","number").attr("name","lr").attr("min",.01).attr("max",10).attr("step",.01).attr("value",.01),n.stepLoopButtons().init((()=>{a=null,e.init()})).step((n=>{const l=e._step;e._step=8;let s=e.trainInput;if("DN"===e.task&&(s=[s.flat(2)]),!a){const n=t.select("[name=type]").property("value"),p=+t.select("[name=hiddens]").property("value"),i=+t.select("[name=lr]").property("value");"RBM"===n?(a=new RBM(p,i),r=255):(a=new GBRBM(p,i,"DN"===e.task),r=1)}a.fit(s),"GR"===e.task?(e.trainResult=a.predict(s),n&&n()):(p=[e.testInput(8).flat(2)],p=a.predict(p),i=t=>e.testResult(t[0].map((t=>t*r))),i(p),n&&n()),e._step=l})).epoch(),"GR"!==e.task&&(t.append("epan").text(" Estimate"),n.stepLoopButtons().init((()=>{a&&(p=[e.testInput(8).flat(2)],i=t=>e.testResult(t[0].map((t=>t*r))),i(p))})).step((t=>{a&&(p=a.predict(p),i(p),t&&t())})))};export default function(t){t.setting.ml.usage='Click "Fit" button. Then, click "estimate" button.',dispRBM(t.setting.ml.configElement,t)}