var y=Object.defineProperty;var s=(e,t)=>y(e,"name",{value:t,configurable:!0});import{RBM as h,GBRBM as k}from"../../lib/model/rbm.js";import v from"../controller.js";var g=s(function(e,t){t.setting.ml.reference={title:"Restricted Boltzmann machine (Wikipedia)",url:"https://en.wikipedia.org/wiki/Restricted_Boltzmann_machine"};const o=new v(t);let i=null,a=null,p=null,r=1;const B=s(n=>{const d=t._step;t._step=8;let u=t.trainInput;if(t.task==="DN"&&(u=[u.flat(2)]),!i){const c=e.select("[name=type]").property("value"),l=+e.select("[name=hiddens]").property("value"),R=+e.select("[name=lr]").property("value");c==="RBM"?(i=new h(l,R),r=255):(i=new k(l,R,t.task==="DN"),r=1)}i.fit(u),t.task==="GR"?(t.trainResult=i.predict(u),n&&n()):(a=[t.testInput(8).flat(2)],a=i.predict(a),p=s(c=>t.testResult(c[0].map(l=>l*r)),"pcb"),p(a),n&&n()),t._step=d},"fitModel");t.task==="GR"?e.append("input").attr("type","hidden").attr("name","type").attr("value","GBRBM"):e.append("select").attr("name","type").selectAll("option").data(["RBM","GBRBM"]).enter().append("option").property("value",n=>n).text(n=>n),e.append("span").text(" hidden nodes "),e.append("input").attr("type","number").attr("name","hiddens").attr("min",1).attr("max",100).attr("value",10),e.append("span").text(" learning rate "),e.append("input").attr("type","number").attr("name","lr").attr("min",.01).attr("max",10).attr("step",.01).attr("value",.01),o.stepLoopButtons().init(()=>{i=null,t.init()}).step(B).epoch(),t.task!=="GR"&&(e.append("epan").text(" Estimate"),o.stepLoopButtons().init(()=>{i&&(a=[t.testInput(8).flat(2)],p=s(n=>t.testResult(n[0].map(d=>d*r)),"pcb"),p(a))}).step(n=>{i&&(a=i.predict(a),p(a),n&&n())}))},"dispRBM");export default function x(e){e.setting.ml.usage='Click "Fit" button. Then, click "estimate" button.',g(e.setting.ml.configElement,e)}s(x,"default");
