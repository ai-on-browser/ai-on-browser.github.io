import{RBM,GBRBM}from"../../lib/model/rbm.js";import Controller from"../controller.js";var dispRBM=function(t,e){const n=new Controller(e);let a=null,p=null,r=null,l=1;"GR"===e.task?t.append("input").attr("type","hidden").attr("name","type").attr("value","GBRBM"):t.append("select").attr("name","type").selectAll("option").data(["RBM","GBRBM"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text(" hidden nodes "),t.append("input").attr("type","number").attr("name","hiddens").attr("min",1).attr("max",100).attr("value",10),t.append("span").text(" learning rate "),t.append("input").attr("type","number").attr("name","lr").attr("min",.01).attr("max",10).attr("step",.01).attr("value",.01),n.stepLoopButtons().init((()=>{a=null,e.init()})).step((n=>{e.fit(((i,o,s)=>{let d=i;if("DN"===e.task&&(d=[d.flat(2)]),!a){const n=t.select("[name=type]").property("value"),p=+t.select("[name=hiddens]").property("value"),r=+t.select("[name=lr]").property("value");"RBM"===n?(a=new RBM(p,r),l=255):(a=new GBRBM(p,r,"DN"===e.task),l=1)}a.fit(d),"GR"===e.task?(s(a.predict(d)),n&&n()):e.predict(((t,e)=>{p=[t.flat(2)],p=a.predict(p),r=t=>e(t[0].map((t=>t*l))),r(p),n&&n()}),8)}),8)})).epoch(),"GR"!==e.task&&(t.append("epan").text(" Estimate"),n.stepLoopButtons().init((()=>{a&&e.predict(((t,e)=>{p=[t.flat(2)],r=t=>e(t[0].map((t=>t*l))),r(p)}),8)})).step((t=>{a&&(p=a.predict(p),r(p),t&&t())})))};export default function(t){t.setting.ml.usage='Click "Fit" button. Then, click "estimate" button.',dispRBM(t.setting.ml.configElement,t)}