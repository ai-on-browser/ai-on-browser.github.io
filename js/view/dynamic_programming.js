var _=Object.defineProperty;var r=(t,o)=>_(t,"name",{value:o,configurable:!0});import i from"../../lib/model/dynamic_programming.js";import b from"../controller.js";export default function k(t){t.setting.ml.usage='Click "step" to update, click "move" to move agent.';const o=new b(t),c=t.type==="grid"?Math.max(...t.env.size):20;let e=new i(t,c),n=t.reset(e);t.render(()=>e.get_score());const l=r(()=>{e.update(p.value),t.render(()=>e.get_score())},"update"),u=o.input.number({label:"Resolution",min:2,max:100,value:c}),a=o.stepLoopButtons().init(()=>{e=new i(t,u.value),n=t.reset(e),t.render(()=>e.get_score())}),p=o.select(["value","policy"]);a.step(l).epoch(),o.input.button("Reset").on("click",()=>{n=t.reset(e),t.render(()=>e.get_score())});let s=!1;const g=o.input.button("Move").on("click",()=>{s=!s,g.value=s?"Stop":"Mode",r(function m(){if(s){const d=e.get_action(n),{state:f}=t.step(d,e);t.render(()=>e.get_score()),n=f,setTimeout(m,10)}},"loop")()});return()=>{s=!1}}r(k,"default");
