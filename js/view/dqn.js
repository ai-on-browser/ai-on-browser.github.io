var B=Object.defineProperty;var l=(e,s)=>B(e,"name",{value:s,configurable:!0});import Q from"../neuralnetwork_builder.js";import C from"../../lib/model/dqn.js";import E from"../controller.js";class f{static{l(this,"DQNCBAgent")}constructor(s,a,t,r,o,n){this._agent=new C(s,a,t,r),n&&n()}set method(s){this._agent.method=s}terminate(){}get_score(){return this._agent.get_score()}get_action(s,a=.002){return this._agent.get_action(s,a)}update(s,a,t,r,o,n,d){return this._agent.update(s,a,t,r,o,n,d)}}export default function L(e){e.setting.ml.usage='Click "step" to update.';let s=20;e.type==="grid"&&(e.env._reward={step:-1,wall:-1,goal:1,fail:-1},e.env._max_step=3e3,s=Math.max(...e.env.size));const a=new Q,t=new E(e),r=!1;let o=!1,n=null;e.reset(n);const d=l((i,c=!0)=>{if(!o){i&&i();return}const v=e.state(),_=n.get_action(v,Math.max(N.value,h.value*k.value)),{state:w,reward:S,done:b,invalid:T}=e.step(_);if(T){i&&i();return}const x=n.update(_,v,w,S,b,D.value,R.value);x!=null&&e.plotLoss(x);const z=l(()=>{(b||e.epoch%1e3===999)&&(h.value=h.value*k.value),i&&i(b)},"end_proc");c&&e.render(()=>n.get_score()),z()},"step"),m=l(i=>{if(!o){i&&i();return}e.reset(n),e.render(()=>n.get_score()),i&&i()},"reset");t.text(" Hidden Layers "),a.makeHtml(t,{optimizer:!0}),n=new f(e,s,a.layers,a.optimizer,r,()=>{o=!0,setTimeout(()=>{e.render(()=>n.get_score()),g.element.disabled=!1,p.element.disabled=!1},0)}),t.input.button("New agent").on("click",()=>{n.terminate(),n=new f(e,s,a.layers,a.optimizer,r,()=>{o=!0,m()}),h.value=1}),t.input.button("Reset").on("click",()=>m());const y=t.select(["DQN","DDQN"]).on("change",()=>{n.method=y.value}),N=t.input.number({label:"greedy rate = max(",min:0,max:1,step:.01,value:.01}),h=t.input.number({label:", ",min:0,max:1,step:.01,value:1}),k=t.input.number({label:" * ",min:0,max:1,step:.01,value:.995});t.text(") ");const D=t.input.number({label:" Learning rate ",min:0,max:100,step:.01,value:.001}),R=t.input.number({label:" Batch size ",min:1,max:100,value:10});t.input.button("Step").on("click",()=>d());let u=!1;const g=t.input.button("Epoch").on("click",()=>{u=!u,g.element.value=u?"Stop":"Epoch",p.element.disabled=u,u&&l(function i(){u?d(c=>{setTimeout(()=>c?m(i):i())}):setTimeout(()=>{e.render(()=>n.get_score()),g.element.value="Epoch"},0)},"loop")()});g.element.disabled=!0;const p=t.input.button("Skip").on("click",()=>{if(u=!u,p.element.value=u?"Stop":"Skip",g.element.disabled=u,u){let i=new Date().getTime();l(function c(){for(;u;){let v=!1;if(d(w=>{v=w,r&&(w?m(c):c())},!0),r)return;const _=new Date().getTime();if(v&&m(),_-i>200){i=_,setTimeout(c,0);return}}e.render(()=>n.get_score()),p.element.value="Skip"},"loop")()}});return p.element.disabled=!0,e.plotRewards(t.element),()=>{u=!1,n.terminate()}}l(L,"default");
