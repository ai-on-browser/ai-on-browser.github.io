import NeuralNetworkBuilder from"../neuralnetwork_builder.js";import DQNAgent from"../../lib/model/dqn.js";import Controller from"../controller.js";class DQNCBAgent{constructor(e,t,n,l,a,i){this._agent=new DQNAgent(e,t,n,l),i&&i()}set method(e){this._agent.method=e}terminate(){}get_score(e){const t=this._agent.get_score();e&&e(t)}get_action(e,t=.002,n){const l=this._agent.get_action(e,t);n&&n(l)}update(e,t,n,l,a,i,o,r){const s=this._agent.update(e,t,n,l,a,i,o);r&&r(s)}}var dispDQN=function(e,t){let n=20;"grid"===t.type&&(t.env._reward={step:-1,wall:-1,goal:1,fail:-1},t.env._max_step=3e3,n=Math.max(...t.env.size));const l=new NeuralNetworkBuilder,a=new Controller(t),i=!1;let o=!1,r=null;t.reset(r);const s=e=>{"grid"===t.type?r.get_score((n=>{t.render((()=>n)),e&&e()})):(t.render(),e&&e())},u=(e,n=!0)=>{if(!o)return void(e&&e());const l=t.state();r.get_action(l,Math.max(c.value,d.value*g.value),(a=>{const{state:i,reward:o,done:u,invalid:m}=t.step(a);m?e&&e():r.update(a,l,i,o,u,v.value,b.value,(l=>{null!=l&&t.plotLoss(l);const a=()=>{(u||t.epoch%1e3==999)&&(d.value=d.value*g.value),e&&e(u)};n?s(a):a()}))}))},m=e=>{o?(t.reset(r),s((()=>{e&&e()}))):e&&e()};e.append("span").text(" Hidden Layers "),l.makeHtml(e,{optimizer:!0}),r=new DQNCBAgent(t,n,l.layers,l.optimizer,i,(()=>{o=!0,setTimeout((()=>{s((()=>{e.selectAll("input").property("disabled",!1)}))}),0)})),a.input.button("New agent").on("click",(()=>{r.terminate(),r=new DQNCBAgent(t,n,l.layers,l.optimizer,i,(()=>{o=!0,m()})),d.value=1})),a.input.button("Reset").on("click",(()=>m()));const p=a.select(["DQN","DDQN"]).on("change",(()=>{r.method=p.value})),c=a.input.number({label:"greedy rate = max(",min:0,max:1,step:.01,value:.01}),d=a.input.number({label:", ",min:0,max:1,step:.01,value:1}),g=a.input.number({label:" * ",min:0,max:1,step:.01,value:.995});a.text(") ");const v=a.input.number({label:" Learning rate ",min:0,max:100,step:.01,value:.001}),b=a.input.number({label:" Batch size ",min:1,max:100,value:10});a.input.button("Step").on("click",(()=>u()));let h=!1;const w=a.input.button("Epoch").on("click",(()=>{h=!h,w.element.value=h?"Stop":"Epoch",_.element.disabled=h,h&&function e(){h?u((t=>{setTimeout((()=>t?m(e):e()))})):setTimeout((()=>{s((()=>{w.element.value="Epoch"}))}),0)}()}));w.element.disabled=!0;const _=a.input.button("Skip").on("click",(()=>{if(h=!h,_.element.value=h?"Stop":"Skip",w.element.disabled=h,h){let e=(new Date).getTime();!function t(){for(;h;){let n=!1;u((e=>{n=e}),!0);const l=(new Date).getTime();if(n&&m(),l-e>200)return e=l,void setTimeout(t,0)}s((()=>{_.element.value="Skip"}))}()}}));return _.element.disabled=!0,t.plotRewards(e),()=>{h=!1,r.terminate()}};export default function(e){e.setting.ml.usage='Click "step" to update.',e.setting.terminate=dispDQN(e.setting.ml.configElement,e)}