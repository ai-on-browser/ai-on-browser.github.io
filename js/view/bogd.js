import BOGD from"../../lib/model/bogd.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Step".',e.setting.ml.reference={author:"P. Zhao, J. Wang, P. Wu, R. Jin, S. C. H. Hoi",title:"Fast Bounded Online Gradient Descent Algorithms",year:2012};const n=new Controller(e);let t=null;const l=n.select(["oneone","onerest"]),a=n.select(["gaussian","polynomial"]),o=n.select({values:["uniform","nonuniform"],value:"nonuniform"}),i=n.select({values:["zero_one","hinge"],value:"hinge"}),u=n.input.number({label:" B ",min:0,max:100,value:10}),r=n.input.number({label:" eta ",min:0,max:100,step:.1,value:.2}),m=n.input.number({label:" lambda ",min:0,max:100,step:.1,value:.1}),s=n.input.number({label:" gamma ",min:0,max:1e3,step:.1,value:10});n.stepLoopButtons().init((()=>{t=null,e.init()})).step((n=>{t||(t=new EnsembleBinaryModel((function(){return new BOGD(u.value,r.value,m.value,s.value,o.value,a.value,i.value)}),l.value)),t.fit(e.trainInput,e.trainOutput.map((e=>e[0])));const p=t.predict(e.testInput(3));e.testResult(p),n&&n()})).epoch()}