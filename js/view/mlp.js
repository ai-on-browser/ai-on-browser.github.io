var L=Object.defineProperty;var c=(e,n)=>L(e,"name",{value:n,configurable:!0});import k from"../../lib/util/matrix.js";import I from"../controller.js";import{MLPClassifier as T,MLPRegressor as F}from"../../lib/model/mlp.js";export default function M(e){e.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.';const n=new I(e),i=e.task;let l=null;const g=c(async o=>{const s=x();let a=e.trainInput,r=e.trainOutput;const u=k.fromArray(a);if(i==="TP"){r=a.slice(s),a=[];for(let t=0;t<u.rows-s;t++)a.push(u.slice(t,t+s).value)}i==="CF"&&(r=r.map(t=>t[0]));const P=l.fit(a,r,+f.value,w.value,C.value);if(e.plotLoss(P),i==="TP"){let t=u.slice(u.rows-s).value;const p=[];for(;;){if(p.length>=d.value){e.trainResult=p,o&&o();return}const b=l.predict([t]);p.push(b[0]),t=t.slice(u.cols),t.push(...b[0])}}else{const t=l.predict(e.testInput(s===1?2:4));e.testResult(t),o&&o()}},"fitModel"),x=c(()=>i==="TP"?v.value:e.datas.dimension||2,"getInputDim");let v=null;i==="TP"&&(v=n.input.number({label:"window width",min:1,max:1e3,value:20}));const m=n.array({label:" Hidden Layers ",type:"number",values:[10],default:10,min:1,max:100}),h=n.select({label:" Activation ",values:["sigmoid","tanh","relu","elu","leaky_relu","gaussian","softplus","softsign","identity"]}),y=n.stepLoopButtons().init(()=>{e.datas.length!==0&&(i==="CF"?l=new T(m.value,h.value):l=new F(m.value,h.value),e.init())}),f=n.select({label:" Iteration ",values:[1,10,100,1e3,1e4]}),w=n.input.number({label:" Learning rate ",min:0,max:100,step:.01,value:.001}),C=n.input.number({label:" Batch size ",min:1,max:100,value:10});y.step(g).epoch(()=>l.epoch);let d;i==="TP"?d=n.input.number({label:" predict count",min:1,max:1e3,value:100}):d=n.input({type:"hidden",value:0}),e.setting.ternimate=()=>{l.terminate()}}c(M,"default");
