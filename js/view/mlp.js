var P=Object.defineProperty;var c=(e,i)=>P(e,"name",{value:i,configurable:!0});import L from"../../lib/util/matrix.js";import k from"../controller.js";import{MLPClassifier as I,MLPRegressor as T}from"../../lib/model/mlp.js";export default function F(e){e.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.';const i=new k(e),n=e.task;let l=null;const h=c(()=>{const s=f();let a=e.trainInput,o=e.trainOutput;const u=L.fromArray(a);if(n==="TP"){o=a.slice(s),a=[];for(let t=0;t<u.rows-s;t++)a.push(u.slice(t,t+s).value)}n==="CF"&&(o=o.map(t=>t[0]));const C=l.fit(a,o,+g.value,w.value,y.value);if(e.plotLoss(C),n==="TP"){let t=u.slice(u.rows-s).value;const d=[];for(;;){if(d.length>=r.value){e.trainResult=d;return}const b=l.predict([t]);d.push(b[0]),t=t.slice(u.cols),t.push(...b[0])}}else{const t=l.predict(e.testInput(s===1?2:4));e.testResult(t)}},"fitModel"),f=c(()=>n==="TP"?p.value:e.datas.dimension||2,"getInputDim");let p=null;n==="TP"&&(p=i.input.number({label:"window width",min:1,max:1e3,value:20}));const v=i.array({label:" Hidden Layers ",type:"number",values:[10],default:10,min:1,max:100}),m=i.select({label:" Activation ",values:["sigmoid","tanh","relu","elu","leaky_relu","gaussian","softplus","softsign","identity"]}),x=i.stepLoopButtons().init(()=>{e.datas.length!==0&&(n==="CF"?l=new I(v.value,m.value):l=new T(v.value,m.value),e.init())}),g=i.select({label:" Iteration ",values:[1,10,100,1e3,1e4]}),w=i.input.number({label:" Learning rate ",min:0,max:100,step:.01,value:.001}),y=i.input.number({label:" Batch size ",min:1,max:100,value:10});x.step(h).epoch(()=>l.epoch);let r;n==="TP"?r=i.input.number({label:" predict count",min:1,max:1e3,value:100}):r=i.input({type:"hidden",value:0})}c(F,"default");
