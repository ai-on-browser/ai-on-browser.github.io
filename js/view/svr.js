import SVR from"../../lib/model/svr.js";var dispSVR=function(t,e){let n=null,a=0;t.append("select").attr("name","kernel").on("change",(function(){"gaussian"===d3.select(this).property("value")?t.select("input[name=gamma]").style("display","inline"):t.select("input[name=gamma]").style("display","none")})).selectAll("option").data(["gaussian","linear"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("input").attr("type","number").attr("name","gamma").attr("value",.1).attr("min",.1).attr("max",10).attr("step",.1);const i=e.setting.ml.controller.stepLoopButtons().init((()=>{const i=t.select("[name=kernel]").property("value"),p=[];"gaussian"===i&&p.push(+t.select("input[name=gamma]").property("value")),e.fit(((t,e)=>{n=new SVR(i,p),n.init(t,e)})),a=0,e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),i.step((function(i){e.fit(((p,l,r)=>{let o=+t.select("[name=iteration]").property("value");for(let t=0;t<o;t++)n.fit();a+=o,e.predict(((t,e)=>{e(n.predict(t)),i&&i()}),8)}))})).epoch((()=>a))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispSVR(t.setting.ml.configElement,t)}