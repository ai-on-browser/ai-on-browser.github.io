import SVR from"../../lib/model/svr.js";import Controller from"../controller.js";var dispSVR=function(t,e){const n=new Controller(e);let a=null,p=0;t.append("select").attr("name","kernel").on("change",(function(){"gaussian"===d3.select(this).property("value")?t.select("input[name=gamma]").style("display","inline"):t.select("input[name=gamma]").style("display","none")})).selectAll("option").data(["gaussian","linear"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("input").attr("type","number").attr("name","gamma").attr("value",.1).attr("min",.1).attr("max",10).attr("step",.1);const l=n.stepLoopButtons().init((()=>{const n=t.select("[name=kernel]").property("value"),l=[];"gaussian"===n&&l.push(+t.select("input[name=gamma]").property("value")),a=new SVR(n,l),a.init(e.trainInput,e.trainOutput),p=0,e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),l.step((function(n){let l=+t.select("[name=iteration]").property("value");for(let t=0;t<l;t++)a.fit();p+=l;const i=a.predict(e.testInput(8));e.testResult(i),n&&n()})).epoch((()=>p))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispSVR(t.setting.ml.configElement,t)}