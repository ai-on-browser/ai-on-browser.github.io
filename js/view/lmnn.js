import LMNN from"../../lib/model/lmnn.js";import Controller from"../controller.js";var dispLMNN=function(t,e){const a=new Controller(e);let n=0,p=null;t.append("span").text(" gamma "),t.append("input").attr("type","number").attr("name","gamma").attr("value",5).attr("min",1).attr("max",1e3),t.append("span").text(" lambda "),t.append("input").attr("type","number").attr("name","lambda").attr("value",.5).attr("min",0).attr("max",10).attr("step",.1),t.select("[name=method]").property("value","multinomial");const r=a.stepLoopButtons().init((()=>{n=0;const a=+t.select("[name=gamma]").property("value"),r=+t.select("[name=lambda]").property("value");p=new LMNN(a,r),p.init(e.trainInput,e.trainOutput.map((t=>t[0]))),e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),r.step((a=>{if(!p)return;const r=+t.select("[name=iteration]").property("value");for(let t=0;t<r;t++)p.fit();const l=p.predict(e.testInput(4));e.testResult(l),n+=r,a&&a()})).epoch((()=>n))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispLMNN(t.setting.ml.configElement,t)}