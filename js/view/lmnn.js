import LMNN from"../../lib/model/lmnn.js";var dispLMNN=function(t,e){let a=0,n=null;t.append("span").text(" gamma "),t.append("input").attr("type","number").attr("name","gamma").attr("value",5).attr("min",1).attr("max",1e3),t.append("span").text(" lambda "),t.append("input").attr("type","number").attr("name","lambda").attr("value",.5).attr("min",0).attr("max",10).attr("step",.1),t.select("[name=method]").property("value","multinomial");const p=e.setting.ml.controller.stepLoopButtons().init((()=>{a=0;const p=+t.select("[name=gamma]").property("value"),i=+t.select("[name=lambda]").property("value");n=new LMNN(p,i),e.fit(((t,e)=>{n.init(t,e.map((t=>t[0])))})),e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),p.step((p=>{if(!n)return;const i=+t.select("[name=iteration]").property("value");e.fit((()=>{for(let t=0;t<i;t++)n.fit();e.predict(((t,e)=>{e(n.predict(t)),a+=i,p&&p()}),4)}))})).epoch((()=>a))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispLMNN(t.setting.ml.configElement,t)}