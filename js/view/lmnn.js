var c=Object.defineProperty;var r=(t,e)=>c(t,"name",{value:e,configurable:!0});import m from"../../lib/model/lmnn.js";import g from"../controller.js";var b=r(function(t,e){e.setting.ml.reference={title:"Large margin nearest neighbor (Wikipedia)",url:"https://en.wikipedia.org/wiki/Large_margin_nearest_neighbor"};const s=new g(e);let p=0,a=null;const d=r(n=>{if(!a)return;const i=+t.select("[name=iteration]").property("value");for(let l=0;l<i;l++)a.fit();const o=a.predict(e.testInput(4));e.testResult(o),p+=i,n&&n()},"fitModel");t.append("span").text(" gamma "),t.append("input").attr("type","number").attr("name","gamma").attr("value",5).attr("min",1).attr("max",1e3),t.append("span").text(" lambda "),t.append("input").attr("type","number").attr("name","lambda").attr("value",.5).attr("min",0).attr("max",10).attr("step",.1),t.select("[name=method]").property("value","multinomial");const u=s.stepLoopButtons().init(()=>{p=0;const n=+t.select("[name=gamma]").property("value"),i=+t.select("[name=lambda]").property("value");a=new m(n,i),a.init(e.trainInput,e.trainOutput.map(o=>o[0])),e.init()});t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",n=>n).text(n=>n),u.step(d).epoch(()=>p)},"dispLMNN");export default function y(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',b(t.setting.ml.configElement,t)}r(y,"default");
