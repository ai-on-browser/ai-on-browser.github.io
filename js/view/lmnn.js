import LMNN from"../../lib/model/lmnn.js";import Controller from"../controller.js";var dispLMNN=function(t,e){e.setting.ml.reference={title:"Large margin nearest neighbor (Wikipedia)",url:"https://en.wikipedia.org/wiki/Large_margin_nearest_neighbor"};const a=new Controller(e);let n=0,r=null;t.append("span").text(" gamma "),t.append("input").attr("type","number").attr("name","gamma").attr("value",5).attr("min",1).attr("max",1e3),t.append("span").text(" lambda "),t.append("input").attr("type","number").attr("name","lambda").attr("value",.5).attr("min",0).attr("max",10).attr("step",.1),t.select("[name=method]").property("value","multinomial");const i=a.stepLoopButtons().init((()=>{n=0;const a=+t.select("[name=gamma]").property("value"),i=+t.select("[name=lambda]").property("value");r=new LMNN(a,i),r.init(e.trainInput,e.trainOutput.map((t=>t[0]))),e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),i.step((a=>{if(!r)return;const i=+t.select("[name=iteration]").property("value");for(let t=0;t<i;t++)r.fit();const p=r.predict(e.testInput(4));e.testResult(p),n+=i,a&&a()})).epoch((()=>n))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispLMNN(t.setting.ml.configElement,t)}