var x=Object.defineProperty;var r=(t,e)=>x(t,"name",{value:e,configurable:!0});import A from"../neuralnetwork_builder.js";import T from"../../lib/model/a2c.js";import z from"../controller.js";class f{static{r(this,"A2CCBAgent")}constructor(e,u,o,c,a,i){this._agent=new T(e.env,u,50,o,c),i&&i()}set method(e){this._agent.method=e}terminate(){}get_score(){return this._agent.get_score()}get_action(e){return this._agent.get_action(e)}update(e,u,o){return this._agent.update(e,u,o)}}export default function B(t){t.setting.ml.usage='Click "step" to update.';const e=new z(t);let u=20;t.type==="grid"&&(t.env._max_step=1e3,u=Math.max(...t.env.size));const o=new A,c=!1;let a=!1,i=null,_=t.reset(i);const h=r((n,l=!0)=>{if(!a){n&&n();return}const p=i.get_action(_),{state:m,done:g}=t.step(p),S=i.update(g,v.value,b.value);t.plotLoss(S);const y=r(()=>{_=m,n&&n(g)},"end_proc");l&&t.render(()=>i.get_score()),y()},"step"),d=r(n=>{if(!a){n&&n();return}_=t.reset(i),t.render(()=>i.get_score()),n&&n()},"reset");e.text(" Hidden Layers "),o.makeHtml(e,{optimizer:!0}),i=new f(t,u,o.layers,o.optimizer,c,()=>{a=!0,setTimeout(()=>{t.render(()=>i.get_score());for(const n of e.element.querySelectorAll("input"))n.disabled=!1},0)}),e.input.button("New agent").on("click",()=>{i.terminate(),i=new f(t,u,o.layers,o.optimizer,c,()=>{a=!0,d()})}),e.input.button("Reset").on("click",()=>d());const v=e.input.number({label:" Learning rate ",min:0,max:100,step:.001,value:.001}),b=e.input.number({label:" Batch size ",min:1,max:100,value:10});e.input.button("Step").on("click",()=>h());let s=!1;const k=e.input.button("Epoch").on("click",()=>{s=!s,k.value=s?"Stop":"Epoch",w.element.disabled=s,s&&r(function n(){s?h(l=>{setTimeout(()=>l?d(n):n())}):setTimeout(()=>{t.render(()=>i.get_score()),k.value="Epoch"},0)},"loop")()}),w=e.input.button("Skip").on("click",()=>{if(s=!s,w.value=s?"Stop":"Skip",k.element.disabled=s,s){let n=new Date().getTime();r(function l(){for(;s;){let p=!1;if(h(g=>{p=g,c&&(g?d(l):l())},!0),c)return;const m=new Date().getTime();if(p&&d(),m-n>200){n=m,setTimeout(l,0);return}}t.render(()=>i.get_score()),w.value="Skip"},"loop")()}});t.plotRewards(e.element);for(const n of e.element.querySelectorAll("input"))n.disabled=!0;return()=>{s=!1,i.terminate()}}r(B,"default");
