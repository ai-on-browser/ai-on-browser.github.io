var T=Object.defineProperty;var p=(e,t)=>T(e,"name",{value:t,configurable:!0});import z from"../neuralnetwork_builder.js";import B from"../../lib/model/a2c.js";class A{static{p(this,"A2CCBAgent")}constructor(t,n,s,o,l,i){this._agent=new B(t.env,n,50,s,o),i&&i()}set method(t){this._agent.method=t}terminate(){}get_score(t){const n=this._agent.get_score();t&&t(n)}get_action(t,n){const s=this._agent.get_action(t);n&&n(s)}update(t,n,s,o){const l=this._agent.update(t,n,s);o&&o(l)}}var C=p(function(e,t){let n=20;t.type==="grid"&&(t.env._max_step=1e3,n=Math.max(...t.env.size));const s=new z,o=!1;let l=!1,i=null,y=t.reset(i);const c=p(a=>{t.type==="grid"?i.get_score(u=>{t.render(()=>u),a&&a()}):(t.render(),a&&a())},"render_score"),m=p((a,u=!0)=>{if(!l){a&&a();return}const g=+e.select("[name=learning_rate]").property("value"),f=+e.select("[name=batch]").property("value");i.get_action(y,_=>{const{state:v,done:w}=t.step(_);i.update(w,g,f,S=>{t.plotLoss(S);const x=p(()=>{y=v,a&&a(w)},"end_proc");u?c(x):x()})})},"step"),d=p(a=>{if(!l){a&&a();return}y=t.reset(i),c(()=>{a&&a()})},"reset");e.append("span").text(" Hidden Layers "),s.makeHtml(e,{optimizer:!0}),i=new A(t,n,s.layers,s.optimizer,o,()=>{l=!0,setTimeout(()=>{c(()=>{e.selectAll("input").property("disabled",!1)})},0)}),e.append("input").attr("type","button").attr("value","New agent").on("click",()=>{i.terminate(),i=new A(t,n,s.layers,s.optimizer,o,()=>{l=!0,d()}),e.select("[name=greedy_rate]").property("value",1)}),e.append("input").attr("type","button").attr("value","Reset").on("click",()=>d()),e.append("span").text(" Learning rate "),e.append("input").attr("type","number").attr("name","learning_rate").attr("min",0).attr("max",100).attr("step",.01).attr("value",.001),e.append("span").text(" Batch size "),e.append("input").attr("type","number").attr("name","batch").attr("value",10).attr("min",1).attr("max",100).attr("step",1),e.append("input").attr("type","button").attr("value","Step").on("click",()=>m());let r=!1;const h=e.append("input").attr("type","button").attr("value","Epoch").on("click",()=>{r=!r,h.attr("value",r?"Stop":"Epoch"),k.property("disabled",r),r&&p(function a(){r?m(u=>{setTimeout(()=>u?d(a):a())}):setTimeout(()=>{c(()=>{h.attr("value","Epoch")})},0)},"loop")()}),k=e.append("input").attr("type","button").attr("value","Skip").on("click",()=>{if(r=!r,k.attr("value",r?"Stop":"Skip"),h.property("disabled",r),r){let a=new Date().getTime();p(function u(){for(;r;){let g=!1;if(m(_=>{g=_,o&&(_?d(u):u())},!0),o)return;const f=new Date().getTime();if(g&&d(),f-a>200){a=f,setTimeout(u,0);return}}c(()=>{k.attr("value","Skip")})},"loop")()}});return t.plotRewards(e),e.selectAll("input").property("disabled",!0),()=>{r=!1,i.terminate()}},"dispA2C");export default function E(e){e.setting.ml.usage='Click "step" to update.',e.setting.terminate=C(e.setting.ml.configElement,e)}p(E,"default");
