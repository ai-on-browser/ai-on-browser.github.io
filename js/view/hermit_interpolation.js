import HermitInterpolation from"../../lib/model/hermit_interpolation.js";var dispHermitInterpolation=function(t,e){const a=function(){const a=+t.select("[name=tension]").property("value"),n=+t.select("[name=bias]").property("value");e.fit(((t,i)=>{let p=new HermitInterpolation(a,n);p.fit(t.map((t=>t[0])),i.map((t=>t[0]))),e.predict(((t,e)=>{e(p.predict(t.map((t=>t[0]))))}),1)}))};t.append("span").text(" tension "),t.append("input").attr("type","number").attr("name","tension").attr("value",0).attr("min",-1).attr("max",1).attr("step",.1).on("change",a),t.append("span").text(" bias "),t.append("input").attr("type","number").attr("name","bias").attr("value",0).attr("min",-100).attr("max",100).attr("step",.1).on("change",a),t.append("input").attr("type","button").attr("value","Calculate").on("click",a)};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispHermitInterpolation(t.setting.ml.configElement,t)}