var c=Object.defineProperty;var i=(t,e)=>c(t,"name",{value:e,configurable:!0});import l from"../../lib/model/cubic_hermite_spline.js";var o=i(function(t,e){e.setting.ml.reference={title:"Cubic Hermite spline (Wikipedia)",url:"https://en.wikipedia.org/wiki/Cubic_Hermite_spline"};const a=i(function(){const r=+t.select("[name=tension]").property("value"),s=+t.select("[name=bias]").property("value");let p=new l(r,s);p.fit(e.trainInput.map(n=>n[0]),e.trainOutput.map(n=>n[0]));const u=p.predict(e.testInput(1).map(n=>n[0]));e.testResult(u)},"calcCubicHermiteSpline");t.append("span").text(" tension "),t.append("input").attr("type","number").attr("name","tension").attr("value",0).attr("min",-1).attr("max",1).attr("step",.1).on("change",a),t.append("span").text(" bias "),t.append("input").attr("type","number").attr("name","bias").attr("value",0).attr("min",-100).attr("max",100).attr("step",.1).on("change",a),t.append("input").attr("type","button").attr("value","Calculate").on("click",a)},"dispCubicHermiteSpline");export default function d(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',t.setting.ml.require={dimension:1},o(t.setting.ml.configElement,t)}i(d,"default");
