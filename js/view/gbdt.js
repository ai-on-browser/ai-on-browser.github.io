import{GBDT,GBDTClassifier}from"../../lib/model/gbdt.js";var dispGBDT=function(t,e){const a=e.task;let n=null;t.append("span").text(" max depth = "),t.append("input").attr("type","number").attr("name","maxd").attr("value",1).attr("min",1).attr("max",10),t.append("span").text(" Sampling rate "),t.append("input").attr("type","number").attr("name","srate").property("value",.8).attr("min",.1).attr("max",1).attr("step",.1),t.append("span").text(" learning rate = "),t.append("input").attr("type","number").attr("name","lr").attr("value",.1).attr("min",0).attr("max",1).attr("step",.1);const r=e.setting.ml.controller.stepLoopButtons().init((()=>{n=null,e.init()}));t.append("span").text(" Iteration "),t.append("input").attr("type","number").attr("name","itr").attr("value",1).attr("min",1).attr("max",100),r.step((r=>{const p=+t.select("[name=maxd]").property("value"),i=+t.select("[name=lr]").property("value"),l=+t.select("[name=itr]").property("value"),m=+t.select("input[name=srate]").property("value");e.fit(((t,s)=>{n||("CF"===a?(n=new GBDTClassifier(p,m,i),n.init(t,s.map((t=>t[0])))):(n=new GBDT(p,m,i),n.init(t,s)));for(let t=0;t<l;t++)n.fit();e.predict(((t,e)=>{e(n.predict(t)),r&&r()}),4)}))})).epoch((()=>n.size))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',dispGBDT(t.setting.ml.configElement,t)}