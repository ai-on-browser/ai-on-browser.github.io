var v=Object.defineProperty;var r=(t,e)=>v(t,"name",{value:e,configurable:!0});import{GBDT as y,GBDTClassifier as g}from"../../lib/model/gbdt.js";import b from"../controller.js";var C=r(function(t,e){const o=new b(e),d=e.task;let n=null;const c=r(p=>{const i=+t.select("[name=maxd]").property("value"),s=+t.select("[name=lr]").property("value"),m=+t.select("[name=itr]").property("value"),u=+t.select("input[name=srate]").property("value");n||(d==="CF"?(n=new g(i,u,s),n.init(e.trainInput,e.trainOutput.map(a=>a[0]))):(n=new y(i,u,s),n.init(e.trainInput,e.trainOutput)));for(let a=0;a<m;a++)n.fit();let x=n.predict(e.testInput(4));e.testResult(x),p&&p()},"fitModel");t.append("span").text(" max depth = "),t.append("input").attr("type","number").attr("name","maxd").attr("value",1).attr("min",1).attr("max",10),t.append("span").text(" Sampling rate "),t.append("input").attr("type","number").attr("name","srate").property("value",.8).attr("min",.1).attr("max",1).attr("step",.1),t.append("span").text(" learning rate = "),t.append("input").attr("type","number").attr("name","lr").attr("value",.1).attr("min",0).attr("max",1).attr("step",.1);const l=o.stepLoopButtons().init(()=>{n=null,e.init()});t.append("span").text(" Iteration "),t.append("input").attr("type","number").attr("name","itr").attr("value",1).attr("min",1).attr("max",100),l.step(c).epoch(()=>n.size)},"dispGBDT");export default function k(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',C(t.setting.ml.configElement,t)}r(k,"default");
