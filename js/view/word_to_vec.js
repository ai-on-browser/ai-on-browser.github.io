import Controller from"../controller.js";import{BaseWorker}from"../utils.js";class W2VWorker extends BaseWorker{constructor(){super("js/view/worker/word2vec_worker.js",{type:"module"})}initialize(e,t,i,r,a,s){this._postMessage({mode:"init",method:e,n:t,wordsOrNumber:i,reduce_size:r,optimizer:a},s)}fit(e,t,i,r,a){this._postMessage({mode:"fit",words:e,iteration:t,rate:i,batch:r},a)}predict(e,t){this._postMessage({mode:"predict",x:e},t)}reduce(e,t){this._postMessage({mode:"reduce",x:e},(e=>t(e.data)))}}export default function(e){e.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',e.setting.ml.reference={title:"Word2vec (Wikipedia)",url:"https://en.wikipedia.org/wiki/Word2vec"};const t=new Controller(e),i=new W2VWorker;let r=0;const a=t.select(["CBOW","skip-gram"]),s=t.input.number({label:" n ",min:1,max:10,value:1}),n=t.stepLoopButtons().init((()=>{if(e.init(),0===e.datas.length)return;i.initialize(a.value,s.value,e.trainInput,2,"adam")})),o=t.select({label:" Iteration ",values:[1,10,100,1e3,1e4]}),l=t.input.number({label:" Learning rate ",min:0,max:100,step:.01,value:.001}),u=t.input.number({label:" Batch size ",min:1,max:100,value:10});n.step((t=>{i.fit(e.trainInput,+o.value,l.value,u.value,(a=>{r=a.data.epoch,e.plotLoss(a.data.loss),i.reduce(e.testInput(),(i=>{e.testResult(i),t&&t()}))}))})).epoch((()=>r)),e.setting.terminate=()=>{i.terminate()}}