import AdaptiveThresholding from"../../lib/model/adaptive_thresholding.js";var dispAdaptiveThresholding=function(t,e){e.colorSpace="gray";const n=()=>{const n=t.select("[name=method]").property("value"),a=+t.select("[name=k]").property("value"),p=+t.select("[name=c]").property("value");e.fit(((t,e,r)=>{const l=new AdaptiveThresholding(n,a,p),o=[];for(let e=0;e<t.length*t[0].length;e++)o[e]=[];for(let e=0;e<t[0][0].length;e++){const n=[];for(let a=0;a<t.length;a++)n[a]=t[a].map((t=>t[e]));const a=l.predict(n);for(let t=0,e=0;t<a.length;t++)for(let n=0;n<a[t].length;n++,e++)o[e].push(a[t][n])}r(o)}),1)};t.append("select").attr("name","method").selectAll("option").data(["mean","gaussian","median","midgray"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text(" k "),t.append("input").attr("type","number").attr("name","k").attr("value",3).attr("min",3).attr("max",99).attr("step",2).on("change",n),t.append("span").text(" c "),t.append("input").attr("type","number").attr("name","c").attr("value",2).attr("min",0).attr("max",100).on("change",n),t.append("input").attr("type","button").attr("value","Fit").on("click",n)};export default function(t){t.setting.ml.usage='Click "Fit" button.',dispAdaptiveThresholding(t.setting.ml.configElement,t)}