import AdaptiveThresholding from"../../lib/model/adaptive_thresholding.js";var dispAdaptiveThresholding=function(t,e){e.colorSpace="gray";const n=()=>{const n=t.select("[name=method]").property("value"),a=+t.select("[name=k]").property("value"),p=+t.select("[name=c]").property("value"),r=e._step;e._step=1;const l=e.trainInput,o=new AdaptiveThresholding(n,a,p),i=[];for(let t=0;t<l.length*l[0].length;t++)i[t]=[];for(let t=0;t<l[0][0].length;t++){const e=[];for(let n=0;n<l.length;n++)e[n]=l[n].map((e=>e[t]));const n=o.predict(e);for(let t=0,e=0;t<n.length;t++)for(let a=0;a<n[t].length;a++,e++)i[e].push(255*n[t][a])}e.trainResult=i,e._step=r};t.append("select").attr("name","method").selectAll("option").data(["mean","gaussian","median","midgray"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text(" k "),t.append("input").attr("type","number").attr("name","k").attr("value",3).attr("min",3).attr("max",99).attr("step",2).on("change",n),t.append("span").text(" c "),t.append("input").attr("type","number").attr("name","c").attr("value",2).attr("min",0).attr("max",100).on("change",n),t.append("input").attr("type","button").attr("value","Fit").on("click",n)};export default function(t){t.setting.ml.usage='Click "Fit" button.',dispAdaptiveThresholding(t.setting.ml.configElement,t)}