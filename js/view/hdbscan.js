import HDBSCAN from"../../lib/model/hdbscan.js";var dispHDBSCAN=function(t,e){const n=e.svg;n.insert("g",":first-child").attr("class","range").attr("opacity",.4);const a=a=>{n.selectAll(".range *").remove(),e.fit(((e,n,r)=>{const p=t.select("[name=metric]").property("value"),s=+t.select("[name=minclustersize]").property("value"),i=+t.select("[name=minpts]").property("value"),l=new HDBSCAN(s,i,p);r(l.predict(e).map((t=>t+1))),t.select("[name=clusters]").text(l.size),a&&a()}))};return t.append("select").attr("name","metric").on("change",a).selectAll("option").data(["euclid","manhattan","chebyshev"]).enter().append("option").attr("value",(t=>t)).text((t=>t)),t.append("span").text("min cluster size"),t.append("input").attr("type","number").attr("name","minclustersize").attr("min",1).attr("max",100).attr("value",5).on("change",a),t.append("span").text("min pts"),t.append("input").attr("type","number").attr("name","minpts").attr("min",2).attr("max",1e3).attr("value",5).on("change",a),t.append("input").attr("type","button").attr("value","Fit").on("click",a),t.append("span").text(" Clusters: "),t.append("span").attr("name","clusters"),()=>{n.select(".range").remove()}};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Fit" button.',t.setting.terminate=dispHDBSCAN(t.setting.ml.configElement,t)}