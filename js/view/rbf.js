var c=Object.defineProperty;var n=(t,e)=>c(t,"name",{value:e,configurable:!0});import d from"../../lib/model/rbf.js";var l=n(function(t,e){e.setting.ml.reference={title:"Radial basis function (Wikipedia)",url:"https://en.wikipedia.org/wiki/Radial_basis_function"};const p=n(function(){const a=t.select("[name=rbf]").property("value"),r=+t.select("[name=l]").property("value"),u=+t.select("[name=e]").property("value");let i=new d(a,u,r);i.fit(e.trainInput,e.trainOutput);const s=i.predict(e.testInput(4));e.testResult(s)},"calcRBF");t.append("span").text("RBF "),t.append("select").attr("name","rbf").selectAll("option").data(["linear","gaussian","multiquadric","inverse quadratic","inverse multiquadric","thin plate","bump"]).enter().append("option").attr("value",a=>a).text(a=>a),t.append("span").text(" e = "),t.append("input").attr("type","number").attr("name","e").attr("value",1).attr("min",0).attr("max",10).attr("step",.1),e.task==="IN"?t.append("input").attr("type","hidden").attr("name","l").attr("value",0):(t.append("span").text(" l = "),t.append("input").attr("type","number").attr("name","l").attr("value",.1).attr("min",0).attr("max",10).attr("step",.1)),t.append("input").attr("type","button").attr("value","Calculate").on("click",p)},"dispRBF");export default function o(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',l(t.setting.ml.configElement,t)}n(o,"default");
