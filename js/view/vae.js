var k=Object.defineProperty;var c=(e,t)=>k(e,"name",{value:t,configurable:!0});import m from"../neuralnetwork_builder.js";import y from"../controller.js";import{BaseWorker as R}from"../utils.js";class z extends R{static{c(this,"VAEWorker")}constructor(){super("js/view/worker/vae_worker.js",{type:"module"})}initialize(t,i,n,a,r,p,o){return this._type=o,this._postMessage({mode:"init",in_size:t,noise_dim:i,enc_layers:n,dec_layers:a,optimizer:r,class_size:p,type:o})}fit(t,i,n,a,r){return this._postMessage({mode:"fit",x:t,y:i,iteration:n,rate:a,batch:r})}predict(t,i){return this._postMessage({mode:"predict",x:t,y:i})}reduce(t,i){return this._postMessage({mode:"reduce",x:t,y:i})}}export default function _(e){e.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.';const t=new y(e),i=e.task,n=new z;let a=0;const r=c(async()=>{if(e.datas.length===0)return;const u=await n.fit(e.trainInput,e.trainOutput,+b.value,g.value,w.value);if(a=u.data.epoch,e.plotLoss(u.data.loss),i==="DR"){const s=await n.reduce(e.trainInput,e.trainOutput);e.trainResult=s.data}else if(i==="GR"){const d=(await n.predict(e.trainInput,e.trainOutput)).data;n._type==="conditional"?e.trainResult=[d,e.trainOutput]:e.trainResult=d}},"fitModel"),p=c(async()=>{const s=(await n.predict(e.trainInput,e.trainOutput)).data;o.value==="conditional"?e.trainResult=[s,e.trainOutput]:e.trainResult=s},"genValues"),o=t.select(["default","conditional"]);let h=null;i!=="DR"&&(h=t.input.number({label:"Noise dim",min:1,max:100,value:5}));const l=new m;l.makeHtml(e.setting.ml.configElement,{optimizer:!0});const v=t.stepLoopButtons().init(u=>{if(e.datas.length===0){u();return}const s=new Set(e.trainOutput.map(d=>d[0])).size;n.initialize(e.datas.dimension,h?.value??e.dimension,l.layers,l.invlayers,l.optimizer,s,o.value).then(u),e.init()}),b=t.select({label:" Iteration ",values:[1,10,100,1e3,1e4]}),g=t.input.number({label:"Learning rate ",min:0,max:100,step:.01,value:.001}),w=t.input.number({label:" Batch size ",min:1,max:100,value:10});return v.step(r).epoch(()=>a),i==="GR"&&t.input.button("Generate").on("click",p),()=>{n.terminate()}}c(_,"default");
