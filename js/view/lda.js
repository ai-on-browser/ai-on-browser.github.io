import{LinearDiscriminant,FishersLinearDiscriminant,MulticlassLinearDiscriminant,LinearDiscriminantAnalysis}from"../../lib/model/lda.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";var dispLDA=function(e,t){"CF"===t.task&&(e.append("select").attr("name","method").on("change",(()=>{const t=e.select("[name=method]").property("value");e.select("[name=model]").style("display","multiclass"===t?"none":null)})).selectAll("option").data(["oneone","onerest","multiclass"]).enter().append("option").property("value",(e=>e)).text((e=>e)),e.append("select").attr("name","model").selectAll("option").data(["FLD","LDA"]).enter().append("option").property("value",(e=>e)).text((e=>e))),e.append("input").attr("type","button").attr("value","Calculate").on("click",(()=>{const n=t.trainOutput.map((e=>e[0]));if("CF"===t.task){const i=e.select("[name=method]").property("value"),a=e.select("[name=model]").property("value");let l=null;if("multiclass"===i)l=new MulticlassLinearDiscriminant,l.fit(t.trainInput,n);else{l=new EnsembleBinaryModel("FLD"===a?FishersLinearDiscriminant:LinearDiscriminant,i),l.init(t.trainInput,n),l.fit()}const s=l.predict(t.testInput(3));t.testResult(s)}else{const e=t.dimension;let i=(new LinearDiscriminantAnalysis).predict(t.trainInput,n,e);t.trainResult=i}}))};export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispLDA(e.setting.ml.configElement,e)}