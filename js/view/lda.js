var d=Object.defineProperty;var s=(e,n)=>d(e,"name",{value:n,configurable:!0});import{LinearDiscriminant as p,FishersLinearDiscriminant as u,MulticlassLinearDiscriminant as m,LinearDiscriminantAnalysis as y}from"../../lib/model/lda.js";import h from"../../lib/model/ensemble_binary.js";var D=s(function(e,n){const c=s(()=>{const t=n.trainOutput.map(i=>i[0]);if(n.task==="CF"){const i=e.select("[name=method]").property("value"),l=e.select("[name=model]").property("value");let a=null;if(i==="multiclass")a=new m,a.fit(n.trainInput,t);else{const r=l==="FLD"?u:p;a=new h(r,i),a.init(n.trainInput,t),a.fit()}const o=a.predict(n.testInput(3));n.testResult(o)}else{const i=n.dimension;let l=new y().predict(n.trainInput,t,i);n.trainResult=l}},"calc");n.task==="CF"&&(e.append("select").attr("name","method").on("change",()=>{const t=e.select("[name=method]").property("value");e.select("[name=model]").style("display",t==="multiclass"?"none":null)}).selectAll("option").data(["oneone","onerest","multiclass"]).enter().append("option").property("value",t=>t).text(t=>t),e.append("select").attr("name","model").selectAll("option").data(["FLD","LDA"]).enter().append("option").property("value",t=>t).text(t=>t)),e.append("input").attr("type","button").attr("value","Calculate").on("click",c)},"dispLDA");export default function L(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".',D(e.setting.ml.configElement,e)}s(L,"default");
