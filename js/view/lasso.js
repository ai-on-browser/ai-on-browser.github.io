import Matrix from"../../lib/util/matrix.js";import Lasso from"../../lib/model/lasso.js";import Controller from"../controller.js";export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',t.setting.ml.reference={title:"Lasso (Wikipedia)",url:"https://en.wikipedia.org/wiki/Lasso_(statistics)"},t.setting.ml.detail="\nThe model form is\n$$\nf(X) = X W + \\epsilon\n$$\n\nThe loss function can be written as\n$$\nL(W) = \\| X W - y \\|^2 + \\lambda \\| W \\|_1\n$$\nwhere $ y $ is the observed value corresponding to $ X $.\n";const e=new Controller(t);let i=null;const n=t.task,s=e.select(["CD","ISTA","LARS"]),o=e.select({label:"lambda = ",values:[0,1e-4,.001,.01,.1,1,10,100]});e.stepLoopButtons().init((()=>{i=new Lasso(+o.value,s.value),t.init()})).step((e=>{if("FS"===n){i.fit(t.trainInput,t.trainOutput);const n=i.importance().map(((t,e)=>[t,e]));n.sort(((t,e)=>e[0]-t[0]));const s=t.dimension,o=n.map((t=>t[1])).slice(0,s),l=Matrix.fromArray(t.trainInput);t.trainResult=l.col(o).toArray(),e&&e()}else{i.fit(t.trainInput,t.trainOutput);const n=i.predict(t.testInput(4));t.testResult(n),e&&e()}})).epoch()}