import Matrix from"../../lib/util/matrix.js";import{BasisFunctions}from"./least_square.js";import Lasso from"../../lib/model/lasso.js";var dispLasso=function(t,e){let n=null;const a=e.task,o=new BasisFunctions(e);"FS"!==a&&o.makeHtml(t),t.append("select").attr("name","method").selectAll("option").data(["CD","ISTA","LARS"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text("lambda = "),t.append("select").attr("name","lambda").selectAll("option").data([0,1e-4,.001,.01,.1,1,10,100]).enter().append("option").property("value",(t=>t)).text((t=>t)),e.setting.ml.controller.stepLoopButtons().init((()=>{n=new Lasso(+t.select("[name=lambda]").property("value"),t.select("[name=method]").property("value")),e.init()})).step((t=>{e.fit(((i,s,l)=>{if("FS"===a){n.fit(i,s);const a=n.importance().map(((t,e)=>[t,e]));a.sort(((t,e)=>e[0]-t[0]));const o=e.dimension,p=a.map((t=>t[1])).slice(0,o);l(Matrix.fromArray(i).col(p).toArray()),t&&t()}else n.fit(o.apply(i).toArray(),s),e.predict(((e,a)=>{a(n.predict(o.apply(e).toArray())),t&&t()}),4)}))})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispLasso(t.setting.ml.configElement,t),t.setting.ml.detail="\nThe model form is\n$$\nf(X) = X W + \\epsilon\n$$\n\nThe loss function can be written as\n$$\nL(W) = \\| X W - y \\|^2 + \\lambda \\| W \\|_1\n$$\nwhere $ y $ is the observed value corresponding to $ X $.\n"}