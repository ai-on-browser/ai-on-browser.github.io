import SOM from"../../lib/model/som.js";import Controller from"../controller.js";var dispSOM=function(t,e){e.setting.ml.reference={title:"Self-organizing map (Wikipedia)",url:"https://en.wikipedia.org/wiki/Self-organizing_map"};const n=new Controller(e),i=e.task;let a=null;t.append("select").selectAll("option").data([{value:"batch"}]).enter().append("option").attr("value",(t=>t.value)).text((t=>t.value)),"DR"!=i?(t.append("span").text(" Size "),t.append("input").attr("type","number").attr("name","resolution").attr("value",10).attr("min",1).attr("max",100).property("required",!0)):(t.append("span").text(" Resolution "),t.append("input").attr("type","number").attr("name","resolution").attr("max",100).attr("min",1).attr("value",20)),n.stepLoopButtons().init((()=>{if(e.init(),0===e.datas.length)return;const n=e.dimension||1,i=+t.select("[name=resolution]").property("value");a=new SOM(2,n,i)})).step((t=>{if(a)if("CT"===i){a.fit(e.trainInput);const n=a.predict(e.trainInput);e.trainResult=n.map((t=>t[0]+1));const i=a.predict(e.testInput(4));e.testResult(i.map((t=>t[0]+1))),e.centroids(a._y,a._y.map(((t,e)=>e+1))),t&&t()}else{a.fit(e.trainInput);const n=a.predict(e.trainInput);e.trainResult=n,t&&t()}else t&&t()})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispSOM(t.setting.ml.configElement,t)}