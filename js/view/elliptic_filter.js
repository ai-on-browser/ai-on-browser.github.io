import EllipticFilter from"../../lib/model/elliptic_filter.js";var dispElliptic=function(t,e){const a=()=>{const a=+t.select("[name=n]").property("value"),p=+t.select("[name=xi]").property("value"),n=+t.select("[name=ripple]").property("value"),r=+t.select("[name=c]").property("value");e.fit(((t,e,i)=>{i(new EllipticFilter(n,a,p,r).predict(t))}))};t.append("span").text("n"),t.append("input").attr("type","number").attr("name","n").attr("min",1).attr("max",100).attr("value",2).on("change",a),t.append("span").text("ripple"),t.append("input").attr("type","number").attr("name","ripple").attr("min",0).attr("max",10).attr("value",1).attr("step",.1).on("change",a),t.append("span").text("xi"),t.append("input").attr("type","number").attr("name","xi").attr("min",1).attr("max",10).attr("value",1.1).attr("step",.1).on("change",a),t.append("span").text("cutoff rate"),t.append("input").attr("type","number").attr("name","c").attr("min",0).attr("max",1).attr("value",.9).attr("step",.01).on("change",a),t.append("input").attr("type","button").attr("value","Calculate").on("click",a)};export default function(t){t.setting.ml.usage='Click and add data point. Click "Calculate" to update.',dispElliptic(t.setting.ml.configElement,t)}