var m=Object.defineProperty;var r=(t,a)=>m(t,"name",{value:a,configurable:!0});import f from"../../lib/model/elliptic_filter.js";var v=r(function(t,a){a.setting.ml.reference={title:"Elliptic rational functions (Wikipedia)",url:"https://en.wikipedia.org/wiki/Elliptic_rational_functions"};const p=r(()=>{const l=+t.select("[name=n]").property("value"),o=+t.select("[name=xi]").property("value"),u=+t.select("[name=ripple]").property("value"),s=+t.select("[name=c]").property("value"),c=a.trainInput,d=new f(u,l,o,s),i=[];for(let n=0;n<c.length;i[n++]=[]);for(let n=0;n<c[0].length;n++){const x=c.map(e=>e[n]),g=d.predict(x);for(let e=0;e<i.length;e++)i[e][n]=g[e]}a.trainResult=i},"fitModel");t.append("span").text("n"),t.append("input").attr("type","number").attr("name","n").attr("min",1).attr("max",100).attr("value",2).on("change",p),t.append("span").text("ripple"),t.append("input").attr("type","number").attr("name","ripple").attr("min",0).attr("max",10).attr("value",1).attr("step",.1).on("change",p),t.append("span").text("xi"),t.append("input").attr("type","number").attr("name","xi").attr("min",1).attr("max",10).attr("value",1.1).attr("step",.1).on("change",p),t.append("span").text("cutoff rate"),t.append("input").attr("type","number").attr("name","c").attr("min",0).attr("max",1).attr("value",.9).attr("step",.01).on("change",p),t.append("input").attr("type","button").attr("value","Calculate").on("click",p)},"dispElliptic");export default function y(t){t.setting.ml.usage='Click and add data point. Click "Calculate" to update.',v(t.setting.ml.configElement,t)}r(y,"default");
