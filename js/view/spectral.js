import SpectralClustering from"../../lib/model/spectral.js";import Controller from"../controller.js";var dispSpectral=function(t,e){const n=new Controller(e);let a=null;t.append("select").attr("name","method").on("change",(function(){const t=d3.select(this).property("value");l.selectAll("*").style("display","none"),l.selectAll(`.${t}`).style("display","inline")})).selectAll("option").data(["rbf","knn"]).enter().append("option").attr("value",(t=>t)).text((t=>t));const l=t.append("span");l.append("span").classed("rbf",!0).text("s ="),l.append("input").attr("type","number").attr("name","sigma").classed("rbf",!0).attr("min",.01).attr("max",100).attr("step",.01).property("value",1),l.append("span").classed("knn",!0).text("k ="),l.append("input").attr("type","number").attr("name","k_nearest").classed("knn",!0).attr("min",1).attr("max",100).property("value",10),l.selectAll(`:not(.${t.select("[name=method]").property("value")})`).style("display","none");const p=n.stepLoopButtons().init((()=>{const n=t.select("[name=method]").property("value"),p={sigma:+l.select("[name=sigma]").property("value"),k:+l.select("[name=k_nearest]").property("value")};a=new SpectralClustering(n,p),a.init(e.trainInput),t.select("[name=clusternumber]").text(a.size),r.selectAll("input").attr("disabled",null)})),r=t.append("span");r.append("input").attr("type","button").attr("value","Add cluster").on("click",(()=>{a.add();let n=a.predict();e.trainResult=n.map((t=>t+1)),t.select("[name=clusternumber]").text(a.size)})),r.append("span").attr("name","clusternumber").text("0"),r.append("span").text(" clusters"),r.append("input").attr("type","button").attr("value","Clear cluster").on("click",(()=>{a.clear(),t.select("[name=clusternumber]").text("0")})),p.step((t=>{if(0===a.size)return;a.fit();let n=a.predict();e.trainResult=n.map((t=>t+1)),t&&t()})).epoch((()=>a.epoch)),r.selectAll("input").attr("disabled",!0)};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Then, click "Add cluster". Finally, click "Step" button repeatedly.',dispSpectral(t.setting.ml.configElement,t)}