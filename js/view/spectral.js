var o=Object.defineProperty;var i=(e,l)=>o(e,"name",{value:l,configurable:!0});import m from"../../lib/model/spectral.js";import k from"../controller.js";var y=i(function(e,l){l.setting.ml.reference={title:"Spectral clustering (Wikipedia)",url:"https://en.wikipedia.org/wiki/Spectral_clustering"};const c=new k(l);let t=null;const s=c.select(["rbf","knn"]).on("change",()=>{const a=s.value;n.selectAll("*").style("display","none"),n.selectAll(`.${a}`).style("display","inline")}),n=e.append("span");n.append("span").classed("rbf",!0).text("s ="),n.append("input").attr("type","number").attr("name","sigma").classed("rbf",!0).attr("min",.01).attr("max",100).attr("step",.01).property("value",1),n.append("span").classed("knn",!0).text("k ="),n.append("input").attr("type","number").attr("name","k_nearest").classed("knn",!0).attr("min",1).attr("max",100).property("value",10),n.selectAll(`:not(.${s.value})`).style("display","none");const u=c.stepLoopButtons().init(()=>{const a={sigma:+n.select("[name=sigma]").property("value"),k:+n.select("[name=k_nearest]").property("value")};t=new m(s.value,a),t.init(l.trainInput),e.select("[name=clusternumber]").text(t.size),r.selectAll("input").attr("disabled",null)}),r=e.append("span");r.append("input").attr("type","button").attr("value","Add cluster").on("click",()=>{t.add();let a=t.predict();l.trainResult=a.map(p=>p+1),e.select("[name=clusternumber]").text(t.size)}),r.append("span").attr("name","clusternumber").text("0"),r.append("span").text(" clusters"),r.append("input").attr("type","button").attr("value","Clear cluster").on("click",()=>{t.clear(),e.select("[name=clusternumber]").text("0")}),u.step(a=>{if(t.size===0)return;t.fit();let p=t.predict();l.trainResult=p.map(d=>d+1),a&&a()}).epoch(()=>t.epoch),r.selectAll("input").attr("disabled",!0)},"dispSpectral");export default function b(e){e.setting.ml.usage='Click and add data point. Next, click "Initialize". Then, click "Add cluster". Finally, click "Step" button repeatedly.',y(e.setting.ml.configElement,e)}i(b,"default");
