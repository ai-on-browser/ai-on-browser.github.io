import SpectralClustering from"../../lib/model/spectral.js";import Controller from"../controller.js";var dispSpectral=function(t,e){const n=new Controller(e);let l=null;const a=n.select(["rbf","knn"]).on("change",(()=>{const t=a.value;r.selectAll("*").style("display","none"),r.selectAll(`.${t}`).style("display","inline")})),r=t.append("span");r.append("span").classed("rbf",!0).text("s ="),r.append("input").attr("type","number").attr("name","sigma").classed("rbf",!0).attr("min",.01).attr("max",100).attr("step",.01).property("value",1),r.append("span").classed("knn",!0).text("k ="),r.append("input").attr("type","number").attr("name","k_nearest").classed("knn",!0).attr("min",1).attr("max",100).property("value",10),r.selectAll(`:not(.${a.value})`).style("display","none");const s=n.stepLoopButtons().init((()=>{const n={sigma:+r.select("[name=sigma]").property("value"),k:+r.select("[name=k_nearest]").property("value")};l=new SpectralClustering(a.value,n),l.init(e.trainInput),t.select("[name=clusternumber]").text(l.size),p.selectAll("input").attr("disabled",null)})),p=t.append("span");p.append("input").attr("type","button").attr("value","Add cluster").on("click",(()=>{l.add();let n=l.predict();e.trainResult=n.map((t=>t+1)),t.select("[name=clusternumber]").text(l.size)})),p.append("span").attr("name","clusternumber").text("0"),p.append("span").text(" clusters"),p.append("input").attr("type","button").attr("value","Clear cluster").on("click",(()=>{l.clear(),t.select("[name=clusternumber]").text("0")})),s.step((t=>{if(0===l.size)return;l.fit();let n=l.predict();e.trainResult=n.map((t=>t+1)),t&&t()})).epoch((()=>l.epoch)),p.selectAll("input").attr("disabled",!0)};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Then, click "Add cluster". Finally, click "Step" button repeatedly.',dispSpectral(t.setting.ml.configElement,t)}