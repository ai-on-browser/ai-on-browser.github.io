import LabelPropagation from"../../lib/model/label_propagation.js";import Controller from"../controller.js";var dispLabelPropagation=function(t,e){const a=new Controller(e);let n=null;t.append("select").attr("name","method").on("change",(function(){const t=d3.select(this).property("value");p.selectAll("*").style("display","none"),p.selectAll(`.${t}`).style("display","inline")})).selectAll("option").data(["rbf","knn"]).enter().append("option").attr("value",(t=>t)).text((t=>t));const p=t.append("span");p.append("span").classed("rbf",!0).text("s ="),p.append("input").attr("type","number").attr("name","sigma").classed("rbf",!0).attr("min",.01).attr("max",100).attr("step",.01).property("value",1),t.append("span").text("k ="),t.append("input").attr("type","number").attr("name","k_nearest").attr("min",1).attr("max",1e3).property("value",10),a.stepLoopButtons().init((()=>{n=null,e.init()})).step((a=>{e.fit(((e,a,p)=>{if(!n){const p=t.select("[name=method]").property("value"),l=+t.select("[name=sigma]").property("value"),o=+t.select("[name=k_nearest]").property("value");n=new LabelPropagation(p,l,o),n.init(e,a.map((t=>t[0])))}n.fit(),p(n.predict())})),a&&a()})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Finally, click "Step" button repeatedly.',dispLabelPropagation(t.setting.ml.configElement,t)}