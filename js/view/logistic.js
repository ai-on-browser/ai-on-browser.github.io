var x=Object.defineProperty;var p=(t,n)=>x(t,"name",{value:n,configurable:!0});import{LogisticRegression as g,MultinomialLogisticRegression as h}from"../../lib/model/logistic.js";import b from"../../lib/model/ensemble_binary.js";import f from"../controller.js";var L=p(function(t,n){const o=new f(n),s=4;let r=0,a=null;const l=p(e=>{if(!a)return;const i=+t.select("[name=iteration]").property("value"),u=+t.select("[name=rate]").property("value"),d=+t.select("[name=l1]").property("value"),m=+t.select("[name=l2]").property("value");a.fit(n.trainInput,n.trainOutput.map(v=>v[0]),i,u,d,m);const y=a.predict(n.testInput(s));n.testResult(y),r+=i,e&&e()},"fitModel");t.append("select").attr("name","method").selectAll("option").data(["oneone","onerest","multinomial"]).enter().append("option").property("value",e=>e).text(e=>e),t.select("[name=method]").property("value","multinomial");const c=o.stepLoopButtons().init(()=>{r=0;const e=t.select("[name=method]").property("value");e==="multinomial"?a=new h:a=new b(g,e),n.init()});t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",e=>e).text(e=>e),t.append("span").text(" Learning rate "),t.append("input").attr("type","number").attr("name","rate").attr("value",.1).attr("min",0).attr("max",100).attr("step",.1),t.append("span").text(" l1 = "),t.append("input").attr("type","number").attr("name","l1").attr("value",0).attr("min",0).attr("max",10).attr("step",.1),t.append("span").text(" l2 = "),t.append("input").attr("type","number").attr("name","l2").attr("value",0).attr("min",0).attr("max",10).attr("step",.1),c.step(l).epoch(()=>r)},"dispLogistic");export default function I(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',L(t.setting.ml.configElement,t)}p(I,"default");
