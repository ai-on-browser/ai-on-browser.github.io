import{LogisticRegression,MultinomialLogisticRegression}from"../../lib/model/logistic.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";var dispLogistic=function(t,e){const n=new Controller(e);let a=0,i=null;t.append("select").attr("name","method").selectAll("option").data(["oneone","onerest","multinomial"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.select("[name=method]").property("value","multinomial");const r=n.stepLoopButtons().init((()=>{a=0;const n=t.select("[name=method]").property("value");i="multinomial"===n?new MultinomialLogisticRegression:new EnsembleBinaryModel(LogisticRegression,n),e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text(" Learning rate "),t.append("input").attr("type","number").attr("name","rate").attr("value",.1).attr("min",0).attr("max",100).attr("step",.1),t.append("span").text(" l1 = "),t.append("input").attr("type","number").attr("name","l1").attr("value",0).attr("min",0).attr("max",10).attr("step",.1),t.append("span").text(" l2 = "),t.append("input").attr("type","number").attr("name","l2").attr("value",0).attr("min",0).attr("max",10).attr("step",.1),r.step((n=>{if(!i)return;const r=+t.select("[name=iteration]").property("value"),l=+t.select("[name=rate]").property("value"),o=+t.select("[name=l1]").property("value"),p=+t.select("[name=l2]").property("value");i.fit(e.trainInput,e.trainOutput.map((t=>t[0])),r,l,o,p);const s=i.predict(e.testInput(4));e.testResult(s),a+=r,n&&n()})).epoch((()=>a))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispLogistic(t.setting.ml.configElement,t)}