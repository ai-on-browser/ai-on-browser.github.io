import{LogisticRegression,MultinomialLogisticRegression}from"../../lib/model/logistic.js";import EnsembleBinaryModel from"../../lib/util/ensemble.js";var dispLogistic=function(t,e){let a=0,n=null;t.append("select").attr("name","method").selectAll("option").data(["oneone","onerest","multinomial"]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.select("[name=method]").property("value","multinomial");const i=e.setting.ml.controller.stepLoopButtons().init((()=>{a=0;const i=t.select("[name=method]").property("value");n="multinomial"===i?new MultinomialLogisticRegression:new EnsembleBinaryModel(LogisticRegression,i),e.init()}));t.append("span").text(" Iteration "),t.append("select").attr("name","iteration").selectAll("option").data([1,10,100,1e3]).enter().append("option").property("value",(t=>t)).text((t=>t)),t.append("span").text(" Learning rate "),t.append("input").attr("type","number").attr("name","rate").attr("value",.1).attr("min",0).attr("max",100).attr("step",.1),t.append("span").text(" l1 = "),t.append("input").attr("type","number").attr("name","l1").attr("value",0).attr("min",0).attr("max",10).attr("step",.1),t.append("span").text(" l2 = "),t.append("input").attr("type","number").attr("name","l2").attr("value",0).attr("min",0).attr("max",10).attr("step",.1),i.step((i=>{if(!n)return;const p=+t.select("[name=iteration]").property("value"),l=+t.select("[name=rate]").property("value"),r=+t.select("[name=l1]").property("value"),o=+t.select("[name=l2]").property("value");e.fit(((t,s)=>{n.fit(t,s.map((t=>t[0])),p,l,r,o),e.predict(((t,e)=>{e(n.predict(t)),a+=p,i&&i()}),4)}))})).epoch((()=>a))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Initialize". Finally, click "Fit" button repeatedly.',dispLogistic(t.setting.ml.configElement,t)}