var v=Object.defineProperty;var g=(t,i)=>v(t,"name",{value:i,configurable:!0});import M from"../../lib/util/matrix.js";import{GMM as b,SemiSupervisedGMM as k,GMR as w}from"../../lib/model/gmm.js";import y from"../controller.js";import{getCategoryColor as x}from"../utils.js";class A{static{g(this,"GMMPlotter")}constructor(i,s,c,r=!1){this._platform=i,this._r=document.createElementNS("http://www.w3.org/2000/svg","g"),s.append(this._r),this._model=c,this._size=0,this._circle=[],this._grayscale=r,this._duration=200,this._scale=i._renderer[0].scale?.[0]??0}terminate(){this._r.remove()}_set_el_attr(i,s){if(!this._model._m[s])return;const c=this._platform.invertScale(this._model._m[s].value),r=this._model._s[s].value,e=(r[0]+r[3]+Math.sqrt((r[0]-r[3])**2+4*r[1]**2))/2,h=(r[0]+r[3]-Math.sqrt((r[0]-r[3])**2+4*r[1]**2))/2,d=2.146;let u=Math.atan((e-r[0])/r[1]);isNaN(u)&&(u=0);const _=this._platform.invertScale([Array(this._platform.datas.dimension).fill(1),Array(this._platform.datas.dimension).fill(2)]);i.setAttribute("rx",d*Math.sqrt(e)*this._scale),i.setAttribute("ry",d*Math.sqrt(h)*this._scale),i.setAttribute("vector-effect","non-scaling-stroke");const p=_[1][this._platform._renderer[0]._select[0]]-_[0][this._platform._renderer[0]._select[0]],n=_[1][this._platform._renderer[0]._select[1]]-_[0][this._platform._renderer[0]._select[1]];i.setAttribute("transform",`matrix(${Math.cos(u)*p} ${Math.sin(u)*n} ${-Math.sin(u)*p} ${Math.cos(u)*n} ${c[0]*this._scale} ${c[1]*this._scale})`)}add(i){this._size++;const s=document.createElementNS("http://www.w3.org/2000/svg","ellipse");s.setAttribute("cx",0),s.setAttribute("cy",0),s.setAttribute("stroke",this._grayscale?"gray":x(i||this._size)),s.setAttribute("stroke-width",2),s.setAttribute("fill-opacity",0),s.style.transitionDuration=this._duration+"ms",this._r.append(s),this._set_el_attr(s,this._size-1),this._circle.push(s)}clear(){this._circle.forEach(i=>i.remove()),this._circle=[],this._size=0}move(){this._circle.forEach((i,s)=>{this._set_el_attr(i,s)})}}export default function I(t){t.setting.ml.usage='Click and add data point. Finally, click "Step" button repeatedly.',t.setting.ml.reference={title:"Mixture model (Wikipedia)",url:"https://en.wikipedia.org/wiki/Mixture_model#Gaussian_mixture_model"};const i=t.svg,s=t.task,c=new y(t),r=s!=="CT"&&s!=="SC"&&s!=="RG";let e=new b;s==="SC"?e=new k:s==="RG"&&(e=new w);const h=new A(t,i,e,r),d=g(n=>{if(s==="AD"){n&&e.fit(t.trainInput);const a=e.probability(t.trainInput).map(m=>1-m.reduce((f,o)=>f*Math.exp(-o),1)<p.value);t.trainResult=a;const l=e.probability(t.testInput(3)).map(m=>1-m.reduce((f,o)=>f*Math.exp(-o),1)<p.value);t.testResult(l)}else if(s==="DE"){n&&e.fit(t.trainInput);const a=e.probability(t.testInput(8)).map(l=>Math.max(...l));t.testResult(a)}else if(s==="SC"){n&&e.fit(t.trainInput,t.trainOutput.map(l=>l[0])),t.trainResult=e.predict(t.trainInput);const a=e.predict(t.testInput(4));t.testResult(a)}else if(s==="GR"){const a=t.trainInput;n&&e.fit(a);const l=[];if(e._k>0)for(let m=0;m<a.length;m++){let f=Math.random(),o=0;for(;o<e._p.length&&!((f-=e._p[o])<=0);o++);l.push(M.randn(1,a[0].length,e._m[o],e._s[o]).value)}t.trainResult=l}else if(s==="RG"){if(n){e.fit(t.trainInput,t.trainOutput);const a=e.predict(t.testInput(4));t.testResult(a)}}else n&&e.fit(t.trainInput),t.trainResult=e.predict(t.trainInput).map(a=>a+1);s==="RG"||(h.move(),t.centroids(e._m.map(a=>a.value),r?0:s==="SC"?e.categories:e._m.map((a,l)=>l+1),{duration:200})),_.value=e._k+" clusters"},"fitModel"),u=c.stepLoopButtons();s==="SC"?u.init(()=>{e.clear(),e.init(t.trainInput,t.trainOutput.map(n=>n[0]));for(let n=0;n<e._k;n++)h.add(e.categories[n]);d(!1)}):c.input.button("Add cluster").on("click",()=>{e.add(),h.add(),d(!1)});const _=c.text("0 clusters");let p=null;return s==="AD"&&(p=c.input.number({label:" threshold = ",min:0,max:1,step:.1,value:.5}).on("change",()=>d(!1))),u.step(async()=>{d(!0),await new Promise(n=>setTimeout(n,200))}),s!=="SC"&&c.input.button("Clear").on("click",()=>{e&&e.clear(),h.clear(),_.value="0 clusters",t.init()}),()=>{h.terminate()}}g(I,"default");
