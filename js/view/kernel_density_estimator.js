import KernelDensityEstimator from"../../lib/model/kernel_density_estimator.js";import Controller from"../controller.js";import{specialCategory}from"../utils.js";export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.';const e=new Controller(t),n=()=>{const e=new KernelDensityEstimator(a.value);e.fit(t.trainInput,l.value?0:i.value),i.value=e._h;const n=e.predict(t.testInput(8));if("DE"===t.task){const e=Math.min(...n),a=Math.max(...n);t.testResult(n.map((t=>specialCategory.density((t-e)/(a-e)))))}else{const a=e.predict(t.trainInput);t.trainResult=a.map((t=>t<s.value)),t.testResult(n.map((t=>t<s.value)))}},a=e.select(["gaussian","rectangular","triangular","epanechnikov","biweight","triweight"]),l=e.input({label:"auto",type:"checkbox",checked:!0}).on("change",(()=>{i.element.disabled=l.value})),i=e.input.number({min:0,step:.01,value:.1,disabled:!0});let s=null;"AD"===t.task&&(s=e.input.number({label:" threshold = ",min:0,max:10,step:.01,value:.3}).on("change",n)),e.input.button("Fit").on("click",(()=>n()))}