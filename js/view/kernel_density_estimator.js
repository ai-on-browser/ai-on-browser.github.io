var p=Object.defineProperty;var c=(e,t)=>p(e,"name",{value:t,configurable:!0});import m from"../../lib/model/kernel_density_estimator.js";import b from"../controller.js";import{specialCategory as g}from"../utils.js";export default function k(e){e.setting.ml.usage='Click and add data point. Next, click "Fit" button.';const t=new b(e),o=c(()=>{const i=new m(d.value);i.fit(e.trainInput,r.value?0:u.value),u.value=i._h;const a=i.predict(e.testInput(8));if(e.task==="DE"){const s=Math.min(...a),n=Math.max(...a);e.testResult(a.map(h=>g.density((h-s)/(n-s))))}else{const s=i.predict(e.trainInput);e.trainResult=s.map(n=>n<l.value),e.testResult(a.map(n=>n<l.value))}},"fitModel"),d=t.select(["gaussian","rectangular","triangular","epanechnikov","biweight","triweight"]),r=t.input({label:"auto",type:"checkbox",checked:!0}).on("change",()=>{u.element.disabled=r.value}),u=t.input.number({min:0,step:.01,value:.1,disabled:!0});let l=null;e.task==="AD"&&(l=t.input.number({label:" threshold = ",min:0,max:10,step:.01,value:.3}).on("change",o)),t.input.button("Fit").on("click",()=>o())}c(k,"default");
