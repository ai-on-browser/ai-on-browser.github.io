import KernelDensityEstimator from"../../lib/model/kernel_density_estimator.js";var dispKernelDensityEstimator=function(t,e){const a=()=>{const a=t.select("[name=kernel]").property("value"),p=n.property("checked"),i=r.property("value"),s=new KernelDensityEstimator(a);s.fit(e.trainInput,p?0:i),r.property("value",s._h);const o=s.predict(e.testInput(8));if("DE"===e.task){const t=Math.min(...o),a=Math.max(...o);e.testResult(o.map((e=>specialCategory.density((e-t)/(a-t)))))}else{const a=+t.select("[name=threshold]").property("value"),n=s.predict(e.trainInput);e.trainResult=n.map((t=>t<a)),e.testResult(o.map((t=>t<a)))}};t.append("select").attr("name","kernel").selectAll("option").data(["gaussian","rectangular","triangular","epanechnikov","biweight","triweight"]).enter().append("option").attr("value",(t=>t)).text((t=>t)),t.append("span").text("auto");const n=t.append("input").attr("type","checkbox").attr("name","auto").property("checked",!0).on("change",(()=>{r.property("disabled",n.property("checked"))})),r=t.append("input").attr("type","number").attr("name","h").attr("min",0).attr("value",.1).attr("step",.01).property("disabled",!0);"AD"===e.task&&(t.append("span").text(" threshold = "),t.append("input").attr("type","number").attr("name","threshold").attr("value",.3).attr("min",0).attr("max",10).attr("step",.01).on("change",a)),t.append("input").attr("type","button").attr("value","Fit").on("click",(()=>a()))};export default function(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',dispKernelDensityEstimator(t.setting.ml.configElement,t)}