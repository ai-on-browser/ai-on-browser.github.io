var x=Object.defineProperty;var r=(t,p)=>x(t,"name",{value:p,configurable:!0});import h from"../../lib/model/ar.js";var v=r(function(t,p){const i=r(()=>{const a=t.select("[name=method]").property("value"),u=+t.select("[name=p]").property("value"),c=+t.select("[name=c]").property("value"),d=new h(u,a),s=p.trainInput,o=[];for(let e=0;e<c;o[e++]=[]);for(let e=0;e<s[0].length;e++){const l=s.map(n=>n[e]);d.fit(l);const m=d.predict(l,c);for(let n=0;n<o.length;n++)o[n][e]=m[n]}p.trainResult=o},"fitModel");t.append("select").attr("name","method").selectAll("option").data(["lsm","yuleWalker","levinson","householder"]).enter().append("option").property("value",a=>a).text(a=>a),t.append("span").text("p"),t.append("input").attr("type","number").attr("name","p").attr("min",1).attr("max",1e3).attr("value",1),t.append("input").attr("type","button").attr("value","Fit").on("click",i),t.append("span").text("predict count"),t.append("input").attr("type","number").attr("name","c").attr("min",1).attr("max",100).attr("value",100).on("change",i)},"dispAR");export default function f(t){t.setting.ml.usage='Click and add data point. Click "fit" to update.',v(t.setting.ml.configElement,t),t.setting.ml.detail=`
The model form is
$$
x_t = \\sum_{k=1}^p a_k x_{t - k} + \\epsilon_t.
$$
`}r(f,"default");
