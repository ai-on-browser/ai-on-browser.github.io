var I=Object.defineProperty;var h=(e,l)=>I(e,"name",{value:l,configurable:!0});import{KNN as w,KNNRegression as v,KNNAnomaly as p,KNNDensityEstimation as N,SemiSupervisedKNN as C}from"../../lib/model/knearestneighbor.js";import R from"../controller.js";export default function b(e){e.setting.ml.usage='Click and add data point. Then, click "Calculate".';const l=new R(e),i=e.task;let s=5;const d=h(function(){if(i==="CF"){if(e.datas.length===0)return;let t=new w(s,c.value);t.fit(e.trainInput,e.trainOutput.map(u=>u[0]));const n=t.predict(e.testInput(4));e.testResult(n)}else if(i==="RG"){const t=e.datas.dimension;let n=new v(s,c.value);n.fit(e.trainInput,e.trainOutput.map(a=>a[0]));let u=n.predict(e.testInput(t===1?1:4));e.testResult(u)}else if(i==="AD"){const t=new p(s+1,c.value);t.fit(e.trainInput);const n=t.predict(e.trainInput).map(u=>u>r.value);e.trainResult=n}else if(i==="DE"){const t=new N(s+1,c.value);t.fit(e.trainInput);const n=t.predict(e.testInput(5));e.testResult(n)}else if(i==="CP"){const t=new p(s+1,c.value),n=e.trainInput.rolling(o.value);t.fit(n);const u=t.predict(n);for(let a=0;a<o.value/2;a++)u.unshift(0);e.trainResult=u,e.threshold=r.value}else if(i==="SC"){const t=new C(s,c.value);t.fit(e.trainInput,e.trainOutput.map(n=>n[0])),e.trainResult=t.predict()}else if(i==="IN"){let t=new v(1,"euclid");t.fit(e.trainInput,e.trainOutput.map(u=>u[0]));let n=t.predict(e.testInput(1));e.testResult(n)}},"calcKnn"),c=l.select(["euclid","manhattan","chebyshev"]);if(i!=="IN"){const t=l.input.number({label:" k = ",min:1,max:100,value:s}).on("change",()=>{s=t.value})}let o=null;i==="CP"&&(o=l.input.number({label:" window = ",min:1,max:100,value:10}).on("change",()=>{d()}));let r=null;(i==="AD"||i==="CP")&&(r=l.input.number({label:" threshold = ",min:.001,max:10,step:.001,value:i==="AD"?.05:.4}).on("change",function(){d()})),l.input.button("Calculate").on("click",d)}h(b,"default");
