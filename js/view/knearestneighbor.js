import{KNN,KNNRegression,KNNAnomaly,KNNDensityEstimation,SemiSupervisedKNN}from"../../lib/model/knearestneighbor.js";import Controller from"../controller.js";import{specialCategory}from"../utils.js";export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".';const e=new Controller(t),n=t.task;let i=5;const l=function(){if("CF"===n){if(0===t.datas.length)return;let e=new KNN(i,a.value);e.fit(t.trainInput,t.trainOutput.map((t=>t[0])));const n=e.predict(t.testInput(4));t.testResult(n)}else if("RG"===n){const e=t.datas.dimension;let n=new KNNRegression(i,a.value);n.fit(t.trainInput,t.trainOutput.map((t=>t[0])));let l=n.predict(t.testInput(1===e?1:4));t.testResult(l)}else if("AD"===n){const e=new KNNAnomaly(i+1,a.value);e.fit(t.trainInput);const n=e.predict(t.trainInput).map((t=>t>u.value));t.trainResult=n}else if("DE"===n){const e=new KNNDensityEstimation(i+1,a.value);e.fit(t.trainInput);const n=e.predict(t.testInput(5)),l=Math.min(...n),s=Math.max(...n);t.testResult(n.map((t=>specialCategory.density((t-l)/(s-l)))))}else if("CP"===n){const e=new KNNAnomaly(i+1,a.value),n=t.trainInput.rolling(s.value);e.fit(n);const l=e.predict(n);for(let t=0;t<s.value/2;t++)l.unshift(0);t.trainResult=l,t._plotter.threshold=u.value}else if("SC"===n){const e=new SemiSupervisedKNN(i,a.value);e.fit(t.trainInput,t.trainOutput.map((t=>t[0]))),t.trainResult=e.predict()}else if("IN"===n){let e=new KNNRegression(1,"euclid");e.fit(t.trainInput,t.trainOutput.map((t=>t[0])));let n=e.predict(t.testInput(1));t.testResult(n)}},a=e.select(["euclid","manhattan","chebyshev"]);if("IN"!==n){const t=e.input.number({label:" k = ",min:1,max:100,value:i}).on("change",(()=>{i=t.value}))}let s=null;"CP"===n&&(s=e.input.number({label:" window = ",min:1,max:100,value:10}).on("change",(()=>{l()})));let u=null;"AD"!==n&&"CP"!==n||(u=e.input.number({label:" threshold = ",min:.001,max:10,step:.001,value:"AD"===n?.05:.4}).on("change",(function(){l()}))),e.input.button("Calculate").on("click",l)}