var p=Object.defineProperty;var u=(e,n)=>p(e,"name",{value:n,configurable:!0});import{LVQCluster as v,LVQClassifier as k}from"../../lib/model/lvq.js";import L from"../controller.js";export default function g(e){e.setting.ml.usage='Click and add data point. Then, click "Step" button repeatedly.',e.setting.ml.reference={title:"Learning vector quantization (Wikipedia)",url:"https://en.wikipedia.org/wiki/Learning_vector_quantization"};const n=new L(e);let t=null;const c=u(()=>{if(e.task==="CT"){t||(t=new v(s.value)),t.fit(e.trainInput,r.value);const l=t.predict(e.trainInput);e.trainResult=l.map(i=>i+1),e.centroids(t._w,t._w.map((i,d)=>d+1))}else{t||(t=new k(+a.value)),t.fit(e.trainInput,e.trainOutput.map(i=>i[0]),r.value);const l=t.predict(e.testInput(4));e.testResult(l),e.centroids(t._m,t._c)}},"fitModel");let s=null,a=null;e.task==="CT"?s=n.input.number({label:" k ",min:1,max:100,value:5}):a=n.select({values:[1,2,3],texts:["LVQ1","LVQ2.1","LVQ3"]});const o=n.stepLoopButtons().init(()=>{t=null,e.init()}),r=n.input.number({label:" learning rate ",min:.01,max:100,step:.01,value:.1});o.step(c).epoch()}u(g,"default");
