import{LVQCluster,LVQClassifier}from"../../lib/model/lvq.js";import Controller from"../controller.js";var dispLVQ=function(t,e){e.setting.ml.reference={title:"Learning vector quantization (Wikipedia)",url:"https://en.wikipedia.org/wiki/Learning_vector_quantization"};const n=new Controller(e);let a=null;"CT"===e.task?(t.append("span").text(" k "),t.append("input").attr("type","number").attr("name","k").attr("min",1).attr("max",100).attr("value",5)):t.append("select").attr("name","type").selectAll("option").data([{t:"LVQ1",v:1},{t:"LVQ2.1",v:2},{t:"LVQ3",v:3}]).enter().append("option").attr("value",(t=>t.v)).text((t=>t.t));const r=n.stepLoopButtons().init((()=>{a=null,e.init()}));t.append("span").text(" learning rate "),t.append("input").attr("type","number").attr("name","lr").attr("min",.01).attr("max",100).attr("step",.01).attr("value",.1),r.step((n=>{const r=+t.select("[name=lr]").property("value");if("CT"===e.task){if(!a){const e=+t.select("[name=k]").property("value");a=new LVQCluster(e)}a.fit(e.trainInput,r);const n=a.predict(e.trainInput);e.trainResult=n.map((t=>t+1)),e.centroids(a._w,a._w.map(((t,e)=>e+1)))}else{if(!a){const e=+t.select("[name=type]").property("value");a=new LVQClassifier(e)}a.fit(e.trainInput,e.trainOutput.map((t=>t[0])),r);const n=a.predict(e.testInput(4));e.testResult(n),e.centroids(a._m,a._c)}n&&n()})).epoch()};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Step" button repeatedly.',dispLVQ(t.setting.ml.configElement,t)}