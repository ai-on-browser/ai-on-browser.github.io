var l=Object.defineProperty;var r=(e,t)=>l(e,"name",{value:t,configurable:!0});import{LVQCluster as v,LVQClassifier as k}from"../../lib/model/lvq.js";import g from"../controller.js";var y=r(function(e,t){t.setting.ml.reference={title:"Learning vector quantization (Wikipedia)",url:"https://en.wikipedia.org/wiki/Learning_vector_quantization"};const u=new g(t);let n=null;const c=r(a=>{const s=+e.select("[name=lr]").property("value");if(t.task==="CT"){if(!n){const i=+e.select("[name=k]").property("value");n=new v(i)}n.fit(t.trainInput,s);const p=n.predict(t.trainInput);t.trainResult=p.map(i=>i+1),t.centroids(n._w,n._w.map((i,d)=>d+1))}else{if(!n){const i=+e.select("[name=type]").property("value");n=new k(i)}n.fit(t.trainInput,t.trainOutput.map(i=>i[0]),s);const p=n.predict(t.testInput(4));t.testResult(p),t.centroids(n._m,n._c)}a&&a()},"fitModel");t.task==="CT"?(e.append("span").text(" k "),e.append("input").attr("type","number").attr("name","k").attr("min",1).attr("max",100).attr("value",5)):e.append("select").attr("name","type").selectAll("option").data([{t:"LVQ1",v:1},{t:"LVQ2.1",v:2},{t:"LVQ3",v:3}]).enter().append("option").attr("value",a=>a.v).text(a=>a.t);const o=u.stepLoopButtons().init(()=>{n=null,t.init()});e.append("span").text(" learning rate "),e.append("input").attr("type","number").attr("name","lr").attr("min",.01).attr("max",100).attr("step",.01).attr("value",.1),o.step(c).epoch()},"dispLVQ");export default function L(e){e.setting.ml.usage='Click and add data point. Then, click "Step" button repeatedly.',y(e.setting.ml.configElement,e)}r(L,"default");
