var g=Object.defineProperty;var p=(t,e)=>g(t,"name",{value:e,configurable:!0});import y from"../../lib/model/canny.js";var v=p(function(t,e){e.colorSpace="gray";const i=p(()=>{const o=+t.select("[name=th1]").property("value"),s=+t.select("[name=th2]").property("value"),c=e._step;e._step=1;const n=e.trainInput,u=new y(o,s);for(let a=0;a<n.length;a++)for(let r=0;r<n[a].length;r++)n[a][r]=n[a][r].reduce((l,d)=>l+d,0)/n[a][r].length;let h=u.predict(n);e.trainResult=h.flat(),e._step=c},"fitModel");t.append("span").text(" big threshold "),t.append("input").attr("type","number").attr("name","th1").attr("value",200).attr("min",0).attr("max",255).on("change",i),t.append("span").text(" small threshold "),t.append("input").attr("type","number").attr("name","th2").attr("value",80).attr("min",0).attr("max",255).on("change",i),t.append("input").attr("type","button").attr("value","Fit").on("click",i)},"dispCanny");export default function x(t){t.setting.ml.usage='Click "Fit" button.',v(t.setting.ml.configElement,t)}p(x,"default");
