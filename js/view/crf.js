var v=Object.defineProperty;var p=(t,e)=>v(t,"name",{value:e,configurable:!0});import g from"../../lib/util/matrix.js";import M from"../../lib/model/crf.js";import R from"../controller.js";var b=p(function(t,e){const x=new R(e);let a=null,c=0;const f=p(function(l){let r=e.trainInput;const u=+t.select("[name=discrete]").property("value"),m=+t.select("[name=iteration]").property("value");a||(a=new M);const s=g.fromArray(r),d=s.max(),o=s.min();r=r.map(n=>n.map(i=>Math.floor((i-o)/(d-o)*u)));for(let n=0;n<m;n++)a.fit(r,e.trainOutput.map(i=>Array(s.cols).fill(i[0])));c+=m;const C=e.testInput(10).map(n=>n.map(i=>Math.floor((i-o)/(d-o)*u))),h=a.predict(C);e.testResult(h.map(n=>n[0]??-1)),l&&l()},"fitModel");t.append("span").text(" discrete = "),t.append("input").attr("type","number").attr("name","discrete").attr("value",10).attr("min",2).attr("max",100);const y=x.stepLoopButtons().init(()=>{a=null,e.init()});t.append("span").text(" iteration "),t.append("input").attr("type","number").attr("name","iteration").attr("value",1).attr("min",1).attr("max",1e3),y.step(f).epoch(()=>c)},"dispCRF");export default function k(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',b(t.setting.ml.configElement,t)}p(k,"default");
