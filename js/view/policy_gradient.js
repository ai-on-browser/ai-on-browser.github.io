import PGAgent from"../../lib/model/policy_gradient.js";var dispPolicyGradient=function(t,e){const n="grid"===e.type?Math.max(...e.env.size):20;let r=new PGAgent(e,n),a=e.reset(r);e.render((()=>r.get_score(e)));let p=[];const i=(n=!0)=>{const i=+t.select("[name=learning_rate]").property("value"),o=r.get_action(e,a),[s,l,u]=e.step(o,r);return p.push([o,a,l]),n&&e.render(),a=s,u&&(r.update(p,i),p=[]),u},o=()=>{a=e.reset(r),p=[],e.render((()=>r.get_score(e)))};t.append("span").text("Resolution"),t.append("input").attr("type","number").attr("name","resolution").attr("min",2).attr("max",100).attr("value",n);const s=e.setting.ml.controller.stepLoopButtons().init((()=>{const n=+t.select("[name=resolution]").property("value");r=new PGAgent(e,n),o()}));t.append("input").attr("type","button").attr("value","Reset").on("click",o),t.append("span").text(" Learning rate "),t.append("input").attr("type","number").attr("name","learning_rate").attr("min",.01).attr("max",10).attr("step","0.01").attr("value",.1),s.step((t=>{i()?setTimeout((()=>{o(),t&&setTimeout(t,10)})):t&&setTimeout(t,5)})).skip((()=>{i(!1)&&o()})),e.plotRewards(t)};export default function(t){t.setting.ml.usage='Click "step" to update.',dispPolicyGradient(t.setting.ml.configElement,t)}