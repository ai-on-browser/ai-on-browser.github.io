var v=Object.defineProperty;var a=(t,n)=>v(t,"name",{value:n,configurable:!0});import{XGBoost as d,XGBoostClassifier as x}from"../../lib/model/xgboost.js";import C from"../controller.js";export default function g(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.';const n=new C(t),r=t.task;let e=null;const m=a(()=>{e||(r==="CF"?(e=new x(l.value,u.value,s.value,o.value),e.init(t.trainInput,t.trainOutput.map(i=>i[0]))):(e=new d(l.value,u.value,s.value,o.value),e.init(t.trainInput,t.trainOutput)));for(let i=0;i<c.value;i++)e.fit();let b=e.predict(t.testInput(4));t.testResult(b)},"fitModel"),l=n.input.number({label:" max depth = ",min:1,max:10,value:1}),u=n.input.number({label:" Sampling rate ",min:.1,max:1,step:.1,value:.8}),s=n.input.number({label:" lambda = ",min:.1,max:10,step:.1,value:.1}),o=n.input.number({label:" learning rate = ",min:0,max:10,step:.1,value:.1}),p=n.stepLoopButtons().init(()=>{e=null,t.init()}),c=n.input.number({label:" Iteration ",min:1,max:100,value:1});p.step(m).epoch(()=>e.size)}a(g,"default");
