var m=Object.defineProperty;var a=(t,n)=>m(t,"name",{value:n,configurable:!0});import x from"../../lib/model/pcm.js";import b from"../../lib/util/matrix.js";import g from"../controller.js";var y=a(function(t,n){const d=new g(n);let e=null;const c=a((i,r)=>{i&&e.fit();const l=b.fromArray(e.predict());n.trainResult=l.argmax(1).value.map(o=>o+1),n.centroids(e._c,e._c.map((o,u)=>u+1),{line:!0}),r&&r()},"fitModel");t.append("span").text("m"),t.append("input").attr("type","number").attr("name","m").attr("max",10).attr("min",1.1).attr("step",.1).attr("value",2);const s=a(()=>{e.add(),t.select("[name=clusternumber]").text(e._c.length+" clusters"),n.centroids(e._c,e._c.map((i,r)=>r+1),{line:!0}),c(!1)},"addCentroid"),p=d.stepLoopButtons().init(()=>{const i=+t.select("[name=m]").property("value");e=new x(i),e.init(n.trainInput),n.init(),s()});t.append("input").attr("type","button").attr("value","Add centroid").on("click",s),t.append("span").attr("name","clusternumber").style("padding","0 10px").text("0 clusters"),p.step(i=>{c(!0,i)}).epoch()},"dispPossibilisticCMeans");export default function f(t){t.setting.ml.usage='Click and add data point. Next, click "Add centroid" to add centroid. Finally, click "Step" button repeatedly.',y(t.setting.ml.configElement,t)}a(f,"default");
