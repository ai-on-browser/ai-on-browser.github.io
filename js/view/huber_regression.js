var u=Object.defineProperty;var r=(t,e)=>u(t,"name",{value:e,configurable:!0});import c from"../../lib/model/huber_regression.js";import m from"../controller.js";var y=r(function(t,e){const o=new m(e);let a=null;const s=r(()=>{if(!a){const l=t.select("[name=method]").property("value"),i=+t.select("[name=e]").property("value"),d=+t.select("[name=lr]").property("value");a=new c(i,l,d)}a.fit(e.trainInput,e.trainOutput);let n=a.predict(e.testInput(4));e.testResult(n)},"fitModel");t.append("select").attr("name","method").on("change",()=>{const n=t.select("[name=method]").property("value");p.style("display",n==="gd"?null:"none")}).selectAll("option").data(["rls","gd"]).enter().append("option").attr("value",n=>n).text(n=>n),t.append("span").text(" e "),t.append("input").attr("type","number").attr("name","e").attr("value",1).attr("min",0).attr("max",100).attr("step",.1);const p=t.append("span").text(" rate ").style("display","none");p.append("input").attr("type","number").attr("name","lr").attr("value",1).attr("min",0).attr("max",10).attr("step",.01),o.stepLoopButtons().init(()=>{a=null,e.init()}).step(s).epoch()},"dispHR");export default function g(t){t.setting.ml.usage='Click and add data point. Next, click "Fit" button.',y(t.setting.ml.configElement,t)}r(g,"default");
