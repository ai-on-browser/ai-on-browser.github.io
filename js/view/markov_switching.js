import MarkovSwitching from"../../lib/model/markov_switching.js";var dispMSM=function(t,e){let a=null;t.append("span").text(" regime = "),t.append("input").attr("type","number").attr("name","regime").attr("value",3).attr("min",2).attr("max",100),t.append("span").text(" trial = "),t.append("input").attr("type","number").attr("name","trial").attr("value",1e4).attr("min",1).attr("max",1e8),t.append("span").text(" threshold = "),t.append("input").attr("type","number").attr("name","threshold").attr("value",.1).attr("min",0).attr("max",100).attr("step",.01).on("change",(()=>{const e=+t.select("[name=threshold]").property("value");a&&a(e)}));const r=t.append("input").attr("type","button").attr("value","Calculate").on("click",(()=>{r.property("disabled",!0),setTimeout((()=>{var n;n=()=>{r.property("disabled",!1)},e.fit(((e,r,p,i)=>{const l=+t.select("[name=regime]").property("value"),o=+t.select("[name=trial]").property("value"),m=new MarkovSwitching(l);m.fit(e,1,o);const s=+t.select("[name=threshold]").property("value"),d=m.predict(e);a=i,p(d,s),n&&n()}))}),0)}))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispMSM(t.setting.ml.configElement,t)}