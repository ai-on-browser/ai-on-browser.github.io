import MarkovSwitching from"../../lib/model/markov_switching.js";var dispMSM=function(t,e){t.append("span").text(" regime = "),t.append("input").attr("type","number").attr("name","regime").attr("value",3).attr("min",2).attr("max",100),t.append("span").text(" trial = "),t.append("input").attr("type","number").attr("name","trial").attr("value",1e4).attr("min",1).attr("max",1e8),t.append("span").text(" threshold = "),t.append("input").attr("type","number").attr("name","threshold").attr("value",.1).attr("min",0).attr("max",100).attr("step",.01).on("change",(()=>{const a=+t.select("[name=threshold]").property("value");e._plotter.threshold=a}));const a=t.append("input").attr("type","button").attr("value","Calculate").on("click",(()=>{a.property("disabled",!0),setTimeout((()=>{!function(a){const r=+t.select("[name=regime]").property("value"),n=+t.select("[name=trial]").property("value"),p=new MarkovSwitching(r);p.fit(e.trainInput,1,n);const i=+t.select("[name=threshold]").property("value"),l=p.predict(e.trainInput);e.trainResult=l,e._plotter.threshold=i,a&&a()}((()=>{a.property("disabled",!1)}))}),0)}))};export default function(t){t.setting.ml.usage='Click and add data point. Then, click "Calculate".',dispMSM(t.setting.ml.configElement,t)}