import{ILK,SILK}from"../../lib/model/silk.js";import EnsembleBinaryModel from"../../lib/model/ensemble_binary.js";import Controller from"../controller.js";export default function(e){e.setting.ml.usage='Click and add data point. Then, click "Step".',e.setting.ml.reference={author:"L. Cheng, S. V. N. Vishwanathan, D. Schuurmans, S. Wang, T. Caelli",title:"Implicit Online Learning with Kernels",year:2006};const l=new Controller(e);let n=null;const t=l.select(["oneone","onerest"]),a=l.select(["ilk","silk"]),i=l.select(["gaussian","polynomial"]),u=l.input.number({label:" eta ",min:0,max:100,step:.1,value:.1}),s=l.input.number({label:" lambda ",min:0,max:100,step:.1,value:.1}),o=l.input.number({label:" c ",min:0,max:100,step:.1,value:.1}),r=l.input.number({label:" w ",min:0,max:1e3,value:10}),m=l.select(["square","hinge","logistic"]);l.stepLoopButtons().init((()=>{n=null,e.init()})).step((l=>{n||(n=new EnsembleBinaryModel((function(){return"ilk"===a.value?new ILK(u.value,s.value,o.value,i.value,m.value):new SILK(u.value,s.value,o.value,r.value,i.value,m.value)}),t.value)),n.fit(e.trainInput,e.trainOutput.map((e=>e[0])));const p=n.predict(e.testInput(3));e.testResult(p),l&&l()})).epoch()}