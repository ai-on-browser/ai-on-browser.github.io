import{getCategoryColor,specialCategory}from"../../utils.js";class DataPointCirclePlotter{constructor(t,e){this._svg=t,this.item=e,e||(this.item=document.createElementNS("http://www.w3.org/2000/svg","circle"),this._svg.append(this.item))}attr(t,e){return void 0!==e?(this.item.setAttribute(t,e),this):this.item.getAttribute(t)}cx(t){return this.attr("cx",t)}cy(t){return this.attr("cy",t)}color(t){return this.attr("fill",t)}radius(t){return this.attr("r",t)}title(t){if(this.item.replaceChildren(),t&&""!==t){const e=document.createElementNS("http://www.w3.org/2000/svg","title");this.item.append(e),e.replaceChildren(t)}return this}remove(){return this.item.remove()}}export class DataPointStarPlotter{constructor(t,e,i){this._svg=t,this._c=[0,0],this._r=5,e?(this.g=e,this.polygon=i):(this.g=document.createElementNS("http://www.w3.org/2000/svg","g"),this._svg.append(this.g),this.polygon=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.g.append(this.polygon),this.polygon.setAttribute("points",this._path()),this.polygon.setAttribute("stroke","black"))}_path(){return[[-Math.sin(2*Math.PI/5),-Math.cos(2*Math.PI/5)],[-Math.sin(Math.PI/5)/2,-Math.cos(Math.PI/5)/2],[0,-1],[Math.sin(Math.PI/5)/2,-Math.cos(Math.PI/5)/2],[Math.sin(2*Math.PI/5),-Math.cos(2*Math.PI/5)],[Math.sin(3*Math.PI/5)/2,-Math.cos(3*Math.PI/5)/2],[Math.sin(4*Math.PI/5),-Math.cos(4*Math.PI/5)],[0,.5],[-Math.sin(4*Math.PI/5),-Math.cos(4*Math.PI/5)],[-Math.sin(3*Math.PI/5)/2,-Math.cos(3*Math.PI/5)/2]].reduce(((t,e)=>t+e[0]*this._r+","+e[1]*this._r+" "),"")}cx(t){return this._c[0]=t||this._c[0],void 0!==t?(this.g.setAttribute("transform","translate("+this._c[0]+", "+this._c[1]+")"),this):this._c[0]}cy(t){return this._c[1]=t||this._c[1],void 0!==t?(this.g.setAttribute("transform","translate("+this._c[0]+", "+this._c[1]+")"),this):this._c[1]}color(t){return void 0!==t?(this.polygon.setAttribute("fill",t),this):this.polygon.getAttribute("fill")}radius(t){return this._r=t||this._r,void 0!==t?(this.polygon.setAttribute("points",this._path()),this):this._r}title(t){if(this.polygon.replaceChildren(),t&&""!==t){const e=document.createElementNS("http://www.w3.org/2000/svg","title");this.polygon.append(e),e.replaceChildren(t)}return this}duration(t){return this.g.style.transitionDuration=t+"ms",this.g.style.transitionTimingFunction="linear",this.polygon.style.transitionDuration=t+"ms",this.polygon.style.transitionTimingFunction="linear",this}remove(){return this.g.remove()}}class DataVector{constructor(t){this.value=t instanceof DataVector?t.value:t}get length(){return Math.sqrt(this.value.reduce(((t,e)=>t+e*e),0))}map(t){return new DataVector(this.value.map(t))}reduce(t,e){return this.value.reduce(t,e)}add(t){return this.map(((e,i)=>e+t.value[i]))}sub(t){return this.map(((e,i)=>e-t.value[i]))}mult(t){return this.map((e=>e*t))}div(t){return this.map((e=>e/t))}dot(t){return this.value.reduce(((e,i,s)=>e+i*t.value[s]),0)}distance(t){return Math.sqrt(this.value.reduce(((e,i,s)=>e+(i-t.value[s])**2),0))}angleCos(t){return this.dot(t)/(this.length*t.length)}equals(t){return this.value.every(((e,i)=>e===t.value[i]))}}export class DataPoint{constructor(t,e=[0,0],i=0){this.svg=t,this.vector=new DataVector(e),this._color=getCategoryColor(i),this._category=i,this._radius=5,this._plotter=new DataPointCirclePlotter(this.svg),this._binds=[],this.display()}display(){this._plotter.cx(""+this.vector.value[0]).cy(""+this.vector.value[1]).radius(this._radius).color(this._color),this._binds.forEach((t=>t.display()))}get item(){return this._plotter.item}get at(){return this.vector.value}set at(t){this.vector=new DataVector(t),this.display()}get color(){return this._color}get category(){return this._category}set category(t){this._category=t,this._color=getCategoryColor(t),this.display()}get radius(){return this._radius}set radius(t){this._radius=t,this.display()}set title(t){this._plotter.title(t)}plotter(t){this._plotter.remove(),this._plotter=new t(this.svg),this.display()}remove(){this._plotter.remove(),this._binds.forEach((t=>t.remove()))}move(t,e=1e3){this.vector=new DataVector(t),this._plotter.duration(e).cx(this.vector.value[0]).cy(this.vector.value[1]),this._binds.forEach((t=>t.move(e)))}distance(t){return this.vector.distance(t.vector)}bind(t){this._binds.push(t)}removeBind(t){this._binds=this._binds.filter((e=>e!==t))}static sum(t){return 0===t.length?[]:t.slice(1).reduce(((t,e)=>t.add(e.vector)),t[0].vector)}static mean(t){return 0===t.length?[]:DataPoint.sum(t).div(t.length)}}export class DataCircle{constructor(t,e){this._svg=t,this.item=document.createElementNS("http://www.w3.org/2000/svg","circle"),this._svg.append(this.item),this.item.setAttribute("fill-opacity",0),this._at=e,this._color=null,this._width=4,e.bind(this),this.display()}get color(){return this._color||this._at.color}set color(t){this._color=t,this.display()}set title(t){if(this.item.replaceChildren(),t&&t.length>0){const e=document.createElementNS("http://www.w3.org/2000/svg","title");this.item.append(e),e.replaceChildren(t)}}display(){this.item.setAttribute("cx",this._at.at[0]),this.item.setAttribute("cy",this._at.at[1]),this.item.setAttribute("stroke",this.color),this.item.setAttribute("stroke-width",this._width),this.item.setAttribute("r",this._at._radius)}remove(){this.item.remove(),this._at.removeBind(this)}}export class DataLine{constructor(t,e,i){this._svg=t,this.item=document.createElementNS("http://www.w3.org/2000/svg","line"),this._svg.append(this.item),this._from=e,this._to=i,this._remove_listener=null,e&&e.bind(this),i&&i.bind(this),this.display()}set from(t){this._from&&this._from.removeBind(this),this._from=t,this._from.bind(this)}set to(t){this._to&&this._to.removeBind(this),this._to=t,this._to.bind(this)}display(){this._from&&this._to&&(this.item.setAttribute("x1",this._from.at[0]),this.item.setAttribute("y1",this._from.at[1]),this.item.setAttribute("x2",this._to.at[0]),this.item.setAttribute("y2",this._to.at[1]),this.item.setAttribute("stroke",this._from.color))}move(t=1e3){if(!this._from||!this._to)return;if(0===t)return void this.display();const e=+this.item.getAttribute("x1"),i=+this.item.getAttribute("y1"),s=+this.item.getAttribute("x2"),r=+this.item.getAttribute("y2"),h=this._from.at[0]-e,o=this._from.at[1]-i,a=this._to.at[0]-s,l=this._to.at[1]-r;let n=0,c=0;const u=_=>{n||(n=_);const m=Math.min(1,(_-n)/t);if(Math.abs(_-c)>15){if(0!==h&&this.item.setAttribute("x1",e+h*m),0!==o&&this.item.setAttribute("y1",i+o*m),0!==a&&this.item.setAttribute("x2",s+a*m),0!==l&&this.item.setAttribute("y2",r+l*m),m>=1)return;c=_}requestAnimationFrame(u)};requestAnimationFrame(u)}remove(){this.item.remove(),this._from&&this._from.removeBind(this),this._from=null,this._to&&this._to.removeBind(this),this._to=null,this._remove_listener&&this._remove_listener(this)}setRemoveListener(t){this._remove_listener=t}}export class DataConvexHull{constructor(t,e){this._svg=t,this.item=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this._svg.append(this.item),this._points=e,this._color=null,this.display()}get color(){return this._color||this._points[0].color}set color(t){this._color=t,this.display()}_argmin(t,e){return 0===t.length?-1:(t=e?t.map(e):t).indexOf(Math.min(...t))}_convexPoints(){if(this._points.length<=3)return this._points;let t=[].concat(this._points),e=this._argmin(t,(t=>t.at[1]));const i=t.splice(e,1)[0];t.sort(((t,e)=>{let s=t.vector.sub(i.vector),r=e.vector.sub(i.vector);return s.value[0]/s.length-r.value[0]/r.length}));let s=[i];for(let e=0;e<t.length;e++){for(;s.length>=3;){let r=s.length;const h=s[r-1].vector.sub(s[r-2].vector).value,o=t[e].vector.sub(s[r-2].vector).value,a=i.vector.sub(s[r-2].vector).value;if((h[0]*a[1]-h[1]*a[0])*(h[0]*o[1]-h[1]*o[0])>0)break;s.pop()}s.push(t[e])}return s}display(){let t=this._convexPoints().reduce(((t,e)=>t+e.at[0]+","+e.at[1]+" "),"");this.item.setAttribute("points",t),this.item.setAttribute("stroke",this.color),this.item.setAttribute("fill",this.color),this.item.setAttribute("opacity",.5)}remove(){this.item.remove()}}class DataMap{constructor(){this._data=[],this._size=[0,0]}get rows(){return this._size[0]}get cols(){return this._size[1]}at(t,e){return t<0||!this._data[t]||e<0?void 0:this._data[t][e]}set(t,e,i){this._data[t]||(this._data[t]=[]),this._data[t][e]=i,this._size[0]=Math.max(this._size[0],t+1),this._size[1]=Math.max(this._size[1],e+1)}}export class DataHulls{constructor(t,e,i,s=!1,r=null){this._svg=t,this._categories=e,this._tileSize=i,Array.isArray(this._tileSize)||(this._tileSize=[this._tileSize,this._tileSize]),this._use_canvas=s,this._mousemove=r,this.display()}display(){if(this._use_canvas){const t=document.querySelector("#plot-area svg"),e=document.createElement("canvas");e.width=t.getBoundingClientRect().width,e.height=t.getBoundingClientRect().height;let i=e.getContext("2d");for(let t=0;t<this._categories.length;t++)for(let e=0;e<this._categories[t].length;e++)i.fillStyle=getCategoryColor(this._categories[t][e]),i.fillRect(Math.round(e*this._tileSize[0]),Math.round(t*this._tileSize[1]),Math.ceil(this._tileSize[0]),Math.ceil(this._tileSize[1]));let s=this;const r=document.createElementNS("http://www.w3.org/2000/svg","image");return this._svg.append(r),r.setAttribute("x",0),r.setAttribute("y",0),r.setAttribute("width",e.width),r.setAttribute("height",e.height),r.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",e.toDataURL()),void(r.onmousemove=t=>{const e=d3.pointer(t);this._mousemove&&this._mousemove(s._categories[Math.round(e[1]/s._tileSize)][Math.round(e[0]/s._tileSize)])})}let t=new DataMap;for(let e=0;e<this._categories.length;e++)for(let i=0;i<this._categories[e].length;i++)null===this._categories[e][i]?t.set(e,i,null):t.set(e,i,Math.round(this._categories[e][i]));const e=[];for(let i=0;i<t.rows;i++)for(let s=0;s<t.cols;s++){if(t.at(i,s)<=specialCategory.never)continue;let r=t.at(i,s),h=new DataMap,o=new DataMap,a=[[i,s]],l=!1;for(;a.length>0;){let[e,i]=a.pop();t.at(e,i)===r?(h.set(e,i,1),t.set(e,i,specialCategory.never),a.push([e-1,i]),a.push([e+1,i]),a.push([e,i-1]),a.push([e,i+1]),o.set(e,i,1!==h.at(e-1,i)&&t.at(e-1,i)!==r||1!==h.at(e+1,i)&&t.at(e+1,i)!==r||1!==h.at(e,i-1)&&t.at(e,i-1)!==r||1!==h.at(e,i+1)&&t.at(e,i+1)!==r)):void 0===t.at(e,i)&&null===r&&(l=!0)}if(l)continue;let n=[[i,s]],c=i,u=s+1;const _=t.rows*t.cols;let m=0,g="r";for(;c!=i||u!=s;){let t=h.at(c-1,u-1),i=h.at(c-1,u),s=h.at(c,u-1),r=h.at(c,u);if(i&&t&&s&&r){e.push([c,u]);break}if(i&&t&&s)n.push([c,u]),g="b";else if(t&&s&&r)n.push([c,u]),g="r";else if(s&&r&&i)n.push([c,u]),g="t";else if(r&&i&&t)n.push([c,u]),g="l";else if(i&&t)g="l";else if(t&&s)g="b";else if(s&&r)g="r";else if(r&&i)g="t";else if(i&&s)n.push([c,u]),"l"===g?g="t":"r"===g?g="b":e.push([c,u]);else if(t&&r)n.push([c,u]),"t"===g?g="r":"b"===g?g="l":e.push([c,u]);else if(i)n.push([c,u]),g="t";else if(t)n.push([c,u]),g="l";else if(s)n.push([c,u]),g="b";else{if(!r){e.push([c,u]);break}n.push([c,u]),g="r"}if("r"===g?u+=1:"l"===g?u-=1:"b"===g?c+=1:"t"===g&&(c-=1),m+=1,m>=_){e.push([c,u]);break}}const p=document.createElementNS("http://www.w3.org/2000/svg","polygon");this._svg.append(p),p.setAttribute("points",n.reduce(((t,e)=>t+e[1]*this._tileSize[0]+","+e[0]*this._tileSize[1]+" "),"")),p.setAttribute("fill",null===r?"white":getCategoryColor(r))}if(e.length>0){let t="";e.length>100?(t="[",t+=e.slice(0,50).map(JSON.stringify).join(","),t+=",...,",t+=e.slice(-50).map(JSON.stringify).join(","),t+="]"):t=JSON.stringify(e),console.log("invalid loop condition at "+t)}}}