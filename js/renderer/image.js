var p=Object.defineProperty;var c=(l,e)=>p(l,"name",{value:e,configurable:!0});import m from"./base.js";import{specialCategory as _,getCategoryColor as d}from"../utils.js";import y from"../data/loader/image.js";export default class g extends m{static{c(this,"ImageRenderer")}constructor(e){super(e),this._size=[0,0];const s=this.setting.render.addItem("image"),n=document.createElement("div");s.appendChild(n),n.append(" overwrap "),this._opacity=document.createElement("input"),this._opacity.name="opacity",this._opacity.type="range",this._opacity.min=0,this._opacity.max=1,this._opacity.step=.1,this._opacity.value=.5,this._opacity.oninput=()=>{this._overlay&&(this._overlay.style.opacity=this._opacity.value)},n.appendChild(this._opacity),this._root=document.createElement("div"),s.appendChild(this._root),this._root.style.position="relative",this._root.style.border="1px solid black"}get width(){return this._size[0]}set width(e){this._size[0]=e,this._root.style.width=`${e}px`}get height(){return this._size[1]}set height(e){this._size[1]=e,this._root.style.height=`${e}px`}set trainResult(e){this._displayResult(e)}init(){this._overlay?.remove(),this._root.replaceChildren()}render(){if(this._root.querySelector("canvas.base-img")?.remove(),!this.datas||!this.datas.x||!Array.isArray(this.datas.x[0])||!Array.isArray(this.datas.x[0][0]))return;const e=this.datas.x[0],s=this._manager.platform._color_space?y.applySpace(e,this._manager.platform._color_space,this._manager.platform._normalize,this._manager.platform._binary_threshold):e,n=s[0][0].length,o=document.createElement("canvas");o.classList.add("base-img"),o.style.position="absolute",o.width=e[0].length,o.height=e.length;const h=o.getContext("2d"),r=h.createImageData(o.width,o.height);for(let i=0,t=0;i<o.height;i++)for(let a=0;a<o.width;a++,t+=4)r.data[t]=s[i][a][0],n===1?(r.data[t+1]=s[i][a][0],r.data[t+2]=s[i][a][0],r.data[t+3]=255):n===3?(r.data[t+1]=s[i][a][1],r.data[t+2]=s[i][a][2],r.data[t+3]=255):(r.data[t+1]=s[i][a][1],r.data[t+2]=s[i][a][2],r.data[t+3]=s[i][a][3]);h.putImageData(r,0,0),this._root.firstChild?this._root.insertBefore(o,this._root.firstChild):this._root.appendChild(o),this.width=o.width,this.height=o.height}testResult(e){this._displayResult(e)}_displayResult(e){this._overlay?.remove();const s=document.createElement("canvas");s.classList.add("overlay"),s.style.position="absolute",s.style.opacity=this._opacity.value,s.width=this.width,s.height=this.height;const n=s.getContext("2d"),o=n.createImageData(s.width,s.height);for(let h=0,r=0;h<this.height;h++)for(let i=0;i<this.width;i++,r+=4){const t=[0,0,0,0];if(Array.isArray(e[h][i]))t[0]=e[h][i][0],t[3]=255,e[h][i].length===1?(t[1]=e[h][i][0],t[2]=e[h][i][0]):(t[1]=e[h][i][1],t[2]=e[h][i][2]);else if(e[h][i]===!0||e[h][i]===!1)if(e[h][i]){const a=d(_.error);t[0]=a.r,t[1]=a.g,t[2]=a.b,t[3]=(a.opacity??1)*255}else t[0]=255,t[1]=255,t[2]=255,t[3]=255;else{const a=d(e[h][i]);t[0]=a.r,t[1]=a.g,t[2]=a.b,t[3]=(a.opacity??1)*255}o.data[r]=t[0],o.data[r+1]=t[1],o.data[r+2]=t[2],o.data[r+3]=t[3]}n.putImageData(o,0,0),this._root.appendChild(s),this._overlay=s}terminate(){this.setting.render.removeItem("image"),super.terminate()}}
