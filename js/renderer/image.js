var p=Object.defineProperty;var c=(n,e)=>p(n,"name",{value:e,configurable:!0});import m from"./base.js";import{specialCategory as _,getCategoryColor as d}from"../utils.js";import y from"../data/loader/image.js";export default class g extends m{static{c(this,"ImageRenderer")}constructor(e){super(e),this._size=[0,0];const a=this.setting.render.addItem("image"),l=document.createElement("div");a.appendChild(l),l.append(" overwrap "),this._opacity=document.createElement("input"),this._opacity.name="opacity",this._opacity.type="range",this._opacity.min=0,this._opacity.max=1,this._opacity.step=.1,this._opacity.value=.5,this._opacity.oninput=()=>{this._overlay&&(this._overlay.style.opacity=this._opacity.value)},l.appendChild(this._opacity),this._root=document.createElement("div"),a.appendChild(this._root),this._root.style.position="relative",this._root.style.border="1px solid black"}set trainResult(e){this._displayResult(e)}init(){this._overlay?.remove(),this._root.replaceChildren()}render(){if(this._root.querySelector("canvas.base-img")?.remove(),!this.datas||!this.datas.x||!Array.isArray(this.datas.x[0])||!Array.isArray(this.datas.x[0][0]))return;const e=this.datas.x[0],a=this._manager.platform._color_space?y.applySpace(e,this._manager.platform._color_space,this._manager.platform._normalize,this._manager.platform._binary_threshold):e,l=a[0][0].length,s=document.createElement("canvas");s.classList.add("base-img"),s.style.position="absolute",s.width=e[0].length,s.height=e.length;const h=s.getContext("2d"),r=h.createImageData(s.width,s.height);for(let i=0,t=0;i<s.height;i++)for(let o=0;o<s.width;o++,t+=4)r.data[t]=a[i][o][0],l===1?(r.data[t+1]=a[i][o][0],r.data[t+2]=a[i][o][0],r.data[t+3]=255):l===3?(r.data[t+1]=a[i][o][1],r.data[t+2]=a[i][o][2],r.data[t+3]=255):(r.data[t+1]=a[i][o][1],r.data[t+2]=a[i][o][2],r.data[t+3]=a[i][o][3]);h.putImageData(r,0,0),this._root.firstChild?this._root.insertBefore(s,this._root.firstChild):this._root.appendChild(s),this._size=[s.width,s.height],this._root.style.width=`${s.width}px`,this._root.style.height=`${s.height}px`}testResult(e){this._displayResult(e)}_displayResult(e){this._overlay?.remove();const a=document.createElement("canvas");a.classList.add("overlay"),a.style.position="absolute",a.style.opacity=this._opacity.value,a.width=this._size[0],a.height=this._size[1];const l=a.getContext("2d"),s=l.createImageData(a.width,a.height);for(let h=0,r=0;h<this._size[1];h++)for(let i=0;i<this._size[0];i++,r+=4){const t=[0,0,0,0];if(Array.isArray(e[h][i]))t[0]=e[h][i][0],t[3]=255,e[h][i].length===1?(t[1]=e[h][i][0],t[2]=e[h][i][0]):(t[1]=e[h][i][1],t[2]=e[h][i][2]);else if(e[h][i]===!0||e[h][i]===!1)if(e[h][i]){const o=d(_.error);t[0]=o.r,t[1]=o.g,t[2]=o.b,t[3]=(o.opacity??1)*255}else t[0]=255,t[1]=255,t[2]=255,t[3]=255;else{const o=d(e[h][i]);t[0]=o.r,t[1]=o.g,t[2]=o.b,t[3]=(o.opacity??1)*255}s.data[r]=t[0],s.data[r+1]=t[1],s.data[r+2]=t[2],s.data[r+3]=t[3]}l.putImageData(s,0,0),this._root.appendChild(a),this._overlay=a}terminate(){this.setting.render.removeItem("image"),super.terminate()}}
