import BaseRenderer from"./base.js";export default class TableRenderer extends BaseRenderer{constructor(t){super(t),0===this.svg.select("g.rc-render").size()&&this.svg.append("g").classed("rc-render",!0).style("transform","scale(1, -1) translate(0, -100%)"),this._r=this.svg.select("g.rc-render"),this._r.selectAll("*").remove();const e=this.svg.node();this.svg.selectAll("g:not(.rc-render)").filter((function(){return this.parentNode===e})).style("visibility","hidden")}render(){this._r.selectAll("*").remove();const t=this.datas;if(!t)return;const e=this._r.append("foreignObject").attr("x",0).attr("y",0).attr("width",this.width).attr("height",this.height).style("overflow","scroll").append("xhtml:table").attr("width",this.width).attr("height",this.height).attr("border",1).style("border-collapse","collapse"),r=t.columnNames,s=t.originalX,l=t.originalY;if(r){const t=e.append("tr");for(const e of r)t.append("td").text(e);l&&l.length>0&&t.append("td").text("target")}const i=e;for(let e=0;e<t.length;e++){const t=i.append("tr");for(let r=0;r<s[e].length;r++)t.append("td").text(s[e][r]);l&&l.length>0&&t.append("td").text(l[e])}}terminate(){this._r?.remove(),this.svg.selectAll("g").style("visibility",null),super.terminate()}}