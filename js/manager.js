import{DefaultPlatform}from"./platform/base.js";import{EmptyData}from"./data/base.js";import ManualData from"./data/manual.js";const loadedPlatform={"":DefaultPlatform},loadedData={"":EmptyData,manual:ManualData},loadedModel={};export default class AIManager{constructor(t){this._setting=t,this._platform=new DefaultPlatform(null,this),this._task="",this._datas=new ManualData(this),this._dataset="manual",this._modelname="",this._listener=[]}get platform(){return this._platform}get task(){return this._task}get setting(){return this._setting}get datas(){return this._datas}onReady(t){if(this._platform&&this._datas)return t();this._listener.push(t)}resolveListeners(){for(const t of this._listener)t();this._listener=[]}resolveListenersIfCan(){this._platform&&this._datas&&this.resolveListeners()}async setTask(t){if(!this._platform)return;if(this._task===t)return void this._platform.init();this._platform.terminate(),this._platform=null,this._task=t;let a="";if("MD"===this._task||"GM"===this._task?a="rl":"TP"===this._task||"SM"===this._task||"CP"===this._task?a="series":"SG"===this._task||"DN"===this._task||"ED"===this._task?a="image":"WE"===this._task?a="document":"SC"===this._task?a="semisupervised":"RC"===this._task&&(a="recommend"),!loadedPlatform[a]){const t=await import(`./platform/${a}.js`);loadedPlatform[a]=t.default}if("MD"===t||"GM"===t)return new Promise((s=>{new loadedPlatform[a](t,this,(t=>{this._platform=t,this._platform.init(),this._setting.ml.modelName||t.render(),this.resolveListenersIfCan(),s()}))}));this._platform=new loadedPlatform[a](t,this),this._platform.init(),this.resolveListenersIfCan()}async setData(t){if(this._datas.terminate(),this._datas=null,this._dataset=t,!loadedData[this._dataset]){const a=await import(`./data/${t}.js`);loadedData[t]=a.default}this._datas=new loadedData[this._dataset](this),this._platform?.init(),this.resolveListenersIfCan()}async setModel(t){if(this._modelname=t,t){if(!loadedModel[t]){const a=await import(`./view/${t}.js`);loadedModel[t]=a.default}try{loadedModel[t](this.platform)}catch(t){return console.error(t),t}}}}