import{DefaultPlatform}from"./platform/base.js";import ManualData from"./data/manual.js";const loadedPlatform={"":DefaultPlatform},loadedData={manual:ManualData},loadedModel={};export default class AIManager{constructor(t){this._setting=t,this._platform=new DefaultPlatform(null,this),this._task="",this._datas=new ManualData(this),this._dataset="manual",this._modelname="",this._listener=[]}get platform(){return this._platform}get task(){return this._task}get setting(){return this._setting}get datas(){return this._datas}onReady(t){if(this._platform&&this._datas)return t();this._listener.push(t)}resolveListeners(){for(const t of this._listener)t();this._listener=[]}resolveListenersIfCan(){this._platform&&this._datas&&this.resolveListeners()}setTask(t,s){if(!this._platform)return void(s&&s());if(this._task===t)return this._platform.init(),void(s&&s());this._platform.terminate(),this._platform=null,this._task=t;let a="";"MD"===this._task||"GM"===this._task?a="rl":"TP"===this._task||"SM"===this._task||"CP"===this._task?a="series":"SG"===this._task||"DN"===this._task||"ED"===this._task?a="image":"WE"===this._task?a="document":"SC"===this._task&&(a="semisupervised");const e=a=>{"MD"!==t&&"GM"!==t?(this._platform=new a(t,this),this._platform.init(),this.resolveListenersIfCan(),s&&s()):new a(t,this,(t=>{this._platform=t,this._platform.init(),this._setting.ml.modelName||t.render(),this.resolveListenersIfCan(),s&&s()}))};loadedPlatform[a]?e(loadedPlatform[a]):import(`./platform/${a}.js`).then((t=>{loadedPlatform[a]=t.default,e(t.default)}))}setData(t,s){this._datas.terminate(),this._datas=null,this._dataset=t,loadedData[this._dataset]?(this._datas=new loadedData[this._dataset](this),this._platform&&this._platform.init(),this.resolveListenersIfCan(),s&&s()):import(`./data/${t}.js`).then((a=>{this._datas=new a.default(this),this._platform&&this._platform.init(),this.resolveListenersIfCan(),s&&s(),loadedData[t]=a.default}))}setModel(t,s){if(this._modelname=t,loadedModel[t])try{loadedModel[t](this.platform),s?.()}catch(t){console.error(t),s?.(t)}else import(`./view/${t}.js`).then((a=>{loadedModel[t]=a.default;try{a.default(this.platform),s?.()}catch(t){console.error(t),s?.(t)}}))}}