export function mse(r,t){const e=r.length;if(!Array.isArray(r[0])){let n=0;for(let o=0;o<e;o++)n+=(r[o]-t[o])**2;return n/e}const n=r[0].length,o=Array(n).fill(0);for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[e]+=(r[l][e]-t[l][e])**2;return o.map((r=>r/e))}export function rmse(r,t){const e=mse(r,t);return Array.isArray(e)?e.map(Math.sqrt):Math.sqrt(e)}export function mae(r,t){const e=r.length;if(!Array.isArray(r[0])){let n=0;for(let o=0;o<e;o++)n+=Math.abs(r[o]-t[o]);return n/e}const n=r[0].length,o=Array(n).fill(0);for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[e]+=Math.abs(r[l][e]-t[l][e]);return o.map((r=>r/e))}export function mad(r,t){const e=r.length;if(!Array.isArray(r[0])){const n=[];for(let o=0;o<e;o++)n[o]=Math.abs(r[o]-t[o]);return n.sort(((r,t)=>r-t)),n.length%2==1?n[(n.length-1)/2]:(n[n.length/2]+n[n.length/2-1])/2}const n=r[0].length,o=Array.from({length:n},(()=>[]));for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[e][l]=Math.abs(r[l][e]-t[l][e]);return o.map((r=>{for(let t=0;t<n;t++)r.sort(((r,t)=>r-t));return r.length%2==1?r[(r.length-1)/2]:(r[r.length/2]+r[r.length/2-1])/2}))}export function rmspe(r,t){const e=r.length;if(!Array.isArray(r[0])){let n=0;for(let o=0;o<e;o++)n+=((r[o]-t[o])/t[o])**2;return Math.sqrt(n/e)}const n=r[0].length,o=Array(n).fill(0);for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[e]+=((r[l][e]-t[l][e])/t[l][e])**2;return o.map((r=>Math.sqrt(r/e)))}export function mape(r,t){const e=r.length;if(!Array.isArray(r[0])){let n=0;for(let o=0;o<e;o++)n+=Math.abs((r[o]-t[o])/t[o]);return n/e}const n=r[0].length,o=Array(n).fill(0);for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[e]+=Math.abs((r[l][e]-t[l][e])/t[l][e]);return o.map((r=>r/e))}export function msle(r,t){const e=r.length;if(!Array.isArray(r[0])){let n=0;for(let o=0;o<e;o++)n+=(Math.log(1+r[o])-Math.log(1+t[o]))**2;return n/e}const n=r[0].length,o=Array(n).fill(0);for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[e]+=(Math.log(1+r[l][e])-Math.log(1+t[l][e]))**2;return o.map((r=>r/e))}export function rmsle(r,t){const e=msle(r,t);return Array.isArray(e)?e.map(Math.sqrt):Math.sqrt(e)}export function r2(r,t){const e=r.length;if(!Array.isArray(r[0])){const n=t.reduce(((r,t)=>r+t),0)/e,o=t.reduce(((r,t)=>r+(t-n)**2),0);return 1-t.reduce(((t,e,n)=>t+(e-r[n])**2),0)/o}const n=r[0].length,o=[];for(let l=0;l<n;l++){const n=t.reduce(((r,t)=>r+t[l]),0)/e,a=t.reduce(((r,t)=>r+(t[l]-n)**2),0),s=t.reduce(((t,e,n)=>t+(e[l]-r[n][l])**2),0);o[l]=1-s/a}return o}export function correlation(r,t){const e=r.length;if(!Array.isArray(r[0])){const n=r.reduce(((r,t)=>r+t),0)/e,o=t.reduce(((r,t)=>r+t),0)/e,l=r.reduce(((r,t)=>r+(t-n)**2),0)/e,a=t.reduce(((r,t)=>r+(t-o)**2),0)/e;return r.reduce(((r,e,l)=>r+(e-n)*(t[l]-o)),0)/e/Math.sqrt(l*a)}const n=r[0].length,o=[];for(let l=0;l<n;l++){const n=r.reduce(((r,t)=>r+t[l]),0)/e,a=t.reduce(((r,t)=>r+t[l]),0)/e,s=r.reduce(((r,t)=>r+(t[l]-n)**2),0)/e,c=t.reduce(((r,t)=>r+(t[l]-a)**2),0)/e,f=r.reduce(((r,e,o)=>r+(e[l]-n)*(t[o][l]-a)),0)/e;o[l]=f/Math.sqrt(s*c)}return o}