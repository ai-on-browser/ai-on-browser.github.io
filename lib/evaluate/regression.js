var y=Object.defineProperty;var m=(r,o)=>y(r,"name",{value:o,configurable:!0});export function mse(r,o){const e=r.length;if(!Array.isArray(r[0])){let t=0;for(let n=0;n<e;n++)t+=(r[n]-o[n])**2;return t/e}const c=r[0].length,s=Array(c).fill(0);for(let t=0;t<e;t++)for(let n=0;n<c;n++)s[n]+=(r[t][n]-o[t][n])**2;return s.map(t=>t/e)}m(mse,"mse");export function rmse(r,o){const e=mse(r,o);return Array.isArray(e)?e.map(Math.sqrt):Math.sqrt(e)}m(rmse,"rmse");export function mae(r,o){const e=r.length;if(!Array.isArray(r[0])){let t=0;for(let n=0;n<e;n++)t+=Math.abs(r[n]-o[n]);return t/e}const c=r[0].length,s=Array(c).fill(0);for(let t=0;t<e;t++)for(let n=0;n<c;n++)s[n]+=Math.abs(r[t][n]-o[t][n]);return s.map(t=>t/e)}m(mae,"mae");export function mad(r,o){const e=r.length;if(!Array.isArray(r[0])){const t=[];for(let n=0;n<e;n++)t[n]=Math.abs(r[n]-o[n]);return t.sort((n,f)=>n-f),t.length%2===1?t[(t.length-1)/2]:(t[t.length/2]+t[t.length/2-1])/2}const c=r[0].length,s=Array.from({length:c},()=>[]);for(let t=0;t<e;t++)for(let n=0;n<c;n++)s[n][t]=Math.abs(r[t][n]-o[t][n]);return s.map(t=>{for(let n=0;n<c;n++)t.sort((f,u)=>f-u);return t.length%2===1?t[(t.length-1)/2]:(t[t.length/2]+t[t.length/2-1])/2})}m(mad,"mad");export function rmspe(r,o){const e=r.length;if(!Array.isArray(r[0])){let t=0;for(let n=0;n<e;n++)t+=((r[n]-o[n])/o[n])**2;return Math.sqrt(t/e)}const c=r[0].length,s=Array(c).fill(0);for(let t=0;t<e;t++)for(let n=0;n<c;n++)s[n]+=((r[t][n]-o[t][n])/o[t][n])**2;return s.map(t=>Math.sqrt(t/e))}m(rmspe,"rmspe");export function mape(r,o){const e=r.length;if(!Array.isArray(r[0])){let t=0;for(let n=0;n<e;n++)t+=Math.abs((r[n]-o[n])/o[n]);return t/e}const c=r[0].length,s=Array(c).fill(0);for(let t=0;t<e;t++)for(let n=0;n<c;n++)s[n]+=Math.abs((r[t][n]-o[t][n])/o[t][n]);return s.map(t=>t/e)}m(mape,"mape");export function msle(r,o){const e=r.length;if(!Array.isArray(r[0])){let t=0;for(let n=0;n<e;n++)t+=(Math.log(1+r[n])-Math.log(1+o[n]))**2;return t/e}const c=r[0].length,s=Array(c).fill(0);for(let t=0;t<e;t++)for(let n=0;n<c;n++)s[n]+=(Math.log(1+r[t][n])-Math.log(1+o[t][n]))**2;return s.map(t=>t/e)}m(msle,"msle");export function rmsle(r,o){const e=msle(r,o);return Array.isArray(e)?e.map(Math.sqrt):Math.sqrt(e)}m(rmsle,"rmsle");export function r2(r,o){const e=r.length;if(!Array.isArray(r[0])){const t=o.reduce((u,i)=>u+i,0)/e,n=o.reduce((u,i)=>u+(i-t)**2,0);return 1-o.reduce((u,i,a)=>u+(i-r[a])**2,0)/n}const c=r[0].length,s=[];for(let t=0;t<c;t++){const n=o.reduce((i,a)=>i+a[t],0)/e,f=o.reduce((i,a)=>i+(a[t]-n)**2,0),u=o.reduce((i,a,l)=>i+(a[t]-r[l][t])**2,0);s[t]=1-u/f}return s}m(r2,"r2");export function correlation(r,o){const e=r.length;if(!Array.isArray(r[0])){const t=r.reduce((a,l)=>a+l,0)/e,n=o.reduce((a,l)=>a+l,0)/e,f=r.reduce((a,l)=>a+(l-t)**2,0)/e,u=o.reduce((a,l)=>a+(l-n)**2,0)/e;return r.reduce((a,l,h)=>a+(l-t)*(o[h]-n),0)/e/Math.sqrt(f*u)}const c=r[0].length,s=[];for(let t=0;t<c;t++){const n=r.reduce((l,h)=>l+h[t],0)/e,f=o.reduce((l,h)=>l+h[t],0)/e,u=r.reduce((l,h)=>l+(h[t]-n)**2,0)/e,i=o.reduce((l,h)=>l+(h[t]-f)**2,0)/e,a=r.reduce((l,h,g)=>l+(h[t]-n)*(o[g][t]-f),0)/e;s[t]=a/Math.sqrt(u*i)}return s}m(correlation,"correlation");
