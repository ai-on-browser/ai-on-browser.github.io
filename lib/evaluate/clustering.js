export function davisBouldinIndex(t,e,r=2,o=1){const l=e.length,n=t[0].length,f=[...new Set(e)],c=f.length,i=Array(c).fill(0),s=[],a=[];for(let r=0;r<c;r++){s[r]=Array(n).fill(0);for(let o=0;o<l;o++)if(e[o]===f[r]){a[o]=r,i[r]++;for(let e=0;e<n;e++)s[r][e]+=t[o][e]}s[r]=s[r].map((t=>t/i[r]))}const u=Array(c).fill(0);for(let e=0;e<l;e++){const l=s[a[e]],n=t[e].reduce(((t,e,o)=>t+Math.abs(e-l[o])**r),0);u[a[e]]+=n**(o/r)}for(let t=0;t<u.length;t++)u[t]=(u[t]/i[t])**(1/o);const h=Array.from({length:c},(()=>[]));let d=0;for(let t=0;t<c;t++){let e=-1/0;for(let r=0;r<t;r++)h[t][r]>e&&(e=h[t][r]);for(let o=t+1;o<c;o++){const l=s[t].reduce(((t,e,l)=>t+Math.abs(e-s[o][l])**r),0);h[t][o]=h[o][t]=(u[t]+u[o])/l**(1/r),h[t][o]>e&&(e=h[t][o])}d+=e}return d/c}export function silhouetteCoefficient(t,e){const r=e.length,o=[...new Set(e)],l=(t,e)=>Math.sqrt(t.reduce(((t,r,o)=>t+(r-e[o])**2),0)),n=[];for(let e=0;e<r;e++){n[e]=[];for(let r=0;r<e;r++)n[e][r]=n[r][e]=l(t[e],t[r])}const f=[];for(let t=0;t<r;t++){let l=0,c=0;for(let o=0;o<r;o++)o!==t&&e[o]===e[t]&&(l+=n[t][o],c++);l/=c;let i=1/0;for(let l=0;l<o.length;l++){if(e[t]===o[l])continue;let f=0,c=0;for(let i=0;i<r;i++)e[i]===o[l]&&(f+=n[t][i],c++);f/=c,f<i&&(i=f)}f[t]=(i-l)/Math.max(l,i)}return f}export function dunnIndex(t,e,r="max",o="centroid"){const l=e.length,n=t[0].length,f=[...new Set(e)],c=f.length,i=(t,e)=>Math.sqrt(t.reduce(((t,r,o)=>t+(r-e[o])**2),0)),s=Array(c).fill(0),a=[];for(let t=0;t<l;t++){const r=f.indexOf(e[t]);a[t]=r,s[r]++}const u=[];if("centroid"===r||"centroid"===o)for(let r=0;r<c;r++){u[r]=Array(n).fill(0);for(let o=0;o<l;o++)if(e[o]===f[r])for(let e=0;e<n;e++)u[r][e]+=t[o][e];u[r]=u[r].map((t=>t/s[r]))}const h=[];for(let o=0;o<c;o++)if("max"===r){let r=0;for(let n=0;n<l;n++)if(e[n]===f[o])for(let l=0;l<n;l++){if(e[l]!==f[o])continue;const c=i(t[n],t[l]);r<c&&(r=c)}h[o]=r}else if("mean"===r){let r=0;for(let n=0;n<l;n++)if(e[n]===f[o])for(let c=0;c<l;c++)n!==c&&e[c]===f[o]&&(r+=i(t[n],t[c]));h[o]=2*r/(s[o]*(s[o]-1))}else if("centroid"===r){let r=0;for(let n=0;n<l;n++)e[n]===f[o]&&(r+=i(t[n],u[o]));h[o]=r/s[o]}const d=Array.from({length:c},(()=>[]));if("centroid"===o)for(let t=0;t<c;t++)for(let e=0;e<t;e++)d[t][e]=i(u[t],u[e]);const x=Math.max(...h);let g=1/0;for(let t=0;t<c;t++)for(let e=0;e<t;e++)g>d[t][e]&&(g=d[t][e]);return g/x}export function purity(t,e){const r=t.length,o=[...new Set(t)];let l=0;for(let n=0;n<o.length;n++){const f={};let c=0;for(let l=0;l<r;l++)t[l]===o[n]&&(f[e[l]]||(f[e[l]]=0),f[e[l]]++,c<f[e[l]]&&(c=f[e[l]]));l+=c}return l/r}export function randIndex(t,e){const r=t.length;let o=0;for(let l=0;l<r;l++)for(let n=l+1;n<r;n++)(t[l]===t[n]&&e[l]===e[n]||t[l]!==t[n]&&e[l]!==e[n])&&o++;return o/(r*(r-1)/2)}export function diceIndex(t,e,r=1){const o=t.length;let l=0,n=0,f=0;for(let r=0;r<o;r++)for(let c=r+1;c<o;c++)t[r]===t[c]&&e[r]===e[c]?l++:t[r]===t[c]&&e[r]!==e[c]?n++:t[r]!==t[c]&&e[r]===e[c]&&f++;return(1+r**2)*l/((1+r**2)*l+r**2*f+n)}export function jaccardIndex(t,e){const r=t.length;let o=0,l=0,n=0;for(let f=0;f<r;f++)for(let c=f+1;c<r;c++)t[f]===t[c]&&e[f]===e[c]?o++:t[f]===t[c]&&e[f]!==e[c]?l++:t[f]!==t[c]&&e[f]===e[c]&&n++;return o/(o+l+n)}export function fowlkesMallowsIndex(t,e){const r=t.length;let o=0,l=0,n=0;for(let f=0;f<r;f++)for(let c=f+1;c<r;c++)t[f]===t[c]&&e[f]===e[c]?o++:t[f]===t[c]&&e[f]!==e[c]?l++:t[f]!==t[c]&&e[f]===e[c]&&n++;return o/Math.sqrt((o+l)*(o+n))}