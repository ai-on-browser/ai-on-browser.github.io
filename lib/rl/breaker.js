var w=Object.defineProperty;var g=(v,i)=>w(v,"name",{value:i,configurable:!0});import{RLEnvironmentBase as x,RLRealRange as p}from"./base.js";export default class M extends x{static{g(this,"BreakerRLEnvironment")}constructor(){super(),this._size=[300,500],this._padding=[[30,30],[370,30]],this._block_size=[30,10],this._paddle_baseline=20,this._paddle_size=[60,8],this._ball_radius=3,this._ball_speed=3,this._paddle_speed=5,this._block_positions=[];for(let i=this._padding[0][0];i<this._size[0]-this._padding[0][1];i+=this._block_size[0])for(let s=this._padding[1][0];s<this._size[1]-this._padding[1][1];s+=this._block_size[1])this._block_positions.push([i+this._block_size[0]/2,s+this._block_size[1]/2]);this._ball_position=[0,0],this._paddle_position=0,this._ball_velocity=[0,0],this._block_existances=[],this._reward={break:100,step:.1,hit:100,goal:1e3,fail:-1e3}}get actions(){return[[-1,0,1]]}get states(){const i=[];for(let s=0;s<this._block_positions.length;s++)i[s]=[0,1];return[new p(0,this._size[0]),new p(0,this._size[1]),new p(-this._ball_speed,this._ball_speed),new p(-this._ball_speed,this._ball_speed),new p(0,this._size[0]),...i]}reset(){super.reset(),this._paddle_position=this._size[0]/2,this._ball_position=[this._size[0]/2,this._paddle_baseline+this._paddle_size[1]/2+this._ball_radius*2];const i=Math.random()*(this._ball_speed-.1)*2-(this._ball_speed-.1),s=Math.sqrt(Math.abs(i**2-this._ball_speed**2));this._ball_velocity=[i,s],this._block_existances=[];for(let t=0;t<this._block_positions.length;t++)this._block_existances[t]=1;return this.state()}state(){return[...this._ball_position,...this._ball_velocity,this._paddle_position,...this._block_existances]}setState(i){this._ball_position[0]=i[0],this._ball_position[1]=i[1],this._ball_velocity[0]=i[2],this._ball_velocity[1]=i[3],this._paddle_position=i[4],this._block_existances=i.slice(5)}test(i,s){let t=i[4]+this._paddle_speed*s[0];t<this._paddle_size[0]/2?t=this._paddle_size[0]/2:t>this._size[0]-this._paddle_size[0]/2&&(t=this._size[0]-this._paddle_size[0]/2);const _=[i[0],i[1]],n=[i[2],i[3]];for(let e=0;e<2;e++)_[e]+=n[e];const h=i.slice(5);let a=1/0,d=n,o=!1;{const[e,l,r]=this._check_contact(_,[t,this._paddle_baseline],this._paddle_size);e<a&&(a=e,r?d=[Math.sin(r*Math.PI/2)*this._ball_speed,Math.cos(r*Math.PI/2)*this._ball_speed]:d=[n[0]*l[0],n[1]*l[1]],o=!0)}for(const e of[-10,this._size[0]+10]){const[l]=this._check_contact(_,[e,this._size[1]/2],[20,this._size[1]]);l<a&&(a=l,d=[-Math.sign(e)*Math.abs(n[0]),n[1]],o=!1)}{const[e]=this._check_contact(_,[this._size[0]/2,this._size[1]+10],[this._size[0],20]);e<a&&(a=e,d=[n[0],-Math.abs(n[1])],o=!1)}const[y]=this._check_contact(_,[this._size[0]/2,-10],[this._size[0],20]);let u=-1;for(let e=0;e<h.length;e++){if(h[e]===0)continue;const[l,r]=this._check_contact(_,this._block_positions[e],this._block_size);l<a&&(a=l,d=[n[0]*r[0],n[1]*r[1]],u=e,o=!1)}let f=this._reward.step;u>=0&&(h[u]=0,f=this._reward.break),y<1/0?f=this._reward.fail:o&&(f=this._reward.hit);const z=h.every(e=>e===0)||y<1/0;return{state:[..._,...d,t,...h],reward:f,done:z}}_check_contact(i,s,t){for(let h=0;h<2;h++)if(i[h]+this._ball_radius<s[h]-t[h]/2||s[h]+t[h]/2<i[h]-this._ball_radius)return[1/0,[]];let _=1/0;for(const[h,a]of[[-1,-1],[-1,1],[1,-1],[1,1]]){if(h*i[0]<=h*s[0]+t[0]/2||a*i[1]<=a*s[1]+t[1]/2)continue;const d=Math.sqrt((i[0]-(s[0]+h*t[0]/2))**2+(i[1]-(s[1]+a*t[1]/2))**2);if(d>this._ball_radius)return[1/0,[]];_=d}_===1/0&&(i[0]+this._ball_radius<s[0]-t[0]/2?_=s[0]-t[0]/2-i[0]:i[1]+this._ball_radius<s[1]-t[1]/2?_=s[1]-t[1]/2-i[1]:i[0]-this._ball_radius>s[0]+t[0]/2?_=i[0]-(s[0]+t[0]/2):i[1]-this._ball_radius>s[1]+t[1]/2?_=i[1]-(s[1]+t[1]/2):_=0);let n=null;return i[1]>=s[1]?n=i[1]-(s[1]+t[1]/2):n=s[1]-t[1]/2-i[1],s[0]-t[0]/2-n<i[0]&&i[0]<s[0]+t[0]/2+n?[_,[1,-1],(i[0]-s[0])/(t[0]/2+n+1)]:[_,[-1,1]]}}
