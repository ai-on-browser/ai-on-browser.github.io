var p=Object.defineProperty;var u=(d,t)=>p(d,"name",{value:t,configurable:!0});import{RLEnvironmentBase as A}from"./base.js";const c=1,n=2,a=3,b=u(d=>d===n?a:d===a?n:c,"flipPiece");export default class l extends A{static{u(this,"ReversiRLEnvironment")}constructor(){super(),this._size=[8,8],this._board=new z(this._size),this._turn=n,this._reward={win:1,lose:-1,step:0}}static BLACK=n;static WHITE=a;static EMPTY=c;static OWN=2;static OTHER=3;get actions(){const t=[c];for(let s=0;s<this._size[0];s++)for(let e=0;e<this._size[1];e++)t.push(`${String.fromCharCode(97+s)}${s+1}`);return[t]}get states(){const t=[[n,a]];for(let s=0;s<this._size[0]*this._size[1];s++)t.push([c,l.OWN,l.OTHER]);return t}_makeState(t,s,e){const i=[e];for(let r=0;r<this._size[0];r++)for(let o=0;o<this._size[1];o++){const h=t.at([r,o]);i.push(h===c?h:h===s?l.OWN:l.OTHER)}return i}_state2board(t,s){const e=new z(this._size),i=b(s);for(let r=0,o=1;r<this._size[0];r++)for(let h=0;h<this._size[1];h++,o++)t[o]===c?e._board[r][h]=c:t[o]===l.OWN?e._board[r][h]=s:e._board[r][h]=i;return e}_checkAgent(t){if(!this._agents)throw new Error("Agent does not exist. Call reset to set agents.");if(t!==n&&t!==a)throw new Error("Unknown agent.")}reset(){return super.reset(),this._agents=[n,a],this._board.reset(),this._turn=n,this.state(n)}state(t){return t||(t=this._turn),this._checkAgent(t),this._makeState(this._board,t,this._turn)}setState(t,s){this._turn=t[0],this._board=this._state2board(t,s)}step(t,s){return s||(s=this._turn),super.step(t,s)}test(t,s,e){e||(e=this._turn),this._checkAgent(e);const i=t[0],r=u(f=>f?o.winner===e?this._reward.win:this._reward.lose:this._reward.step,"getreward"),o=this._state2board(t,e);if(e!==i){const f=o.finish;return{state:t,reward:r(f),done:f,invalid:!0}}if(s[0]===c){const f=o.choices(e),w=o.finish,k=f.length>0;return{state:k?t:this._makeState(o,e,b(i)),reward:r(w),done:w,invalid:k}}const h=o.set(s[0],e),_=o.finish;return h?{state:this._makeState(o,e,b(i)),reward:r(_),done:_}:{state:t,reward:r(_),done:_,invalid:!0}}}class z{static{u(this,"ReversiBoard")}constructor(t){this._size=t,this.reset()}get size(){return this._size}get count(){let t=0,s=0;for(let e=0;e<this._size[0];e++)for(let i=0;i<this._size[1];i++)this._board[e][i]===a?s++:this._board[e][i]===n&&t++;return{black:t,white:s}}get finish(){return this.choices(n).length+this.choices(a).length===0}get winner(){if(!this.finish)return null;const t=this.count;return t.black>t.white?n:t.black<t.white?a:null}toString(){let t="";for(let s=0;s<this._size[0];s++){for(let e=0;e<this._size[1];e++)e>0&&(t+=" "),this._board[s][e]===n?t+="x":this._board[s][e]===a?t+="o":t+="-";t+=`
`}return t}nextTurn(t){return b(t)}copy(){const t=new z(this._size);for(let s=0;s<this._size[0];s++)for(let e=0;e<this._size[1];e++)t._board[s][e]=this._board[s][e];return t}score(t){const s=this.count;return t===n?s.black-s.white:s.white-s.black}at(t){return typeof t=="string"&&(t=[t[1]-1,t.charCodeAt(0)-97]),this._board[t[0]][t[1]]}set(t,s){typeof t=="string"&&(t=[t[1]-1,t.charCodeAt(0)-97]);const e=this.flipPositions(t[0],t[1],s);if(e.length===0)return!1;this._board[t[0]][t[1]]=s;for(const[i,r]of e)this._board[i][r]=s;return!0}reset(){this._board=[];for(let e=0;e<this._size[0];e++)this._board[e]=Array(this._size[1]).fill(c);const t=Math.floor(this._size[0]/2),s=Math.floor(this._size[1]/2);this._board[t-1][s-1]=a,this._board[t-1][s]=n,this._board[t][s-1]=n,this._board[t][s]=a}choices(t){const s=[];for(let e=0;e<this._size[0];e++)for(let i=0;i<this._size[1];i++)this.flipPositions(e,i,t).length>0&&s.push([e,i]);return s}flipPositions(t,s,e){if(t<0||s<0||this._size[0]<=t||this._size[1]<=s)return[];if(e===c||this._board[t][s]!==c)return[];const i=[];for(const[r,o]of[[1,1],[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1],[0,1]]){let h=t,_=s;const f=[];for(;h+=r,_+=o,!(h<0||_<0||this._size[0]<=h||this._size[1]<=_);){if(this._board[h][_]===e){i.push(...f);break}else if(this._board[h][_]===c)break;f.push([h,_])}}return i}}
