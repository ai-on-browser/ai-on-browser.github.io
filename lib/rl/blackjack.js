var c=Object.defineProperty;var h=(e,s)=>c(e,"name",{value:s,configurable:!0});import{RLIntRange as i,RLEnvironmentBase as l}from"./base.js";const n=0,d=1,o=2,u=3;class p{static{h(this,"Deck")}constructor(){this.cards=[];for(const s of[n,o,d,u])for(let t=1;t<=13;t++)this.cards.push({suit:s,value:t});this.shuffle()}init(){this.cards=[];for(const s of[n,o,d,u])for(let t=1;t<=13;t++)this.cards.push({suit:s,value:t});this.shuffle()}shuffle(){for(let s=this.cards.length-1;s>0;s--){const t=Math.floor(Math.random()*(s+1));[this.cards[s],this.cards[t]]=[this.cards[t],this.cards[s]]}}pop(){return this.cards.pop()}}export default class f extends l{static{h(this,"BlackjackRLEnvironment")}constructor(){super(),this._deck=new p,this._dealer_hands=[],this._player_hands=[],this._done=!1,this._reward={bust:-1,win:1,step:0},this.reset()}get actions(){return[[0,1]]}get states(){return[new i(2,31),new i(1,10),[0,1]]}_sumhands(s){let t=s.reduce((a,_)=>a+Math.min(10,_.value),0),r=t<=11&&s.some(a=>a.value===1);return r&&(t+=10),[t,r]}reset(){return super.reset(),this._deck.init(),this._dealer_hands=[this._deck.pop(),this._deck.pop()],this._player_hands=[this._deck.pop(),this._deck.pop()],this._done=!1,this.state()}state(){const[s,t]=this._sumhands(this._player_hands);return[s,Math.min(10,this._dealer_hands[0].value),t?1:0]}step(s){if(s[0]===1)return this._player_hands.push(this._deck.pop()),this._sumhands(this._player_hands)[0]>21?(this._done=!0,{state:this.state(),reward:this._reward.bust,done:!0}):{state:this.state(),reward:this._reward.step,done:!1};for(this._done=!0;this._sumhands(this._dealer_hands)[0]<17;)this._dealer_hands.push(this._deck.pop());const t=this._sumhands(this._player_hands)[0]-this._sumhands(this._dealer_hands)[0];return{state:this.state(),reward:t,done:!0}}}
