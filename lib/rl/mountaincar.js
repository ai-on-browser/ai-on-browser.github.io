import{RLRealRange,RLEnvironmentBase}from"./base.js";export default class MountainCarRLEnvironment extends RLEnvironmentBase{constructor(){super(),this._position=0,this._velocity=0,this._max_position=.6,this._min_position=-1.2,this._max_velocity=.07,this._goal_position=.5,this._goal_velocity=0,this._force=.001,this._g=.0025,this._max_step=200,this._reward={step:-1,goal:-1,fail:-1}}get actions(){return[[0,1,2]]}get states(){return[new RLRealRange(-1.2,.6),new RLRealRange(-.07,.07)]}set reward(t){if(this._reward={step:-1,goal:-1,fail:-1},"achieve"===t){const t=this;this._reward={step:0,get goal(){return-Math.abs(t._position-t._goal_position)+Math.abs(t._velocity-t._goal_velocity)},get fail(){return-Math.abs(t._position-t._goal_position)+Math.abs(t._velocity-t._goal_velocity)}}}}reset(){return super.reset(),this._position=.2*Math.random()-.6,this._velocity=0,this.state()}state(){return[this._position,this._velocity]}setState(t){this._position=t[0],this._velocity=t[1]}test(t,i){let[s,e]=t;e+=(i[0]-1)*this._force+Math.cos(3*s)*-this._g,e=Math.abs(e)>this._max_velocity?Math.sign(e)*this._max_velocity:e,s+=e,s=s>this._max_position?this._max_position:s<this._min_position?this._min_position:s,s===this._min_position&&e<0&&(e=0);const o=this.epoch>=this._max_step,a=s>=this._goal_position&&e>=this._goal_velocity||o;return{state:[s,e],reward:o?this._reward.fail:a?this._reward.goal:this._reward.step,done:a}}}