import{RLRealRange,RLEnvironmentBase}from"./base.js";export default class AcrobotRLEnvironment extends RLEnvironmentBase{constructor(){super(),this._theta1=0,this._theta2=0,this._dtheta1=0,this._dtheta2=0,this._link_len1=1,this._link_len2=1,this._link_mass1=1,this._link_mass2=1,this._link_com_pos1=.5,this._link_com_pos2=.5,this._moi=1,this._max_vel1=4*Math.PI,this._max_vel2=9*Math.PI,this._g=9.8,this._dt=.1,this._max_step=200,this._reward={goal:0,step:-1,fail:0}}get actions(){return[[-1,0,1]]}get states(){return[new RLRealRange(-Math.PI,Math.PI),new RLRealRange(-Math.PI,Math.PI),new RLRealRange(-this._max_vel1,this._max_vel1),new RLRealRange(-this._max_vel2,this._max_vel2)]}reset(){return super.reset(),this._theta1=.2*Math.random()-.1,this._theta2=.2*Math.random()-.1,this._dtheta1=.2*Math.random()-.1,this._dtheta2=.2*Math.random()-.1,this.state()}state(){return[this._theta1,this._theta2,this._dtheta1,this._dtheta2]}setState(t){this._theta1=t[0],this._theta2=t[1],this._dtheta1=t[2],this._dtheta2=t[3]}test(t,s){let[h,a,e,_]=t;const i=s[0],n=this._link_mass1,o=this._link_mass2,r=this._link_len1,l=this._link_com_pos1,m=this._link_com_pos2,M=this._moi,d=this._moi,c=this._g,R=n*l**2+o*(r**2+m**2+2*r*m*Math.cos(a))+M+d,I=o*(m**2+r*m*Math.cos(a))+d,P=o*m*c*Math.cos(h+a-Math.PI/2),x=(i+I/R*(-o*r*m*_**2*Math.sin(a)-2*o*r*m*_*e*Math.sin(a)+(n*l+o*r)*c*Math.cos(h-Math.PI/2)+P)-o*r*m*e**2*Math.sin(a)-P)/(o*m**2+d-I**2/R),p=-(I*x+P)/R,v=(t,s,h)=>t<s?s:t>h?h:t;for(h+=this._dt*e;h<-Math.PI;)h+=2*Math.PI;for(;h>Math.PI;)h-=2*Math.PI;for(a+=this._dt*_;a<-Math.PI;)a+=2*Math.PI;for(;a>Math.PI;)a-=2*Math.PI;e=v(e+this._dt*p,-this._max_vel1,this._max_vel1),_=v(_+this._dt*x,-this._max_vel2,this._max_vel2);const g=this.epoch>=this._max_step,k=-Math.cos(h)-Math.cos(a+h)>1||g;return{state:[h,a,e,_],reward:g?this._reward.fail:k?this._reward.goal:this._reward.step,done:k}}}