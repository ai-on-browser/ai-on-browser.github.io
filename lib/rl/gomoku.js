var A=Object.defineProperty;var b=(O,t)=>A(O,"name",{value:t,configurable:!0});import{RLEnvironmentBase as k}from"./base.js";const l=1,u=2,d=3;export default class z extends k{static{b(this,"GomokuRLEnvironment")}constructor(){super(),this._size=[8,8],this._board=new T(this._size),this._reward={win:1,lose:-1,step:0}}static BLACK=u;static WHITE=d;static EMPTY=l;static OWN=2;static OTHER=3;get actions(){const t=[];for(let s=0;s<this._size[0];s++)for(let i=0;i<this._size[1];i++)t.push(`${s}_${i}`);return[t]}get states(){const t=[[u,d]];for(let s=0;s<this._size[0]*this._size[1];s++)t.push([l,z.OWN,z.OTHER]);return t}_makeState(t,s,i){const f=[i];for(let r=0;r<this._size[0];r++)for(let h=0;h<this._size[1];h++){const e=t.at([r,h]);f.push(e===l?e:e===s?z.OWN:z.OTHER)}return f}_state2board(t,s){const i=new T(this._size),f=i.nextTurn(s);for(let r=0,h=1;r<this._size[0];r++)for(let e=0;e<this._size[1];e++,h++)t[h]===z.OWN?i.set([r,e],s):t[h]===z.OTHER&&i.set([r,e],f);return i}_checkAgent(t){if(!this._agents)throw new Error("Agent does not exist. Call reset to set agents.");if(t!==u&&t!==d)throw new Error("Unknown agent.")}reset(){return super.reset(),this._agents=[u,d],this._board.reset(),this._turn=u,this.state(u)}state(t){return t||(t=this._turn),this._checkAgent(t),this._makeState(this._board,t,this._turn)}setState(t,s){this._turn=t[0],this._board=this._state2board(t,s)}step(t,s){return s||(s=this._turn),super.step(t,s)}test(t,s,i){i||(i=this._turn),this._checkAgent(i);const f=t[0],r=b(o=>o?h.winner===i?this._reward.win:this._reward.lose:this._reward.step,"getreward"),h=this._state2board(t,i);if(i!==f){const o=h.finish;return{state:t,reward:r(o),done:o,invalid:!0}}const e=s[0].split("_").map(o=>+o),n=h.set(e,i),_=h.finish;return n?{state:this._makeState(h,i,h.nextTurn(f)),reward:r(_),done:_}:{state:t,reward:r(_),done:_,invalid:!0}}}class T{static{b(this,"GomokuBoard")}constructor(t){this._size=t,this._a=5,this._count=0,this.reset()}get size(){return this._size}get finish(){return this.winner!==null||this._count===this._size[0]*this._size[1]}get winner(){return this.row(d,this._a).length>0?d:this.row(u,this._a).length>0?u:null}toString(){let t="";for(let s=0;s<this._size[0];s++){for(let i=0;i<this._size[1];i++)i>0&&(t+=" "),this._board[s][i]===u?t+="x":this._board[s][i]===d?t+="o":t+="-";t+=`
`}return t}nextTurn(t){return t===u?d:u}copy(){const t=new T(this._size);for(let s=0;s<this._size[0];s++)for(let i=0;i<this._size[1];i++)t._board[s][i]=this._board[s][i];return t._count=this._count,t}score(t){const s=this.winner,i=this.nextTurn(t);return s===t?this._size[0]*this._size[1]*100-this._count:s===i?-this._size[0]*this._size[1]*100+this._count:0}at(t){return this._board[t[0]][t[1]]}set(t,s){return this.at(t)!==l?!1:(this._board[t[0]][t[1]]=s,this._count++,!0)}reset(){this._count=0,this._board=[];for(let t=0;t<this._size[0];t++)this._board[t]=Array(this._size[1]).fill(l)}choices(){const t=[];if(this.finish)return t;for(let s=0;s<this._size[0];s++)for(let i=0;i<this._size[1];i++)this._board[s][i]===l&&t.push([s,i]);return t}row(t,s,i=!1){const f=[],r=b((e,n)=>0<=e&&e<this._size[0]&&0<=n&&n<this._size[1],"checkInbound"),h=[[1,1],[1,0],[1,-1],[0,1]];for(let e=0;e<this._size[0];e++)for(let n=0;n<this._size[1];n++)if(this._board[e][n]===t)for(const[_,o]of h){if(r(e-_,n-o)&&this._board[e-_][n-o]===t)continue;if(!r(e+_*(s-1),n+o*(s-1)))continue;const x=[[e,n]];let c=e+_,a=n+o,j=!1;const p=[];for(let w=1;w<s&&r(c,a);w++,c+=_,a+=o){if(i&&!j&&this._board[c][a]===l){j=!0,w--,p.push([c,a]);continue}else if(this._board[c][a]!==t)break;if(x.push([c,a]),w===s-1){if(c+=_,a+=o,r(c,a)&&this._board[c][a]===t)break;j||(r(c,a)&&this._board[c][a]===l&&p.push([c,a]),r(e-_,n-o)&&this._board[e-_][n-o]===l&&p.push([e-_,n-o])),f.push({path:x,s:p})}}}return f}}
