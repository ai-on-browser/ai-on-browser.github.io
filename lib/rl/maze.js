import{RLRealRange,RLIntRange,RLEnvironmentBase}from"./base.js";export default class SmoothMazeRLEnvironment extends RLEnvironmentBase{constructor(t,i){super(),this._width=t,this._height=i,this._points=[],this._map_resolution=[100,50],this._goal_size=[50,50],this._position=Array(2).fill(0),this._orient=0,this._velocity=10,this._rotate=5,this._max_step=3e3,this.__map=[];for(let t=0;t<this._map_resolution[0];t++)this.__map[t]=Array(this._map_resolution[1]);this._reward={step:-1,wall:-2,goal:200,fail:-100}}get actions(){return[[0,1,2,3]]}get states(){return[new RLRealRange(0,this._width),new RLRealRange(0,this._height),new RLIntRange(0,359)]}get map(){for(let t=0;t<this._map_resolution[0];t++)this.__map[t].fill(0);return this._points.forEach((t=>{this.__map[t[0]][t[1]]=1-this.__map[t[0]][t[1]]})),this.__map[0][0]=0,this.__map[this._map_resolution[0]-1][this._map_resolution[1]-1]=0,this.__map}set reward(t){if(this._reward={step:-1,wall:-2,goal:200,fail:-100},"achieve"===t){const t=this;this._reward={get step(){return Math.sqrt(t._position[0]**2+t._position[1]**2)},wall:0,goal:0,fail:0}}}reset(){return super.reset(),this._position=Array(2).fill(0),this._position[0]=Math.random()*this._width/4,this._position[1]=Math.random()*this._height/4,this._orient=360*Math.random(),this.state()}state(){return[this._position[0],this._position[1],this._orient]}setState(t){this._position=[t[0],t[1]],this._orient=t[2]}test(t,i){let s=this._reward.step,[e,h,a]=t;const _=this.map,o=this._width/this._map_resolution[0],r=this._height/this._map_resolution[1],n=Math.cos(a/180*Math.PI)*this._velocity,l=Math.sin(a/180*Math.PI)*this._velocity;0===i[0]?(e+=n,h+=l):1===i[0]?(e-=n,h-=l):2===i[0]?a+=this._rotate:3===i[0]&&(a-=this._rotate),a=(a+360)%360,(e<0||h<0||e>=this._width||h>=this._height||0!==_[Math.floor(e/o)][Math.floor(h/r)])&&(s=this._reward.wall,[e,h,a]=t);const p=this._max_step&&this._max_step<=this.epoch,m=e>this._width-this._goal_size[0]&&h>this._height-this._goal_size[1]||p;return m&&(s=this._reward.goal),p&&(s=this._reward.fail),{state:[e,h,a],reward:s,done:m}}}