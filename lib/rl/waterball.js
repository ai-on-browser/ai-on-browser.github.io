import{RLRealRange,RLEnvironmentBase}from"./base.js";export default class WaterballRLEnvironment extends RLEnvironmentBase{constructor(t,s){super(),this._width=t,this._height=s,this._agent_p=[this._width/2,this._height/2],this._agent_v=[0,0],this._balls=[],this._ball_min_velocity=.1,this._ball_max_velocity=.5,this._ball_radius=10,this._sensor_length=80,this._sensor_count=20,this._agent_radius=10,this._agent_max_velocity=1,this._agent_velocity_step=.1,this._min_position=[0,0],this._max_position=[this._width,this._height],this._max_size=30,this._history_state_size=1,this._history_state=[];let _=2*Math.PI/this._sensor_count;this._sin=[],this._cos=[];for(let t=0;t<this._sensor_count;t++)this._sin[t]=this._sensor_length*Math.sin(_*t),this._cos[t]=this._sensor_length*Math.cos(_*t);for(let t=0;t<this._max_size;t++)this.addBall()}get actions(){return[[0,1,2,3]]}get states(){if(this.__states)return this.__states;const t=this.__states=[new RLRealRange(-this._agent_max_velocity,this._agent_max_velocity),new RLRealRange(-this._agent_max_velocity,this._agent_max_velocity)];for(let s=0;s<this._history_state_size;s++)for(let s=0;s<this._sensor_count;s++)t.push(new RLRealRange(0,this._sensor_length),["none","wall","apple","poison"],new RLRealRange(-this._ball_max_velocity,this._ball_max_velocity),new RLRealRange(-this._ball_max_velocity,this._ball_max_velocity));return t}get current_state(){const t=[];t.push(...this._agent_v);const s=this._agent_p,_=this._balls.filter((t=>Math.sqrt(t.c.reduce(((t,_,i)=>t+(_-s[i])**2),0))<=this._sensor_length+this._ball_radius));for(let i=0;i<this._sensor_count;i++){const e=[s[0]+this._cos[i],s[1]+this._sin[i]],h=[e[0]-s[0],e[1]-s[1]],a=Math.sqrt(h[0]**2+h[1]**2),n=[h[0]/a,h[1]/a];let o=1/0,l=null;for(let t=0;t<2;t++)if(e[t]<this._min_position[t]||this._max_position[t]<e[t]){const _=e[t]<this._min_position[t]?this._min_position[t]:this._max_position[t];o=Math.min(o,this._sensor_length*(s[t]-_)/(s[t]-e[t])),l={type:"wall",v:[0,0]}}for(let t=0;t<_.length;t++){const i=_[t],a=i.c,r=[a[0]-s[0],a[1]-s[1]],c=Math.sqrt(r[0]**2+r[1]**2),g=[a[0]-e[0],a[1]-e[1]],p=n[0]*r[1]-r[0]*n[1];if(Math.abs(p)>this._ball_radius)continue;if((h[0]*r[0]+h[1]*r[1])*(h[0]*g[0]+h[1]*g[1])>0){const t=Math.sqrt(g[0]**2+g[1]**2);if(c>this._ball_radius&&t>this._ball_radius)continue}let m;if(0===h[0])m=[h[0],r[1]];else if(0===h[1])m=[r[0],h[1]];else{const t=h[1]/h[0],s=h[1]-t*h[0],_=-1/t,i=r[1]-_*r[0];m=[(i-s)/(t-_),(i*t-s*_)/(t-_)]}const u=Math.sqrt(this._ball_radius**2-p**2),v=[m[0]-n[0]*u,m[1]-n[1]*u],y=Math.sqrt(v[0]**2+v[1]**2);y<o&&(o=y,l=i)}t.push(o<1/0?o:this._sensor_length,l?l.type:"none",l?l.v[0]:0,l?l.v[1]:0)}return t}addBall(){const t=t=>Math.random()*(this._max_position[t]-this._min_position[t])+this._min_position[t],s=()=>(Math.random()*(this._ball_max_velocity-this._ball_min_velocity)+this._ball_min_velocity)*(Math.random()<.5?-1:1),_={type:Math.random()<.5?"apple":"poison",c:[t(0),t(1)],v:[s(),s()],update:()=>{for(let t=0;t<2;t++)_.c[t]+=_.v[t],(_.c[t]<=this._min_position[t]||this._max_position[t]<=_.c[t])&&(_.v[t]*=-1)}};this._balls.push(_)}reset(){return super.reset(),this.state()}state(){if(this.__state)return this.__state;const t=this.current_state;for(this._history_state.push(this.current_state),this._history_state.length>this._history_state_size&&this._history_state.shift();this._history_state.length<this._history_state_size;)this._history_state.push(t);this.__state=this._history_state[0].concat();for(let t=1;t<this._history_state.length;t++)this.__state.push(...this._history_state[t].slice(2));return this.__state}step(t,s){super.step(t,s),this.__state=null,this._balls.forEach((t=>t.update())),0===t[0]?this._agent_v[0]+=this._agent_velocity_step:1===t[0]?this._agent_v[0]-=this._agent_velocity_step:2===t[0]?this._agent_v[1]+=this._agent_velocity_step:3===t[0]&&(this._agent_v[1]-=this._agent_velocity_step);for(let t=0;t<2;t++)this._agent_v[t]>this._agent_max_velocity&&(this._agent_v[t]=this._agent_max_velocity),this._agent_v[t]<-this._agent_max_velocity&&(this._agent_v[t]=-this._agent_max_velocity);this._agent_p[0]+=this._agent_v[0],this._agent_p[1]+=this._agent_v[1];let _=-.01;for(let t=this._balls.length-1;t>=0;t--){const s=this._balls[t],i=s.c,e=Math.sqrt(this._agent_p.reduce(((t,s,_)=>t+(s-i[_])**2),0));e<=this._agent_radius+this._ball_radius&&("apple"===s.type?_+=1:_-=1,this._balls.splice(t,1))}for(let t=0;t<2;t++)this._agent_p[t]<this._min_position[t]?(this._agent_p[t]=this._min_position[t],_-=1):this._agent_p[t]>this._max_position[t]&&(this._agent_p[t]=this._max_position[t],_-=1);return this._balls.length<this._max_size&&Math.random()<.01&&this.addBall(),{state:this.state(),reward:_,done:!1}}}