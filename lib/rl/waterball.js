var L=Object.defineProperty;var f=(b,_)=>L(b,"name",{value:_,configurable:!0});import{RLRealRange as m,RLEnvironmentBase as k}from"./base.js";export default class P extends k{static{f(this,"WaterballRLEnvironment")}constructor(_,i){super(),this._width=_,this._height=i,this._agent_p=[this._width/2,this._height/2],this._agent_v=[0,0],this._balls=[],this._ball_min_velocity=.1,this._ball_max_velocity=.5,this._ball_radius=10,this._sensor_length=80,this._sensor_count=20,this._agent_radius=10,this._agent_max_velocity=1,this._agent_velocity_step=.1,this._min_position=[0,0],this._max_position=[this._width,this._height],this._max_size=30,this._history_state_size=1,this._history_state=[];let t=2*Math.PI/this._sensor_count;this._sin=[],this._cos=[];for(let e=0;e<this._sensor_count;e++)this._sin[e]=this._sensor_length*Math.sin(t*e),this._cos[e]=this._sensor_length*Math.cos(t*e);for(let e=0;e<this._max_size;e++)this.addBall()}get actions(){return[[0,1,2,3]]}get states(){if(this.__states)return this.__states;const _=this.__states=[new m(-this._agent_max_velocity,this._agent_max_velocity),new m(-this._agent_max_velocity,this._agent_max_velocity)];for(let i=0;i<this._history_state_size;i++)for(let t=0;t<this._sensor_count;t++)_.push(new m(0,this._sensor_length),["none","wall","apple","poison"],new m(-this._ball_max_velocity,this._ball_max_velocity),new m(-this._ball_max_velocity,this._ball_max_velocity));return _}get current_state(){const _=[];_.push(...this._agent_v);const i=this._agent_p,t=this._balls.filter(e=>Math.sqrt(e.c.reduce((s,p,o)=>s+(p-i[o])**2,0))<=this._sensor_length+this._ball_radius);for(let e=0;e<this._sensor_count;e++){const h=[i[0]+this._cos[e],i[1]+this._sin[e]],s=[h[0]-i[0],h[1]-i[1]],p=Math.sqrt(s[0]**2+s[1]**2),o=[s[0]/p,s[1]/p];let l=1/0,r=null;for(let n=0;n<2;n++)if(h[n]<this._min_position[n]||this._max_position[n]<h[n]){const u=h[n]<this._min_position[n]?this._min_position[n]:this._max_position[n];l=Math.min(l,this._sensor_length*(i[n]-u)/(i[n]-h[n])),r={type:"wall",v:[0,0]}}for(let n=0;n<t.length;n++){const u=t[n],v=u.c,a=[v[0]-i[0],v[1]-i[1]],R=Math.sqrt(a[0]**2+a[1]**2),d=[v[0]-h[0],v[1]-h[1]],x=o[0]*a[1]-a[0]*o[1];if(Math.abs(x)>this._ball_radius)continue;const E=s[0]*a[0]+s[1]*a[1],I=s[0]*d[0]+s[1]*d[1];if(E*I>0){const c=Math.sqrt(d[0]**2+d[1]**2);if(R>this._ball_radius&&c>this._ball_radius)continue}let g;if(s[0]===0)g=[s[0],a[1]];else if(s[1]===0)g=[a[0],s[1]];else{const c=s[1]/s[0],q=s[1]-c*s[0],y=-1/c,B=a[1]-y*a[0];g=[(B-q)/(c-y),(B*c-q*y)/(c-y)]}const M=Math.sqrt(this._ball_radius**2-x**2),w=[g[0]-o[0]*M,g[1]-o[1]*M],z=Math.sqrt(w[0]**2+w[1]**2);z<l&&(l=z,r=u)}_.push(l<1/0?l:this._sensor_length,r?r.type:"none",r?r.v[0]:0,r?r.v[1]:0)}return _}addBall(){const _=f(s=>Math.random()*(this._max_position[s]-this._min_position[s])+this._min_position[s],"random_position"),i=f(()=>(Math.random()*(this._ball_max_velocity-this._ball_min_velocity)+this._ball_min_velocity)*(Math.random()<.5?-1:1),"random_velocity"),t=Math.random()<.5?"apple":"poison",e=[_(0),_(1)],h={type:t,c:e,v:[i(),i()],update:()=>{for(let s=0;s<2;s++)h.c[s]+=h.v[s],(h.c[s]<=this._min_position[s]||this._max_position[s]<=h.c[s])&&(h.v[s]*=-1)}};this._balls.push(h)}reset(){super.reset(),this._balls=[];for(let _=0;_<this._max_size;_++)this.addBall();return this.state()}state(){if(this.__state)return this.__state;const _=this.current_state;for(this._history_state.push(this.current_state),this._history_state.length>this._history_state_size&&this._history_state.shift();this._history_state.length<this._history_state_size;)this._history_state.push(_);this.__state=this._history_state[0].concat();for(let i=1;i<this._history_state.length;i++)this.__state.push(...this._history_state[i].slice(2));return this.__state}step(_){this._epoch++,this.__state=null,this._balls.forEach(t=>t.update()),_[0]===0?this._agent_v[0]+=this._agent_velocity_step:_[0]===1?this._agent_v[0]-=this._agent_velocity_step:_[0]===2?this._agent_v[1]+=this._agent_velocity_step:_[0]===3&&(this._agent_v[1]-=this._agent_velocity_step);for(let t=0;t<2;t++)this._agent_v[t]>this._agent_max_velocity&&(this._agent_v[t]=this._agent_max_velocity),this._agent_v[t]<-this._agent_max_velocity&&(this._agent_v[t]=-this._agent_max_velocity);this._agent_p[0]+=this._agent_v[0],this._agent_p[1]+=this._agent_v[1];let i=-.01;for(let t=this._balls.length-1;t>=0;t--){const e=this._balls[t],h=e.c;Math.sqrt(this._agent_p.reduce((p,o,l)=>p+(o-h[l])**2,0))<=this._agent_radius+this._ball_radius&&(e.type==="apple"?i+=1:i-=1,this._balls.splice(t,1))}for(let t=0;t<2;t++)this._agent_p[t]<this._min_position[t]?(this._agent_p[t]=this._min_position[t],i-=1):this._agent_p[t]>this._max_position[t]&&(this._agent_p[t]=this._max_position[t],i-=1);return this._balls.length<this._max_size&&Math.random()<.01&&this.addBall(),{state:this.state(),reward:i,done:!1}}}
