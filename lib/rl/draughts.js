import{RLEnvironmentBase}from"./base.js";const EMPTY=1,RED=2,WHITE=4,KING=8,RED2=10,WHITE2=12;export default class DraughtsRLEnvironment extends RLEnvironmentBase{constructor(){super(),this._size=[8,8],this._board=new DraughtsBoard(this._size,this._evaluation),this._reward={win:1,lose:-1,step:0}}static EMPTY=1;static RED=2;static WHITE=4;static KING=8;static OWN=2;static OTHER=4;get actions(){const t=[1],s=[[1,1],[-1,1],[-1,-1],[1,-1]],e=(t,s)=>0<=t&&t<this._size[0]&&0<=s&&s<this._size[1];for(let r=0;r<this._size[0];r++)for(let i=r%2==1?0:1;i<this._size[1];i+=2){let h=[];for(const[o,n]of s){const s=r+o,a=i+n;e(s,a)&&t.push({from:[r,i],path:[[s,a]],jump:[]});const u=s+o,_=a+n;if(e(u,_)){const e={from:[r,i],path:[[u,_]],jump:[[s,a]]};t.push(e),h.push(e)}}for(;h.length>0;){const o=[];for(const n of h){const h=n.path[n.path.length-1];for(const[a,u]of s){const s=h[0]+a,_=h[1]+u,l=s+a,f=_+u;if(e(l,f)&&n.jump.every((([t,e])=>t!==s||e!==_))){const e={from:[r,i],path:[...n.path,[l,f]],jump:[...n.jump,[s,_]]};t.push(e),o.push(e)}}}h=o}}return[t]}get states(){const t=[[2,4]];for(let s=0;s<this._size[0];s++)for(let e=s%2==0?1:0;e<this._size[1];e+=2)t.push([1,DraughtsRLEnvironment.OWN,8|DraughtsRLEnvironment.OWN,DraughtsRLEnvironment.OTHER,8|DraughtsRLEnvironment.OTHER]);return t}set evaluation(t){this._board._evaluator=this._evaluation=t?(s,e)=>t(this._makeState(s,e,this._turn)):null}_makeState(t,s,e){const r=[e];for(let e=0;e<this._size[0];e++)for(let i=e%2==0?1:0;i<this._size[1];i+=2){const h=t.at([e,i]);if(1===h)r.push(1);else{const t=h&s?DraughtsRLEnvironment.OWN:DraughtsRLEnvironment.OTHER;8&h?r.push(8|t):r.push(t)}}return r}_state2board(t,s){const e=new DraughtsBoard(this._size,this._evaluation),r=2===s?4:2;for(let i=0,h=1;i<this._size[0];i++)for(let o=i%2==0?1:0;o<this._size[1];o+=2,h++)1===t[h]?e._board[i][o]=1:(e._board[i][o]=t[h]&DraughtsRLEnvironment.OWN?s:r,8&t[h]&&(e._board[i][o]|=8));return e}_checkAgent(t){if(!this._agents)throw new Error("Agent does not exist. Call reset to set agents.");if(2!==t&&4!==t)throw new Error("Unknown agent.")}reset(){return super.reset(),this._agents=[2,4],this._board.reset(),this._turn=2,this.state(2)}state(t){return t||(t=this._turn),this._checkAgent(t),this._makeState(this._board,t,this._turn)}setState(t,s){this._turn=t[0],this._board=this._state2board(t,s)}step(t,s){return s||(s=this._turn),super.step(t,s)}test(t,s,e){e||(e=this._turn),this._checkAgent(e);const r=t[0],i=t=>t?h.winner===e?this._reward.win:this._reward.lose:this._reward.step,h=this._state2board(t,e),o=h.finish;if(e!==r)return{state:t,reward:i(o),done:o,invalid:!0};const n=h.choices(e);if(1===s[0]){const s=n.length>0;return{state:s?t:this._makeState(h,e,2===r?4:2),reward:i(o),done:o,invalid:s}}if(n.some((t=>t.jump.length>0))&&0===s[0].jump.length)return{state:t,reward:i(o),done:o,invalid:!0};const a=h.set(s[0],e),u=h.finish;return a?{state:this._makeState(h,e,2===r?4:2),reward:i(u),done:u}:{state:t,reward:i(u),done:u,invalid:!0}}}class DraughtsBoard{constructor(t,s){this._evaluator=s,this._size=t,this._lines=3,this.reset()}get size(){return this._size}get count(){const t={};for(let s=0;s<this._size[0];s++)for(let e=0;e<this._size[1];e++)t[this._board[s][e]]||(t[this._board[s][e]]=0),t[this._board[s][e]]++;return{red:t[2]||0,white:t[4]||0,redking:t[10]||0,whiteking:t[12]||0}}get finish(){return 0===this.choices(2).length||0===this.choices(4).length}get winner(){return 0===this.choices(2).length?4:0===this.choices(4).length?2:null}toString(){let t="";for(let s=0;s<this._size[0];s++){for(let e=0;e<this._size[1];e++)e>0&&(t+=" "),2&this._board[s][e]?t+="x":4&this._board[s][e]?t+="o":t+="-";t+="\n"}return t}nextTurn(t){return 4===t?2:4}copy(){const t=new DraughtsBoard(this._size,this._evaluator);for(let s=0;s<this._size[0];s++)t._board[s]=this._board[s].concat();return t}score(t){if(this._evaluator)return this._evaluator(this,t);const s=this.count;return 2===t?s.red+2*s.redking-s.white-4*s.whiteking:s.white+2*s.whiteking-s.red-4*s.redking}_num_to_pos(t){if("number"!=typeof t)return t;const s=Math.floor((t-1)/this._size[1]),e=(t-1)%this._size[1];return e<(this._size[1]-1)/2?[2*s,2*e+1]:[2*s+1,2*(e-Math.floor(this._size[1]/2))]}at(t){return"number"==typeof t&&(t=this._num_to_pos(t)),this._board[t[0]][t[1]]}set(t,s){t={from:this._num_to_pos(t.from),path:t.path.map((t=>this._num_to_pos(t))),jump:t.jump.map((t=>this._num_to_pos(t)))};let e=this.at(t.from);if(!(s&e))return!1;if((0!==t.jump.length||1!==t.path.length)&&t.jump.length!==t.path.length)return!1;const r=this.nextTurn(s);if(t.jump.some((t=>!(this.at(t)&r))))return!1;if(t.path.some((t=>1!==this.at(t))))return!1;if(!(8&e)){const e=t.path[0][0]-t.from[0];if(2===s&&e<0||4===s&&e>0)return!1}if(0===t.jump.length){for(let s=0;s<2;s++)if(1!==Math.abs(t.from[s]-t.path[0][s]))return!1}else{let s=t.from;for(let e=0;e<t.path.length;e++){for(let r=0;r<2;r++){if(1!==Math.abs(s[r]-t.jump[e][r]))return!1;if(1!==Math.abs(t.jump[e][r]-t.path[e][r]))return!1}s=t.path[e]}}this._board[t.from[0]][t.from[1]]=1;for(const[s,e]of t.jump)this._board[s][e]=1;const i=t.path[t.path.length-1];return(2===s&&i[0]===this._size[0]-1||4===s&&0===i[0])&&(e|=8),this._board[i[0]][i[1]]=e,!0}reset(){this._board=[];for(let t=0;t<this._size[0];t++)this._board[t]=Array(this._size[1]).fill(1);for(let t=0;t<this._size[0];t++)for(let s=t%2==0?1:0;s<this._size[1];s+=2)t<this._lines?this._board[t][s]=2:this._size[0]-this._lines<=t&&(this._board[t][s]=4)}choices(t){const s=[];for(let e=0;e<this._size[0];e++)for(let r=0;r<this._size[1];r++)this._board[e][r]&t&&s.push(...this.allPath(e,r,t));return s.some((t=>t.jump.length>0))?s.filter((t=>t.jump.length>0)):s}allPath(t,s,e,r=!0){if(!(this._board[t][s]&e))return[];const i=(t,s)=>0<=t&&t<this._size[0]&&0<=s&&s<this._size[1],h=2===e?4:2,o=[];8&this._board[t][s]?o.push([1,1],[-1,1],[-1,-1],[1,-1]):2===e?o.push([1,1],[1,-1]):o.push([-1,1],[-1,-1]);const n=[];for(const[a,u]of o)if(i(t+a,s+u)&&(r&&1===this._board[t+a][s+u]&&n.push({from:[t,s],path:[[t+a,s+u]],jump:[]}),this._board[t+a][s+u]&h&&i(t+2*a,s+2*u)&&1===this._board[t+2*a][s+2*u])){const r=this.copy();r._board[t+2*a][s+2*u]=this._board[t][s],r._board[t][s]=1,r._board[t+a][s+u]=1,(2===e&&t+2*a===this._size[0]-1||4===e&&t+2*a===0)&&(r._board[t+2*a][s+2*u]|=8);const i=r.allPath(t+2*a,s+2*u,e,!1);if(0===i.length)n.push({from:[t,s],path:[[t+2*a,s+2*u]],jump:[[t+a,s+u]]});else for(const e of i)n.push({from:[t,s],path:[[t+2*a,s+2*u],...e.path],jump:[[t+a,s+u],...e.jump]})}return n}}