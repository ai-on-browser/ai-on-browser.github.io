import{Matrix}from"../util/math.js";export class LinearDiscriminant{constructor(){this._x=null,this._y=null,this._w=null,this._w0=null}_s(t){t.map((t=>1/(1+Math.exp(-t))))}init(t,r){this._x=t,this._y=r}fit(){const t=Matrix.fromArray(this._x),r=(t.cols,Matrix.fromArray(this._x.filter(((t,r)=>1===this._y[r])))),i=Matrix.fromArray(this._x.filter(((t,r)=>-1===this._y[r]))),s=r.mean(0),o=i.mean(0),e=t.cov().inv();this._w=s.copySub(o).dot(e).t,this._w0=-s.dot(e).dot(s.t).value[0]/2+o.dot(e).dot(o.t).value[0]/2+Math.log(r.rows/i.rows)}predict(t){const r=Matrix.fromArray(t).dot(this._w);return r.add(this._w0),this._s(r),r.sub(.5),r.value}}export class FishersLinearDiscriminant{constructor(){this._x=null,this._y=null,this._w=null,this._m=null}init(t,r){this._x=t,this._y=r}fit(){const t=Matrix.fromArray(this._x.filter(((t,r)=>1===this._y[r]))),r=Matrix.fromArray(this._x.filter(((t,r)=>-1===this._y[r]))),i=t.mean(0),s=r.mean(0);t.sub(i),r.sub(s);const o=t.tDot(t);o.add(r.tDot(r)),this._w=i.copySub(s).dot(o.inv()).t,this._m=Matrix.fromArray(this._x).mean(0)}predict(t){const r=Matrix.fromArray(t);return r.sub(this._m),r.dot(this._w).value}}export class MulticlassLinearDiscriminant{constructor(){}fit(t,r){const i=t[0].length;this._c=[...new Set(r)],this._a=[],this._m=[],this._s=Matrix.zeros(i,i);for(let i=0;i<this._c.length;i++){let s=t.filter(((t,s)=>r[s]===this._c[i]));this._a[i]=s.length/t.length,s=Matrix.fromArray(s),this._m[i]=s.mean(0),s.sub(this._m[i]),this._s.add(s.tDot(s))}this._s.div(t.length),this._sinv=this._s.inv()}predict(t){const r=Matrix.fromArray(t),i=new Matrix(r.rows,this._c.length);for(let t=0;t<this._c.length;t++){const s=r.copySub(this._m[t]),o=s.dot(this._sinv);o.mult(s);const e=o.sum(1);e.map((r=>Math.exp(-r/2)*this._a[t])),i.set(0,t,e)}return i.argmax(1).value.map((t=>this._c[t]))}}export const LinearDiscriminantAnalysis=function(t,r,i=0){const s=(t=Matrix.fromArray(t)).cols,o=t.rows;let e={},l=0;for(let t=0;t<o;t++)void 0===e[r[t]]&&(e[r[t]]=l++),r[t]=e[r[t]];const a=t.mean(0).value;let n=[];for(let t=0;t<l;n[t++]=Array(s).fill(0));let h=Array(l).fill(0);for(let i=0;i<o;i++){h[r[i]]++;for(let o=0;o<s;o++)n[r[i]][o]+=t.at(i,o)}for(let t=0;t<l;t++)for(let r=0;r<s;r++)n[t][r]/=h[t];let _=[];for(let t=0;t<s;_[t++]=[]);for(let i=0;i<s;i++)for(let s=0;s<=i;s++){let e=0;for(let l=0;l<o;l++)e+=(t.at(l,i)-n[r[l]][i])*(t.at(l,s)-n[r[l]][s]);_[i][s]=_[s][i]=e/o}_=new Matrix(s,s,_);let c=[];for(let t=0;t<s;c[t++]=[]);for(let t=0;t<s;t++)for(let r=0;r<=t;r++){let i=0;for(let s=0;s<l;s++)i+=(n[s][t]-a[t])*(n[s][r]-a[r])*h[s];c[t][r]=c[r][t]=i/o}c=new Matrix(s,s,c);let f=_.solve(c).eigenVectors();return i>0&&i<f.cols&&(f=f.resize(f.rows,i)),t.dot(f).toArray()};