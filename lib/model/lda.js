var x=Object.defineProperty;var y=(d,s)=>x(d,"name",{value:s,configurable:!0});import l from"../util/matrix.js";export class LinearDiscriminant{static{y(this,"LinearDiscriminant")}constructor(){this._x=null,this._y=null,this._w=null,this._w0=null}_s(s){s.map(i=>1/(1+Math.exp(-i)))}init(s,i){this._x=s,this._y=i}fit(){const s=l.fromArray(this._x),i=l.fromArray(this._x.filter((_,m)=>this._y[m]===1)),r=l.fromArray(this._x.filter((_,m)=>this._y[m]===-1)),o=i.mean(0),e=r.mean(0),c=s.cov().inv();this._w=l.sub(o,e).dot(c).t,this._w0=-o.dot(c).dot(o.t).toScaler()/2+e.dot(c).dot(e.t).toScaler()/2+Math.log(i.rows/r.rows)}predict(s){const r=l.fromArray(s).dot(this._w);return r.add(this._w0),this._s(r),r.sub(.5),r.value.map(o=>o<=0?-1:1)}}export class FishersLinearDiscriminant{static{y(this,"FishersLinearDiscriminant")}constructor(){this._x=null,this._y=null,this._w=null,this._m=null}init(s,i){this._x=s,this._y=i}fit(){const s=l.fromArray(this._x.filter((h,c)=>this._y[c]===1)),i=l.fromArray(this._x.filter((h,c)=>this._y[c]===-1)),r=s.mean(0),o=i.mean(0);s.sub(r),i.sub(o);const e=s.tDot(s);e.add(i.tDot(i)),this._w=l.sub(r,o).dot(e.inv()).t,this._m=l.fromArray(this._x).mean(0)}predict(s){const i=l.fromArray(s);return i.sub(this._m),i.dot(this._w).value.map(r=>r<=0?-1:1)}}export class MulticlassLinearDiscriminant{static{y(this,"MulticlassLinearDiscriminant")}constructor(){}fit(s,i){const r=s[0].length;this._c=[...new Set(i)],this._a=[],this._m=[],this._s=l.zeros(r,r);for(let o=0;o<this._c.length;o++){let e=s.filter((h,c)=>i[c]===this._c[o]);this._a[o]=e.length/s.length,e=l.fromArray(e),this._m[o]=e.mean(0),e.sub(this._m[o]),this._s.add(e.tDot(e))}this._s.div(s.length),this._sinv=this._s.inv()}predict(s){const i=l.fromArray(s),r=new l(i.rows,this._c.length);for(let o=0;o<this._c.length;o++){const e=l.sub(i,this._m[o]),h=e.dot(this._sinv);h.mult(e);const c=h.sum(1);c.map(_=>Math.exp(-_/2)*this._a[o]),r.set(0,o,c)}return r.argmax(1).value.map(o=>this._c[o])}}export class LinearDiscriminantAnalysis{static{y(this,"LinearDiscriminantAnalysis")}constructor(s=null){this._rd=s??0}predict(s,i){s=l.fromArray(s);const r=s.cols,o=s.rows;let e={},h=0;for(let t=0;t<o;t++)e[i[t]]===void 0&&(e[i[t]]=h++),i[t]=e[i[t]];const c=s.mean(0).value;let _=[];for(let t=0;t<h;_[t++]=Array(r).fill(0));let m=Array(h).fill(0);for(let t=0;t<o;t++){m[i[t]]++;for(let n=0;n<r;n++)_[i[t]][n]+=s.at(t,n)}for(let t=0;t<h;t++)for(let n=0;n<r;n++)_[t][n]/=m[t];let f=[];for(let t=0;t<r;f[t++]=[]);for(let t=0;t<r;t++)for(let n=0;n<=t;n++){let v=0;for(let a=0;a<o;a++)v+=(s.at(a,t)-_[i[a]][t])*(s.at(a,n)-_[i[a]][n]);f[t][n]=f[n][t]=v/o}f=new l(r,r,f);let u=[];for(let t=0;t<r;u[t++]=[]);for(let t=0;t<r;t++)for(let n=0;n<=t;n++){let v=0;for(let a=0;a<h;a++)v+=(_[a][t]-c[t])*(_[a][n]-c[n])*m[a];u[t][n]=u[n][t]=v/o}u=new l(r,r,u);const w=f.solve(u).eigenVectors();return this._rd>0&&this._rd<w.cols&&w.resize(w.rows,this._rd),s.dot(w).toArray()}}
