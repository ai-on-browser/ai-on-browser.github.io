var v=Object.defineProperty;var c=(s,e)=>v(s,"name",{value:e,configurable:!0});import u from"../util/matrix.js";import h from"./mds.js";const j=c(s=>{const e=s.rows;for(let i=0;i<e;i++)for(let o=0;o<e;o++)for(let n=0;n<e;n++){const a=s.at(o,n),t=s.at(o,i)+s.at(i,n);a>t&&s.set(o,n,t)}},"warshallFloyd");export default class m{static{c(this,"Isomap")}constructor(e=0){this._n=e}predict(e,i=1){e=u.fromArray(e);const o=e.rows,n=e.cols,a=new u(o,o);for(let t=0;t<o;t++){a.value[t*o+t]=0;for(let r=t+1;r<o;r++){let l=0;for(let f=0;f<n;f++)l+=(e.at(t,f)-e.at(r,f))**2;a.value[t*o+r]=a.value[r*o+t]=Math.sqrt(l)}}if(this._n>0){for(let t=0;t<o;t++){const r=[];for(let l=0;l<o;l++)t!==l&&r.push([a.value[t*o+l],l]);r.sort((l,f)=>l[0]-f[0]);for(let l=this._n;l<o-1;l++)a.value[t*o+r[l][1]]=1/0}for(let t=0;t<o;t++)for(let r=t+1;r<o;r++)a.value[t*o+r]=a.value[r*o+t]=Math.min(a.value[t*o+r],a.value[r*o+t])}return j(a),new h().predict(a,i,!0)}}
