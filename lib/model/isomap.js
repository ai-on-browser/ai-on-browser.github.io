var c=Object.defineProperty;var f=(a,l)=>c(a,"name",{value:l,configurable:!0});import u from"../util/matrix.js";import v from"./mds.js";const h=f(a=>{const l=a.rows;for(let t=0;t<l;t++)for(let i=0;i<l;i++)for(let e=0;e<l;e++){const o=a.at(i,e),r=a.at(i,t)+a.at(t,e);o>r&&a.set(i,e,r)}},"warshallFloyd");export default class j{static{f(this,"Isomap")}constructor(l=0,t=null){this._n=l,this._rd=t}predict(l){l=u.fromArray(l);const t=l.rows,i=l.cols,e=new u(t,t);for(let o=0;o<t;o++){e.value[o*t+o]=0;for(let r=o+1;r<t;r++){let s=0;for(let n=0;n<i;n++)s+=(l.at(o,n)-l.at(r,n))**2;e.value[o*t+r]=e.value[r*t+o]=Math.sqrt(s)}}if(this._n>0){for(let o=0;o<t;o++){const r=[];for(let s=0;s<t;s++)o!==s&&r.push([e.value[o*t+s],s]);r.sort((s,n)=>s[0]-n[0]);for(let s=this._n;s<t-1;s++)e.value[o*t+r[s][1]]=1/0}for(let o=0;o<t;o++)for(let r=o+1;r<t;r++)e.value[o*t+r]=e.value[r*t+o]=Math.min(e.value[o*t+r],e.value[r*t+o])}return h(e),new v(this._rd??i).predict(e,!0)}}
