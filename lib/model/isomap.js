import{Matrix}from"../util/math.js";import{MDS}from"./mds.js";const warshallFloyd=t=>{const o=t.rows;for(let l=0;l<o;l++)for(let r=0;r<o;r++)for(let a=0;a<o;a++){const o=t.at(r,a),e=t.at(r,l)+t.at(l,a);o>e&&t.set(r,a,e)}},Isomap=function(t,o=1,l=0){const r=(t=Matrix.fromArray(t)).rows,a=t.cols,e=l,s=new Matrix(r,r);for(let o=0;o<r;o++){s._value[o*r+o]=0;for(let l=o+1;l<r;l++){let e=0;for(let r=0;r<a;r++)e+=(t.at(o,r)-t.at(l,r))**2;s._value[o*r+l]=s._value[l*r+o]=Math.sqrt(e)}}if(e>0){for(let t=0;t<r;t++){const o=[];for(let l=0;l<r;l++)t!==l&&o.push([s._value[t*r+l],l]);o.sort(((t,o)=>t[0]-o[0]));for(let l=e;l<r-1;l++)s._value[t*r+o[l][1]]=1/0}for(let t=0;t<r;t++)for(let o=t+1;o<r;o++)s._value[t*r+o]=s._value[o*r+t]=Math.min(s._value[t*r+o],s._value[o*r+t])}return warshallFloyd(s),MDS(s,o,!0)};export default Isomap;