var g=Object.defineProperty;var _=(m,o)=>g(m,"name",{value:o,configurable:!0});export default class c{static{_(this,"KPrototypes")}constructor(o,l){this._modes=[],this._iscat=l,this._gamma=o,this._categories=null}get size(){return this._modes.length}add(o){if(!this._categories){this._categories=[];for(let e=0;e<o[0].length;e++)this._iscat[e]&&(this._categories[e]=[...new Set(o.map(i=>i[e]))])}const l=[];for(let e=0;e<o[0].length;e++)if(this._iscat[e]){const i=Array(this._categories[e].length);let s=0;for(let t=0;t<i.length;t++)i[t]=Math.random(),s+=i[t];l[e]=i.map(t=>t/s)}else l[e]=o[Math.floor(Math.random()*o.length)][e];this._modes.push(l)}clear(){this._modes=[]}predict(o){if(this._modes.length===0)throw new Error("Call fit before predict.");return o.map(l=>{let e=1/0,i=-1;for(let s=0;s<this._modes.length;s++){let t=0;for(let r=0;r<l.length;r++)if(this._iscat[r])for(let h=0;h<this._modes[s][r].length;h++)this._categories[r][h]===l[r]?t+=this._gamma*(this._modes[s][r][h]-1)**2:t+=this._gamma*this._modes[s][r][h]**2;else t+=(this._modes[s][r]-l[r])**2;t<e&&(e=t,i=s)}return i})}fit(o){if(this._modes.length===0||o.length===0)return 0;const l=this.predict(o);let e=0;for(let i=0;i<this._modes.length;i++){const s=[];for(let t=0;t<this._modes[i].length;t++)if(this._iscat[t]){s[t]=Array(this._modes[i][t].length).fill(0);let r=0;for(let h=0;h<l.length;h++)l[h]===i&&(s[t][this._categories[t].indexOf(o[h][t])]++,r++);s[t]=s[t].map(h=>h===0?0:h/r),e+=this._gamma*Math.sqrt(this._modes[i][t].reduce((h,n,f)=>h+(n-s[t][f])**2,0))}else{let r=0,h=0;for(let n=0;n<l.length;n++)l[n]===i&&(r+=o[n][t],h++);s[t]=r/h,e+=Math.abs(this._modes[i][t]-s[t])}this._modes[i]=s}return e}}
