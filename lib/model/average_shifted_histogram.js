import{Histogram}from"./histogram.js";const averageShiftedHistogram=(t,o,r)=>{const e=o.domain,l=o.size,i=t[0].length,a=e.map((t=>t[0])),s=e.map((t=>t[1])),f=[],n=[];let h=[f];for(let t=0;t<i;t++){const o=[],r=Math.ceil((s[t]-a[t])/l);n.push(r);for(const e of h)for(let l=0;l<r;l++)t===i-1?e.push(0):o.push(e[l]=[]);h=o}const m=(t,o)=>{for(let r=0;r<t.length;r++){if(t[r]++,t[r]<o[r])return!0;t[r]=0}return!1},c=Array(i).fill(0),g=Array(i).fill(r);do{const o=[];for(let t=0;t<i;t++){const r=[a[t]-c[t]*l,s[t]];o.push(r)}const e=new Histogram({domain:o,size:r*l}).fit(t),h=Array(i).fill(0);do{let t=f,o=e;for(let e=0;e<i-1;e++)t=t[h[e]],o=o[Math.floor((h[e]+c[e])/r)];t[h[i-1]]+=o[Math.floor((h[i-1]+c[i-1])/r)]}while(m(h,n))}while(m(c,g));const d=Array(i).fill(0);do{let t=f;for(let o=0;o<i-1;o++)t=t[d[o]];t[d[i-1]]/=r**i}while(m(d,n));return f};export default averageShiftedHistogram;