import Histogram from"./histogram.js";export default class AverageShiftedHistogram{constructor(t,e){this._config=t,this._step=e}fit(t){let e=this._config.domain;if(!e){e=t[0].map((t=>[t,t]));for(let s=0;s<t.length;s++)for(let r=0;r<t[s].length;r++)e[r][0]=Math.min(t[s][r],e[r][0]),e[r][1]=Math.max(t[s][r],e[r][1])}const s=this._config.size,r=t[0].length,i=e.map((t=>t[0])),o=e.map((t=>t[1])),h=[],l=[];this._ranges=[];let n=[h];for(let t=0;t<r;t++){const e=[],h=Math.ceil((o[t]-i[t])/s);l.push(h);for(const s of n)for(let i=0;i<h;i++)t===r-1?s.push(0):e.push(s[i]=[]);this._ranges[t]=[i[t]];let a=0;for(;i[t]+ ++a*s<o[t]+s;)this._ranges[t].push(i[t]+a*s);n=e}const a=(t,e)=>{for(let s=0;s<t.length;s++){if(t[s]++,t[s]<e[s])return!0;t[s]=0}return!1},f=Array(r).fill(0),g=Array(r).fill(this._step);do{const e=[];for(let t=0;t<r;t++){const r=[i[t]-f[t]*s,o[t]];e.push(r)}const n=new Histogram({domain:e,size:this._step*s}).fit(t),g=Array(r).fill(0);do{let t=h,e=n;for(let s=0;s<r-1;s++)t=t[g[s]],e=e[Math.floor((g[s]+f[s])/this._step)];t[g[r-1]]+=e[Math.floor((g[r-1]+f[r-1])/this._step)]}while(a(g,l))}while(a(f,g));const _=Array(r).fill(0);do{let t=h;for(let e=0;e<r-1;e++)t=t[_[e]];t[_[r-1]]/=this._step**r}while(a(_,l));return this._dense=h,h}predict(t){return t.map((t=>{let e=this._dense;for(let s=0;s<t.length;s++){if(t[s]<this._ranges[s][0]||this._ranges[s][this._ranges[s].length-1]<t[s])return 0;let r=0;for(;r<this._ranges[s].length-1&&!(t[s]<=this._ranges[s][r+1]);r++);e=e[r]}return e}))}}