var v=Object.defineProperty;var a=(g,n)=>v(g,"name",{value:n,configurable:!0});const c={gaussian:a(({s:g=1})=>(n,i)=>Math.exp(-(n.reduce((h,_,r)=>h+(_-i[r])**2,0)**2)/g**2),"gaussian"),polynomial:a(({d:g=2})=>(n,i)=>(1+n.reduce((h,_,r)=>h+_*i[r]))**g,"polynomial")};export class Projectron{static{a(this,"Projectron")}constructor(n=0,i="gaussian"){this._eta=n,typeof i=="function"?this._kernel=i:(typeof i=="string"&&(i={name:i}),this._kernel=c[i.name](i)),this._S=[],this._a=[],this._kinv=[]}fit(n,i){for(let h=0;h<n.length;h++){const _=[];for(let s=0;s<this._S.length;s++){const f=this._S[s];_[s]=this._kernel(n[h],f)}let r=0;for(let s=0;s<this._S.length;s++)r+=this._a[s]*_[s];if((r<0?-1:1)*i[h]<=0){const s=[];for(let t=0;t<this._kinv.length;t++){s[t]=0;for(let e=0;e<this._kinv[t].length;e++)s[t]+=this._kinv[t][e]*_[e]}let f=this._kernel(n[h],n[h]);for(let t=0;t<s.length;t++)f-=_[t]*s[t];if(f<=this._eta**2)for(let t=0;t<s.length;t++)this._a[t]+=i[h]*s[t];else{this._S.push(n[h]),this._a.push(i[h]);const t=[];for(let e=0;e<s.length+1;e++){t[e]=[];for(let l=0;l<s.length+1;l++)e<this._kinv.length&&l<this._kinv[e].length?t[e][l]=this._kinv[e][l]+s[e]*s[l]/f:e<this._kinv.length?t[e][l]=-s[e]/f:l<this._kinv.length?t[e][l]=-s[l]/f:t[e][l]=1/f}this._kinv=t}}}}predict(n){const i=[];for(let h=0;h<n.length;h++){const _=[];for(let o=0;o<this._S.length;o++){const s=this._S[o];_[o]=this._kernel(n[h],s)}let r=0;for(let o=0;o<this._S.length;o++)r+=this._a[o]*_[o];i[h]=r<0?-1:1}return i}}export class Projectronpp{static{a(this,"Projectronpp")}constructor(n=0,i="gaussian"){this._eta=n,typeof i=="function"?this._kernel=i:(typeof i=="string"&&(i={name:i}),this._kernel=c[i.name](i)),this._S=[],this._a=[],this._kinv=[]}fit(n,i){for(let h=0;h<n.length;h++){const _=[];for(let t=0;t<this._S.length;t++){const e=this._S[t];_[t]=this._kernel(n[h],e)}let r=0;for(let t=0;t<this._S.length;t++)r+=this._a[t]*_[t];const o=r<0?-1:1,s=[];for(let t=0;t<this._kinv.length;t++){s[t]=0;for(let e=0;e<this._kinv[t].length;e++)s[t]+=this._kinv[t][e]*_[e]}let f=this._kernel(n[h],n[h]);for(let t=0;t<s.length;t++)f-=_[t]*s[t];if(o*i[h]<=0)if(f<=this._eta**2)for(let t=0;t<s.length;t++)this._a[t]+=i[h]*s[t];else{this._S.push(n[h]),this._a.push(i[h]);const t=[];for(let e=0;e<s.length+1;e++){t[e]=[];for(let l=0;l<s.length+1;l++)e<this._kinv.length&&l<this._kinv[e].length?t[e][l]=this._kinv[e][l]+s[e]*s[l]/f:e<this._kinv.length?t[e][l]=-s[e]/f:l<this._kinv.length?t[e][l]=-s[l]/f:t[e][l]=1/f}this._kinv=t}else if(i[h]*r<=1){const t=Math.max(0,1-r*i[h]);if(t>=Math.sqrt(f)/this._eta){let e=0;for(let k=0;k<s.length;k++)e+=_[k]*s[k];const l=Math.min(t/e,2*(t-Math.sqrt(f)/this._eta)/e,1);for(let k=0;k<s.length;k++)this._a[k]+=i[h]*l*s[k]}}}}predict(n){const i=[];for(let h=0;h<n.length;h++){const _=[];for(let o=0;o<this._S.length;o++){const s=this._S[o];_[o]=this._kernel(n[h],s)}let r=0;for(let o=0;o<this._S.length;o++)r+=this._a[o]*_[o];i[h]=r<0?-1:1}return i}}
