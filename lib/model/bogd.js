var k=Object.defineProperty;var c=(f,a)=>k(f,"name",{value:a,configurable:!0});export default class m{static{c(this,"BOGD")}constructor(a=10,n=1,i=.1,r=.1,l="nonuniform",s="gaussian",e="hinge"){if(this._b=a,this._eta=n,this._lambda=i,this._gamma=r,this._sampling=l,typeof s=="function")this._kernel=s;else switch(s){case"gaussian":this._s=1,this._kernel=(_,h)=>Math.exp(-(_.reduce((g,o,t)=>g+(o-h[t])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(_,h)=>(1+_.reduce((g,o,t)=>g+o*h[t]))**this._d;break}e==="zero_one"?this._gloss=(_,h)=>_*(h<=0?-1:1)<=0?-1:0:e==="hinge"&&(this._gloss=(_,h)=>_*(h<=0?-1:1)<=1?-1:0),this._sv=[],this._alpha=[]}fit(a,n){for(let i=0;i<a.length;i++){let r=0;for(let s=0;s<this._sv.length;s++){const e=this._sv[s];r+=this._alpha[s]*e.y*this._kernel(a[i],e.x)}const l=this._gloss(n[i],r);if(l===0)this._alpha=this._alpha.map(s=>(1-this._eta*this._lambda)*s);else if(this._sv.length<this._b)this._alpha=this._alpha.map(s=>(1-this._eta*this._lambda)*s),this._alpha.push(-this._eta*l),this._sv.push({x:a[i],y:n[i]});else{let s=-1;const e=[];if(this._sampling==="uniform"){for(let h=0;h<this._sv.length;h++)e[h]=1/this._sv.length;s=Math.floor(Math.random()*this._sv.length)}else{const h=[];for(let t=0;t<this._sv.length;t++){const p=this._sv[t];h[t]=this._alpha[t]*Math.sqrt(this._kernel(p.x,p.x))}const g=(this._b-1)/h.reduce((t,p)=>t+p,0);for(let t=0;t<this._sv.length;t++)e[t]=1-g*h[t];let o=Math.random()*e.reduce((t,p)=>t+p,0);for(let t=0;t<e.length;t++)if(o-=e[t],o<0){s=t;break}}const _=this._lambda*this._eta;for(let h=0;h<this._sv.length;h++)this._alpha[h]*=(1-_)/(1-e[h]);this._sv.splice(s,1),this._alpha.splice(s,1),this._sv.push({x:a[i],y:n[i]}),this._alpha.push(-this._eta*l)}for(let s=0;s<this._sv.length;s++)this._alpha[s]=Math.min(this._alpha[s],this._gamma*this._eta)}}predict(a){const n=[];for(let i=0;i<a.length;i++){let r=0;for(let l=0;l<this._sv.length;l++){const s=this._sv[l];r+=this._alpha[l]*s.y*this._kernel(a[i],s.x)}n[i]=r<0?-1:1}return n}}
