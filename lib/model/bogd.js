var m=Object.defineProperty;var c=(g,a)=>m(g,"name",{value:a,configurable:!0});export default class u{static{c(this,"BOGD")}constructor(a=10,n=1,i=.1,o=.1,_="nonuniform",s="gaussian",e="hinge"){if(this._b=a,this._eta=n,this._lambda=i,this._gamma=o,this._sampling=_,typeof s=="function")this._kernel=s;else switch(typeof s=="string"&&(s={name:s}),s.name){case"gaussian":this._s=s.s??1,this._kernel=(l,h)=>Math.exp(-(l.reduce((f,r,t)=>f+(r-h[t])**2,0)**2)/this._s**2);break;case"polynomial":this._d=s.d??2,this._kernel=(l,h)=>(1+l.reduce((f,r,t)=>f+r*h[t]))**this._d;break}e==="zero_one"?this._gloss=(l,h)=>l*(h<=0?-1:1)<=0?-1:0:e==="hinge"&&(this._gloss=(l,h)=>l*(h<=0?-1:1)<=1?-1:0),this._sv=[],this._alpha=[]}fit(a,n){for(let i=0;i<a.length;i++){let o=0;for(let s=0;s<this._sv.length;s++){const e=this._sv[s];o+=this._alpha[s]*e.y*this._kernel(a[i],e.x)}const _=this._gloss(n[i],o);if(_===0)this._alpha=this._alpha.map(s=>(1-this._eta*this._lambda)*s);else if(this._sv.length<this._b)this._alpha=this._alpha.map(s=>(1-this._eta*this._lambda)*s),this._alpha.push(-this._eta*_),this._sv.push({x:a[i],y:n[i]});else{let s=-1;const e=[];if(this._sampling==="uniform"){for(let h=0;h<this._sv.length;h++)e[h]=1/this._sv.length;s=Math.floor(Math.random()*this._sv.length)}else{const h=[];for(let t=0;t<this._sv.length;t++){const p=this._sv[t];h[t]=this._alpha[t]*Math.sqrt(this._kernel(p.x,p.x))}const f=(this._b-1)/h.reduce((t,p)=>t+p,0);for(let t=0;t<this._sv.length;t++)e[t]=1-f*h[t];let r=Math.random()*e.reduce((t,p)=>t+p,0);for(let t=0;t<e.length;t++)if(r-=e[t],r<0){s=t;break}}const l=this._lambda*this._eta;for(let h=0;h<this._sv.length;h++)this._alpha[h]*=(1-l)/(1-e[h]);this._sv.splice(s,1),this._alpha.splice(s,1),this._sv.push({x:a[i],y:n[i]}),this._alpha.push(-this._eta*_)}for(let s=0;s<this._sv.length;s++)this._alpha[s]=Math.min(this._alpha[s],this._gamma*this._eta)}}predict(a){const n=[];for(let i=0;i<a.length;i++){let o=0;for(let _=0;_<this._sv.length;_++){const s=this._sv[_];o+=this._alpha[_]*s.y*this._kernel(a[i],s.x)}n[i]=o<0?-1:1}return n}}
