var n=Object.defineProperty;var l=(a,t)=>n(a,"name",{value:t,configurable:!0});import r from"../util/matrix.js";export default class f{static{l(this,"NormalHERD")}constructor(t="exact",h=.1){this._m=null,this._s=null,this._c=h,this._method=t}init(t,h){this._x=r.fromArray(t),this._shift=this._x.mean(0),this._x.sub(this._shift),this._y=h,this._d=this._x.cols,this._m=r.zeros(this._d,1),this._s=r.eye(this._d,this._d)}update(t,h){const c=this._m.tDot(t).toScaler();if(c*h>1)return;const _=t.tDot(this._s).dot(t).toScaler(),m=Math.max(0,1-c*h)/(_+1/this._c),d=this._s.dot(t);if(d.mult(h*m),this._m.add(d),this._method==="full"){const i=this._s.dot(t).dot(t.tDot(this._s));i.mult((this._c**2*_+2*this._c)/(1+this._c*_)**2),this._s.sub(i)}else if(this._method==="exact")for(let i=0;i<this._s.rows;i++){const s=this._s.at(i,i),o=t.at(i,0);this._s.set(i,i,s/(1+this._c*o**2*s)**2)}else if(this._method==="project"){const i=2*this._c+this._c**2*_;for(let s=0;s<this._s.rows;s++){const o=this._s.at(s,s),e=t.at(s,0);this._s.set(s,s,1/(1/o+i*e**2))}}else if(this._method==="drop"){const i=2*this._c+this._c**2*_;for(let s=0;s<this._s.rows;s++){const o=this._s.at(s,s),e=t.at(s,0);this._s.set(s,s,o-(o*e)**2*i/(1+this._c*_)**2)}}}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){const h=r.fromArray(t);return h.sub(this._shift),h.dot(this._m).value.map(_=>_<=0?-1:1)}}
