var c=Object.defineProperty;var l=(r,h)=>c(r,"name",{value:h,configurable:!0});export default class f{static{l(this,"KHarmonicMeans")}constructor(h){this._k=h,this._d=(o,t)=>Math.sqrt(o.reduce((s,n,i)=>s+(n-t[i])**2,0))}get centroids(){return this._m}init(h){this._x=h;const o=this._x.length,t=[];for(let s=0;s<this._k;s++)t.push(Math.floor(Math.random()*(o-s)));for(let s=t.length-1;s>=0;s--)for(let n=t.length-1;n>s;n--)t[s]<=t[n]&&t[n]++;this._m=t.map(s=>this._x[s])}fit(){const h=this._x.length,o=[];for(let t=0;t<h;t++){const s=this._m.map(i=>this._d(this._x[t],i)),n=s.reduce((i,e,_)=>e<i[0]?[e,_]:i,[1/0,-1]);o[t]=[];for(let i=0;i<this._k;i++){const e=i===n[1]?1:n[0]/s[i];o[t][i]=e**3*n[0]/(1+(i===n[1]?0:e**2))**2}}for(let t=0;t<this._k;t++){let s=0;const n=Array(this._m[t].length).fill(0);for(let i=0;i<h;i++){for(let e=0;e<this._x[i].length;e++)n[e]+=o[i][t]*this._x[i][e];s+=o[i][t]}this._m[t]=n.map(i=>i/s)}}predict(h){const o=[];for(let t=0;t<h.length;t++){let s=1/0,n=-1;for(let i=0;i<this._m.length;i++){const e=this._d(h[t],this._m[i]);e<s&&(s=e,n=i)}o[t]=n}return o}}
