export default class GSOM{constructor(t=.1,h=.1){this._sf=t,this._lr=this._init_lr=h,this._k=0,this._node=null,this._init_vector_count=4,this._lr_update=(t,h)=>.99*t}get size(){return this._node.length}fit(t){if(!this._node){this._d=t[0].length,this._node=[];for(let t=0;t<this._init_vector_count;t++){this._node[t]=[];for(let h=0;h<this._d;h++)this._node[t][h]=Math.random()}this._gt=-this._d*Math.log(this._sf),this._err=Array(this._node.length).fill(0)}for(let h=0;h<t.length;h++){this._k++;let i=1/0,e=-1;for(let s=0;s<this._node.length;s++){const _=this._node[s].reduce(((i,e,s)=>i+(e-t[h][s])**2),0);_<i&&(i=_,e=s)}let s=0;for(let i=0;i<t[h].length;i++)this._node[e][i]+=this._lr*(t[h][i]-this._node[e][i]),s+=(t[h][i]-this._node[e][i])**2;this._err[e]+=Math.sqrt(s),this._err[e]>this._gt&&(this._node.push(this._node[e].map((t=>t+(Math.random()-.5)/1e3))),this._err.push(0),this._err[e]=0,this._lr=this._init_lr,this._k=1),this._lr=this._lr_update(this._lr,this._k)}}predict(t){const h=[];for(let i=0;i<t.length;i++){let e=1/0,s=-1;for(let h=0;h<this._node.length;h++){const _=this._node[h].reduce(((h,e,s)=>h+(e-t[i][s])**2),0);_<e&&(e=_,s=h)}h[i]=s}return h}}