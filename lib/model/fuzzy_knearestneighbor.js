var d=Object.defineProperty;var u=(r,i)=>d(r,"name",{value:i,configurable:!0});export default class p{static{u(this,"FuzzyKNN")}constructor(i=5,s=2){this._p=[],this._c=[],this._classes=[],this._u=[],this._k=i,this._m=s,this._d=(t,e)=>Math.sqrt(t.reduce((_,h,l)=>_+(h-e[l])**2,0))}get categories(){return this._classes}_near_points(i){const s=[];return this._p.forEach((t,e)=>{const _=this._d(i,t);if(s.length<this._k||_<s[this._k-1].d){s.length>=this._k&&s.pop(),s.push({d:_,category:this._c[e],idx:e});for(let h=s.length-1;h>0;h--)s[h-1].d>s[h].d&&([s[h],s[h-1]]=[s[h-1],s[h]])}}),s}add(i,s){if(this._p.push(i),this._c.push(s),!this._classes.includes(s)){this._classes.push(s);for(let e=0;e<this._u.length;e++)this._u[e].push(0)}const t=Array(this._classes.length).fill(0);t[this._classes.indexOf(s)]=1,this._u.push(t)}fit(i,s){for(let t=0;t<i.length;t++)this.add(i[t],s[t])}predict(i){return i.map(s=>{const t=this._near_points(s),e=[];for(let _=0;_<this._classes.length;_++){let h=0,l=0;for(let n=0;n<t.length;n++){const c=t[n].d**(2/(this._m-1));h+=this._u[t[n].idx][_]*c,l+=c}e[_]=l===0?0:h/l}return e})}}
