import Matrix from"../util/matrix.js";import{KMeansModel}from"./kmeans.js";const argmin=function(t,r){return 0===t.length?-1:(t=r?t.map(r):t).indexOf(Math.min(...t))};export default class LBG{constructor(){this._centroids=[]}get centroids(){return this._centroids}get size(){return this._centroids.length}_distance(t,r){return Math.sqrt(t.reduce(((t,n,e)=>t+(n-r[e])**2),0))}clear(){this._centroids=[]}fit(t){const r=Matrix.fromArray(t);if(0===this._centroids.length)return void(this._centroids=r.mean(0).toArray());const n=[],e=r.max(0).copySub(r.min()).copyDiv(100).value;for(const t of this._centroids){const r=t.concat(),i=t.concat();for(let t=0;t<e.length;t++)r[t]+=e[t],i[t]-=e[t];n.push(r,i)}const i=new KMeansModel;for(i._centroids=n;i.fit(t)>0;)this._centroids=i.centroids}predict(t){if(0!==this._centroids.length)return t.map((t=>{return r=this._centroids,n=r=>this._distance(t,r),0===r.length?-1:(r=n?r.map(n):r).indexOf(Math.min(...r));var r,n}))}}