var c=Object.defineProperty;var g=(a,i)=>c(a,"name",{value:i,configurable:!0});import w from"../util/matrix.js";export class RBM{static{g(this,"RBM")}constructor(i,r=.01){this._hidden=i,this._visible=null,this._w=null,this._a=[],this._b=[],this._lr=r,this._k=1}_normalize(i){let r=-1/0,l=1/0;for(let t=0;t<i.length;t++)for(let e=0;e<i[t].length;e++)r=Math.max(r,i[t][e]),l=Math.min(l,i[t][e]);for(let t=0;t<i.length;t++)for(let e=0;e<i[t].length;e++)i[t][e]=i[t][e]<(r+l)/2?0:1}_sgm(i){return 1/(1+Math.exp(-i))}_h(i,r=!1){const l=[];for(let t=0;t<i.length;t++){l[t]=[];for(let e=0;e<this._w[0].length;e++){let s=this._b[e];for(let h=0;h<this._w.length;h++)s+=this._w[h][e]*i[t][h];l[t][e]=this._sgm(s),r&&(l[t][e]=l[t][e]>Math.random()?1:0)}}return l}_v(i,r=!1){const l=[];for(let t=0;t<i.length;t++){l[t]=[];for(let e=0;e<this._w.length;e++){let s=this._a[e];for(let h=0;h<this._w[e].length;h++)s+=this._w[e][h]*i[t][h];l[t][e]=this._sgm(s),r&&(l[t][e]=l[t][e]>Math.random()?1:0)}}return l}fit(i){this._normalize(i),this._w||(this._visible=i[0].length,this._w=w.randn(this._visible,this._hidden).toArray(),this._a=Array(this._visible).fill(0),this._b=Array(this._hidden).fill(0));const r=i,l=this._h(r);let t=this._v(l),e=this._h(t);for(let s=1;s<this._k;s++)t=this._v(e),e=this._h(t);for(let s=0;s<this._w.length;s++)for(let h=0;h<this._w[s].length;h++){let _=0;for(let n=0;n<i.length;n++)_+=r[n][s]*l[n][h]-t[n][s]*e[n][h];this._w[s][h]+=this._lr*_/i.length}for(let s=0;s<this._w.length;s++){let h=0;for(let _=0;_<i.length;_++)h+=r[_][s]-t[_][s];this._a[s]+=this._lr*h/i.length}for(let s=0;s<this._w[0].length;s++){let h=0;for(let _=0;_<i.length;_++)h+=l[_][s]-e[_][s];this._b[s]+=this._lr*h/i.length}}energy(i,r){this._normalize([i,r]);let l=0;for(let t=0;t<this._w.length;t++)for(let e=0;e<this._w[t].length;e++)l-=this._w[t][e]*i[t]*r[e];for(let t=0;t<this._w.length;t++)l-=this._a[t]*i[t];for(let t=0;t<this._w[0].length;t++)l-=this._b[t]*r[t];return l}predict(i){this._normalize(i);const r=this._h(i,!0);return this._v(r,!0)}}export class GBRBM{static{g(this,"GBRBM")}constructor(i,r=.01,l=!1){this._hidden=i,this._visible=null,this._w=null,this._b=[],this._z=[],this._c=[],this._lr=r,this._fixSigma=l,this._k=1}_randn(){return Math.sqrt(-2*Math.log(Math.random()))*Math.cos(2*Math.PI*Math.random())}get _s(){return this._z.map(Math.exp)}_h(i,r=!1){const l=[],t=this._s;for(let e=0;e<i.length;e++){l[e]=[];for(let s=0;s<this._w[0].length;s++){let h=this._c[s];for(let _=0;_<this._w.length;_++)h+=this._w[_][s]*i[e][_]/t[_];l[e][s]=1/(1+Math.exp(-h)),r&&(l[e][s]=l[e][s]>Math.random()?1:0)}}return l}_v(i,r=!1){const l=[],t=this._s;for(let e=0;e<i.length;e++){l[e]=[];for(let s=0;s<this._w.length;s++){let h=this._b[s];for(let _=0;_<this._w[s].length;_++)h+=this._w[s][_]*i[e][_];l[e][s]=h,r&&(l[e][s]+=this._randn()*Math.sqrt(t[s]))}}return l}fit(i){this._w||(this._visible=i[0].length,this._w=w.randn(this._visible,this._hidden).toArray(),this._b=Array(this._visible).fill(0),this._z=Array(this._visible).fill(0),this._c=Array(this._hidden).fill(0));const r=i,l=this._h(i);let t=this._v(l,!0),e=this._h(t,!0);for(let h=0;h<this._k;h++)t=this._v(e,!0),e=this._h(t,!0);const s=this._s;if(!this._fixSigma)for(let h=0;h<this._w.length;h++){let _=0,n=0;for(let o=0;o<i.length;o++){_+=(r[o][h]-this._b[h])**2/2,n+=(t[o][h]-this._b[h])**2/2;for(let f=0;f<this._w[0].length;f++)_-=l[o][f]*this._w[h][f]*r[o][h],n-=e[o][f]*this._w[h][f]*t[o][h]}this._z[h]+=this._lr*(_-n)/s[h]/i.length}for(let h=0;h<this._w.length;h++)for(let _=0;_<this._w[h].length;_++){let n=0;for(let o=0;o<i.length;o++)n+=r[o][h]*l[o][_]-t[o][h]*e[o][_];this._w[h][_]+=this._lr*n/s[h]/i.length}for(let h=0;h<this._w.length;h++){let _=0;for(let n=0;n<i.length;n++)_+=r[n][h]-t[n][h];this._b[h]+=this._lr*_/s[h]/i.length}for(let h=0;h<this._w[0].length;h++){let _=0;for(let n=0;n<i.length;n++)_+=l[n][h]-e[n][h];this._c[h]+=this._lr*_/i.length}}energy(i,r){let l=0;for(let t=0;t<this._w.length;t++)for(let e=0;e<this._w[t].length;e++)l-=this._w[t][e]*i[t]*r[e]/Math.exp(this._z[t]);for(let t=0;t<this._w.length;t++)l+=(i[t]-this._b[t])**2/(2*Math.exp(this._z[t]));for(let t=0;t<this._w[0].length;t++)l-=this._c[t]*r[t];return l}predict(i){const r=this._h(i);return this._v(r,!0)}}
