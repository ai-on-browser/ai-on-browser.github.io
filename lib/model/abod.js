export default class ABOD{constructor(t=1/0){this._k=t}_distance(t,e){return Math.sqrt(t.reduce(((t,r,o)=>t+(r-e[o])**2),0))}predict(t){const e=t.length,r=[];for(let o=0;o<e;o++){r[o]=[],r[o][o]={d:0,i:o};for(let e=0;e<o;e++){const s=this._distance(t[o],t[e]);r[o][e]={d:s,i:e},r[e][o]={d:s,i:o}}}for(let t=0;t<e;t++)r[t].sort(((t,e)=>t.d-e.d));const o=[];for(let s=0;s<e;s++){const c=[],n=[];for(let o=1;o<e&&o<=this._k;o++){const e=r[s][o].i,l=t[s].map(((r,o)=>t[e][o]-r));c.push(l),n.push(Math.sqrt(l.reduce(((t,e)=>t+e**2),0)))}let l=0,i=0,d=0;for(let t=0;t<c.length;t++)for(let e=0;e<c.length;e++){if(t===e)continue;const r=c[t].reduce(((t,r,o)=>t+r*c[e][o]),0),o=n[t]*n[e],s=r/o**3;l+=s**2,i+=s,d+=1/o}o[s]=l/d-(i/d)**2}return o}}export class LBABOD{constructor(t=10,e=5){this._k=t,this._l=e}_distance(t,e){return Math.sqrt(t.reduce(((t,r,o)=>t+(r-e[o])**2),0))}predict(t){const e=t.length,r=[],o=[],s=[];for(let c=0;c<e;c++){r[c]=[],r[c][c]={d:0,i:c};for(let e=0;e<c;e++){const o=this._distance(t[c],t[e]);r[c][e]={d:o,i:e},r[e][c]={d:o,i:c}}o[c]=[],s[c]=[];for(let r=0;r<e;r++)s[c][r]=t[c].map(((e,o)=>t[r][o]-e)),o[c][r]=Math.sqrt(s[c][r].reduce(((t,e)=>t+e**2),0))}for(let t=0;t<e;t++)r[t].sort(((t,e)=>t.d-e.d));const c=[];for(let t=0;t<e;t++){const n=[],l=[];for(let c=1;c<e&&c<=this._k;c++){const e=r[t][c].i;n.push(s[t][e]),l.push(o[t][e])}const i=0,d=2*o[t].reduce(((t,e)=>t+(0===e?0:1/e**3)),0)-2*l.reduce(((t,e)=>t+(0===e?0:1/e**3)),0),f=2*o[t].reduce(((t,e)=>t+(0===e?0:1/e)),0);let h=i,u=d;for(let t=0;t<n.length;t++)for(let e=0;e<n.length;e++){if(t===e)continue;const r=n[t].reduce(((t,r,o)=>t+r*n[e][o]),0)/(l[t]*l[e])**3;h+=r**2,u+=r}c[t]=[h/f-(u/f)**2,t]}c.sort(((t,e)=>t[0]-e[0]));const n=[];for(let t=0;t<e;t++){const r=c[t][1];let l=0,i=0,d=0;for(let t=0;t<e;t++)if(t!==r)for(let c=0;c<e;c++){if(c===r)continue;const e=s[r][t].reduce(((t,e,o)=>t+e*s[r][c][o]),0),n=e/(o[r][t]*o[r][c])**3;l+=n**2,i+=n,d+=1/(o[r][t]*o[r][c])}const f=l/d-(i/d)**2;if(n.length<this._l)n.push([f,r]);else{if(!(f<n[n.length-1][0]))break;n.pop(),n.push([f,r]),n.sort(((t,e)=>t[0]-e[0]))}}const l=Array(e).fill(!1);for(let t=0;t<n.length;t++)l[n[t][1]]=!0;return l}}