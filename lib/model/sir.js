import Matrix from"../util/matrix.js";export default class SlicedInverseRegression{constructor(t){this._s=t}predict(t,s,r=0){const o=(t=Matrix.fromArray(t)).rows;t.sub(t.mean(0));const e=t.cov().sqrt().inv();t.div(e);const i=s.map(((t,s)=>[t,s]));i.sort(((t,s)=>t[0]-s[0]));const c=i[0][0],a=(i[o-1][0]-c)/this._s,n=[];for(let t=0;t<this._s;t++)n.push(c+a*t);n.push(1/0);const d=Matrix.zeros(t.cols,t.cols);for(let s=0;s<this._s;s++){const r=Matrix.zeros(1,t.cols);for(let e=0;e<o;e++)n[s]<=i[e][0]&&i[e][0]<n[s+1]&&r.add(t.row(i[e][1]));d.add(r.tDot(r))}d.div(o);let l=d.eigenVectors();return l=e.dot(Matrix.resize(l,l.rows,r)),t.dot(l).toArray()}}