import Matrix from"../util/matrix.js";export default class SlicedInverseRegression{constructor(s){this._s=s}predict(s,t,r=0){const o=(s=Matrix.fromArray(s)).rows;s.sub(s.mean(0));const e=s.cov().sqrt().inv();s.div(e);const i=t.map(((s,t)=>[s,t]));i.sort(((s,t)=>s[0]-t[0]));const c=i[0][0],a=(i[o-1][0]-c)/this._s,n=[];for(let s=0;s<this._s;s++)n.push(c+a*s);n.push(1/0);const d=Matrix.zeros(s.cols,s.cols);for(let t=0;t<this._s;t++){const r=Matrix.zeros(1,s.cols);for(let e=0;e<o;e++)n[t]<=i[e][0]&&i[e][0]<n[t+1]&&r.add(s.row(i[e][1]));d.add(r.tDot(r))}d.div(o);let l=d.eigenVectors();return l=e.dot(l.resize(l.rows,r)),s.dot(l).toArray()}}