import{Matrix}from"../util/math.js";const shuffle=function(t){for(let s=t.length-1;s>0;s--){let i=Math.floor(Math.random()*(s+1));[t[s],t[i]]=[t[i],t[s]]}return t};export default class UMAP{constructor(t,s,i=10,h=.1){this._x=Matrix.fromArray(t).toArray(),this._rd=s,this._n=i,this._min_dist=h,this._neg_samples=10,this._init()}_d(t,s){return Math.sqrt(t.reduce(((t,i,h)=>t+(i-s[h])**2),0))}_init(){const t=this._x.length,s=[];for(let i=0;i<t;i++){const h=this._x[i],_=this._x.map(((t,s)=>[this._d(h,t),s]));_.sort(((t,s)=>t[0]-s[0])),_.splice(0,1),_.splice(this._n);const e=_[0][0],a=Math.log2(this._n);let r=1,o=0,l=1/0;for(;;){const t=_.reduce(((t,s)=>t+Math.exp(-(s[0]-e)/r)),0);if(Math.abs(t-a)<1e-8)break;t<a?(o=r,l===1/0?r*=2:r=(r+l)/2):(l=r,r=(r+o)/2)}s[i]=Array(t).fill(0);for(let t=0;t<_.length;t++){const a=(this._d(h,this._x[_[t][1]])-e)/r;s[i][_[t][1]]=Math.exp(-a)}}for(let i=0;i<t;i++)for(let h=i+1;h<t;h++)s[i][h]=s[h][i]=s[i][h]+s[i][h]-s[i][h]*s[h][i];this._w=Matrix.fromArray(s);let i=this._w.sum(1).value;const h=Matrix.diag(i);h.sub(this._w),i=i.map((t=>Math.sqrt(t)));for(let s=0;s<t;s++)for(let _=0;_<t;_++)h.divAt(s,_,Math.sqrt(i[s]*i[_]));const _=h.eigenVectors();_.flip(1),this._y=_.slice(1,this._rd+1,1).toArray(),this._alpha=1,this._epoch=0,this._a=1,this._b=1;const e=[];for(let s=0;s<t;s++)for(let i=0;i<t;i++)e.push(this._d(this._y[s],this._y[i]));const a=e.map((t=>t<=this._min_dist?1:Math.exp(this._min_dist-t)));for(let t=0;t<1e3;t++){const t=e.map((t=>1/(1+this._a*t**(2*this._b))));let s=0,h=0;for(let _=0;_<i.length;_++)e[_]>0&&(s+=(t[_]-a[_])*-(t[_]**2)*e[_]**(2*this._b),h+=(t[_]-a[_])*-(t[_]**2)*this._a*e[_]**(2*this._b)*Math.log(e[_]**2));if(this._a-=.1*s,this._b-=.1*h,s**2+h**2<1e-12)break}}fit(){const t=this._x.length;for(let s=0;s<t;s++)for(let i=s+1;i<t;i++){const h=this._w.at(s,i);if(Math.random()>h)continue;const _=this._d(this._y[s],this._y[i]),e=-2*this._a*this._b*_**(2*(this._b-1))/(1+_**2)*h;this._y[s]=this._y[s].map(((t,s)=>t+this._alpha*e*(t-this._y[i][s])));const a=[];for(let i=0;i<t;i++)s!==i&&0===this._w.at(s,i)&&a.push(i);shuffle(a);for(let t=0;t<Math.min(this._neg_samples,a.length);t++){const i=this._d(this._y[s],this._y[t])**2,h=2*this._b/((1e-4+i)*(1+this._a*i**this._b))*(1-this._w.at(s,t));this._y[s]=this._y[s].map(((s,i)=>s+this._alpha*h*(s-this._y[t][i])))}}return this._epoch++,this._alpha*=.99,this._y}}