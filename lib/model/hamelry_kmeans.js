var u=Object.defineProperty;var a=(f,e)=>u(f,"name",{value:e,configurable:!0});export default class x{static{a(this,"HamelryKMeans")}constructor(e){this._k=e,this._c=null,this._d=(n,_)=>Math.sqrt(n.reduce((i,s,l)=>i+(s-_[l])**2,0))}get centroids(){return this._c}init(e){this._x=e;const n=this._x.length,_=[];for(let i=0;i<this._k;i++)_.push(Math.floor(Math.random()*(n-i)));for(let i=_.length-1;i>=0;i--)for(let s=_.length-1;s>i;s--)_[i]<=_[s]&&_[s]++;this._c=_.map(i=>this._x[i]),this._q=Array(this._k).fill(0),this._cdash=[];for(let i=0;i<this._k;i++)this._cdash[i]=Array(this._x[0].length).fill(0);this._a=[],this._u=[],this._l=[];for(let i=0;i<n;i++){this._u[i]=1/0,this._a[i]=0,this._l[i]=1/0;for(let s=0;s<this._k;s++){const l=this._d(this._x[i],this._c[s]);l<this._u[i]?(this._l[i]=this._u[i],this._u[i]=l,this._a[i]=s):l[s]<this._l[i]&&(this._l[i]=l)}this._q[this._a[i]]++;for(let s=0;s<this._x[i].length;s++)this._cdash[this._a[i]][s]+=this._x[i][s]}}fit(){const e=this._x.length,n=[];for(let t=0;t<this._k;t++){n[t]=[],n[t][t]=0;for(let h=0;h<t;h++)n[t][h]=n[h][t]=this._d(this._c[t],this._c[h])}const _=Array(this._k).fill(1/0);for(let t=0;t<this._k;t++)for(let h=0;h<this._k;h++)t!==h&&n[t][h]<_[t]&&(_[t]=n[t][h]);for(let t=0;t<e;t++){const h=Math.max(_[this._a[t]]/2,this._l[t]);if(this._u[t]<=h||(this._u[t]=this._d(this._x[t],this._c[this._a[t]]),this._u[t]<=h))continue;const o=this._a[t];this._u[t]=1/0,this._a[t]=0,this._l[t]=1/0;for(let c=0;c<this._k;c++){const r=this._d(this._x[t],this._c[c]);r<this._u[t]?(this._l[t]=this._u[t],this._u[t]=r,this._a[t]=c):r[c]<this._l[t]&&(this._l[t]=r)}if(o!==this._a[t]){this._q[o]--,this._q[this._a[t]]++;for(let c=0;c<this._x[t].length;c++)this._cdash[o][c]-=this._x[t][c],this._cdash[this._a[t]][c]+=this._x[t][c]}}const i=[];for(let t=0;t<this._k;t++){const h=this._c[t];this._c[t]=this._cdash[t].map(o=>o/this._q[t]),i[t]=this._d(h,this._c[t])}const s=i.map((t,h)=>[t,h]);s.sort((t,h)=>h[0]-t[0]);const l=s[0][1],d=s[0][2];for(let t=0;t<e;t++)this._u[t]+=i[this._a[t]],this._l[t]-=i[this._a[t]===l?d:l]}predict(e){const n=[];for(let _=0;_<e.length;_++){let i=1/0;n[_]=-1;for(let s=0;s<this._c.length;s++){const l=this._d(e[_],this._c[s]);l<i&&(i=l,n[_]=s)}}return n}}
