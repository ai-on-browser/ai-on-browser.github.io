export default class DIANA{constructor(){}get size(){return this._s.length}init(t){this._x=t,this._s=[[]];for(let e=0;e<t.length;e++)this._s[0][e]=e}_distance(t,e){return Math.sqrt(t.reduce(((t,s,n)=>t+(s-e[n])**2),0))}_v(t,e,s){let n=0;for(let h=0;h<e.length;h++)e[h]!==t&&s.indexOf(e[h])<0&&(n+=this._distance(this._x[t],this._x[e[h]]));if(n/=e.length-s.length-1,s.length>0){let e=0;for(let n=0;n<s.length;n++)e+=this._distance(this._x[t],this._x[s[n]]);n-=e/s.length}return n}fit(){const t=[];for(const e of this._s){if(1===e.length){t.push(e);continue}const s=[];for(;s.length<e.length;){let t=-1/0,n=-1;for(let h=0;h<e.length;h++){if(s.indexOf(e[h])>=0)continue;const i=this._v(e[h],e,s);t<i&&(t=i,n=e[h])}if(t<=0)break;s.push(n)}if(0===s.length||s.length===e.length)t.push(e);else{const n=e.filter((t=>s.indexOf(t)<0));t.push(s,n)}}this._s=t}predict(){const t=[];for(let e=0;e<this._x.length;e++)for(let s=0;s<this._s.length;s++)if(this._s[s].indexOf(e)>=0){t.push(s);break}return t}}