export default class Banditron{constructor(s=.5){this._gamma=s}init(s,t){this._x=s,this._y=t,this._classes=[...new Set(t)],this._w=[];for(let s=0;s<this._classes.length;s++)this._w[s]=Array(this._x[0].length).fill(0);this._b=Array(this._classes.length).fill(0)}fit(){for(let s=0;s<this._x.length;s++){const t=this._classes.indexOf(this._y[s]);let e=-1/0,h=-1;for(let t=0;t<this._classes.length;t++){const i=this._w[t].reduce(((t,e,h)=>t+e*this._x[s][h]),this._b[t]);i>e&&(e=i,h=t)}let i=Math.random(),l=-1;const _=[];for(let s=0;s<this._classes.length;s++)_[s]=this._gamma/this._classes.length+(t===s?1-this._gamma:0),i-=_[s],l<0&&i<0&&(l=s);for(let e=0;e<this._classes.length;e++){const i=(t===l&&l===e?1/_[e]:0)-(h===e?1:0);if(0!==i){for(let t=0;t<this._x[s].length;t++)this._w[e][t]+=this._x[s][t]*i;this._b[e]+=i}}}}predict(s){const t=[];for(let e=0;e<s.length;e++){let h=-1/0,i=-1;for(let t=0;t<this._classes.length;t++){const l=this._w[t].reduce(((t,h,i)=>t+h*s[e][i]),this._b[t]);l>h&&(h=l,i=t)}t[e]=this._classes[i]}return t}}