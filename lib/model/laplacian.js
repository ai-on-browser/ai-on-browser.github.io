export default class Laplacian{constructor(t,e=4){this._threshold=t,this._n=e}_convolute(t,e){const l=[];for(let h=0;h<t.length;h++){l[h]=[];for(let n=0;n<t[h].length;n++){let o=0;for(let l=0;l<e.length;l++){let r=h+l-Math.floor(e.length/2);r=Math.max(0,Math.min(t.length-1,r));for(let h=0;h<e[l].length;h++){let a=n+h-Math.floor(e[l].length/2);a=Math.max(0,Math.min(t[r].length-1,a)),o+=t[r][a]*e[l][h]}}l[h][n]=o}}return l}predict(t){for(let e=0;e<t.length;e++)for(let l=0;l<t[e].length;l++){let h=t[e][l].reduce(((t,e)=>t+e),0)/t[e][l].length;t[e][l]=h}let e=null;e=4===this._n?[[0,1,0],[1,-4,1],[0,1,0]]:[[1,1,1],[1,-8,1],[1,1,1]];const l=this._convolute(t,e),h=[];for(let t=0;t<l.length;t++){h[t]=[];for(let e=0;e<l[t].length;e++)h[t][e]=l[t][e]>this._threshold}return h}}