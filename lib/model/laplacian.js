export default class Laplacian{constructor(t,l=4){this._threshold=t,this._n=l}_convolute(t,l){const e=[];for(let h=0;h<t.length;h++){e[h]=[];for(let n=0;n<t[h].length;n++){let o=0;for(let e=0;e<l.length;e++){let r=h+e-Math.floor(l.length/2);r=Math.max(0,Math.min(t.length-1,r));for(let h=0;h<l[e].length;h++){let a=n+h-Math.floor(l[e].length/2);a=Math.max(0,Math.min(t[r].length-1,a)),o+=t[r][a]*l[e][h]}}e[h][n]=o}}return e}predict(t){let l=null;l=4===this._n?[[0,1,0],[1,-4,1],[0,1,0]]:[[1,1,1],[1,-8,1],[1,1,1]];const e=this._convolute(t,l),h=[];for(let t=0;t<e.length;t++){h[t]=[];for(let l=0;l<e[t].length;l++)h[t][l]=e[t][l]>this._threshold}return h}}