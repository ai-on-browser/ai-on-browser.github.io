import{Matrix}from"../util/math.js";export class Histogram{constructor(t={}){this._config=t}fit(t){let r=this._config.range;if(!r){let s=this._config.domain;if(!s){s=t[0].map((t=>[t,t]));for(let r=0;r<t.length;r++)for(let a=0;a<t[r].length;a++)s[a][0]=Math.min(t[r][a],s[a][0]),s[a][1]=Math.max(t[r][a],s[a][1])}let a=this._config.size,e=this._config.count;if(!a&&!e){const r=this._config.binMethod||"scott",s=Matrix.fromArray(t),o=t.length;if("fd"===r){const t=s.quantile(.75,0),r=s.quantile(.25,0);t.sub(r),a=t.value.map((t=>2*t/Math.cbrt(o)))}else"scott"===r?a=s.std(0).value.map((t=>t*Math.cbrt(24*Math.sqrt(Math.PI)/o))):"rice"===r?e=2*Math.cbrt(o):"sturges"===r?e=Math.log2(o)+1:"doane"===r?(s.sub(s.mean(0)),s.div(s.std(0)),s.map((t=>t**3)),e=1+Math.log2(o)+Math.log2(1+Math.abs(s.mean())/Math.sqrt(6*(o-1)/((o+1)*(o+3))))):"sqrt"===r&&(e=Math.sqrt(o))}this._size=a,this._count=e,a?(Array.isArray(a)||(a=Array(s.length).fill(a)),r=s.map(((t,r)=>{const[s,e]=t,o=[s];let h=0;for(;s+ ++h*a[r]<e+a[r];)o.push(s+h*a[r]);return o}))):(e=e||10,Array.isArray(e)||(e=Array(s.length).fill(e)),r=s.map(((t,r)=>{const[s,a]=t,o=(a-s)/e[r],h=[s];for(let t=1;t<e[r];t++)h.push(s+t*o);return h.push(a),h})))}this._ranges=r;const s=[],a=[];let e=[[s,a]];for(let t=0;t<r.length;t++){const s=[],a=r[t].length;for(const[o,h]of e)for(let e=0;e<a-1;e++)t===r.length-1?(o.push(0),h.push([])):s.push([o[e]=[],h[e]=[]]);e=s}for(const e of t){let t=s,o=a;for(let s=0;s<e.length;s++){let a=0;for(;a<r[s].length-1&&!(e[s]<=r[s][a+1]);a++);s===e.length-1?(t[a]++,o[a].push(e)):(t=t[a],o=o[a])}}return this._config.returndata?[s,a]:s}}