var M=Object.defineProperty;var p=(m,h)=>M(m,"name",{value:h,configurable:!0});import d from"../util/matrix.js";export default class b{static{p(this,"Histogram")}constructor(h={}){this._config=h}fit(h){let a=this._config.range;if(!a){let n=this._config.domain;if(!n){n=h[0].map(e=>[e,e]);for(let e=0;e<h.length;e++)for(let t=0;t<h[e].length;t++)n[t][0]=Math.min(h[e][t],n[t][0]),n[t][1]=Math.max(h[e][t],n[t][1])}let r=this._config.size,i=this._config.count;if(!r&&!i){const e=this._config.binMethod||"scott",t=d.fromArray(h),s=h.length;if(e==="fd"){const o=t.quantile(.75,0),u=t.quantile(.25,0);o.sub(u),r=o.value.map(g=>2*g/Math.cbrt(s))}else e==="scott"?r=t.std(0).value.map(o=>o*Math.cbrt(24*Math.sqrt(Math.PI)/s)):e==="rice"?i=2*Math.cbrt(s):e==="sturges"?i=Math.log2(s)+1:e==="doane"?(t.sub(t.mean(0)),t.div(t.std(0)),t.map(o=>o**3),i=1+Math.log2(s)+Math.log2(1+Math.abs(t.mean())/Math.sqrt(6*(s-1)/((s+1)*(s+3))))):e==="sqrt"&&(i=Math.sqrt(s))}this._size=r,this._count=i,r?(Array.isArray(r)||(r=Array(n.length).fill(r)),a=n.map((e,t)=>{const[s,o]=e,u=[s];let g=0;for(;s+ ++g*r[t]<o+r[t];)u.push(s+g*r[t]);return u})):(i=i||10,Array.isArray(i)||(i=Array(n.length).fill(i)),a=n.map((e,t)=>{const[s,o]=e,u=(o-s)/i[t],g=[s];for(let _=1;_<i[t];_++)g.push(s+_*u);return g.push(o),g}))}this._ranges=a;const f=[],l=[];let c=[[f,l]];for(let n=0;n<this._ranges.length;n++){const r=[],i=this._ranges[n].length;for(const[e,t]of c)for(let s=0;s<i-1;s++)n===this._ranges.length-1?(e.push(0),t.push([])):r.push([e[s]=[],t[s]=[]]);c=r}for(const n of h){let r=f,i=l;for(let e=0;e<n.length;e++){let t=0;for(;t<this._ranges[e].length-1&&!(n[e]<=this._ranges[e][t+1]);t++);e===n.length-1?(r[t]++,i[t].push(n)):(r=r[t],i=i[t])}}return this._separate_datas=l,this._dense=f,f}predict(h){return h.map(a=>{let f=this._dense;for(let l=0;l<a.length;l++){if(a[l]<this._ranges[l][0]||this._ranges[l][this._ranges[l].length-1]<a[l])return 0;let c=0;for(;c<this._ranges[l].length-1&&!(a[l]<=this._ranges[l][c+1]);c++);f=f[c]}return f})}}
