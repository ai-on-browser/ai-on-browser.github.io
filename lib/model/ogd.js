import Matrix from"../util/matrix.js";export default class OnlineGradientDescent{constructor(t=1,s="zero_one"){this._c=t,this._w=null,"zero_one"===s&&(this._loss=(t,s)=>t===s?0:1)}init(t,s){this._x=Matrix.fromArray(t),this._shift=this._x.mean(0),this._x.sub(this._shift),this._y=s,this._w=Matrix.zeros(this._x.cols,1),this._t=1}update(t,s){const i=Math.sign(this._w.tDot(t).toScaler());if(0===this._loss(s,i))return;const r=this._c/Math.sqrt(this._t);this._w.add(Matrix.mult(t,r*s)),this._t++}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){const s=Matrix.fromArray(t);s.sub(this._shift);return s.dot(this._w).value.map((t=>t<=0?-1:1))}}