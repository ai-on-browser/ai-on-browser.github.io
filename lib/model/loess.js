import Matrix from"../util/matrix.js";export default class LOESS{constructor(){this._k=(t,s)=>{const r=Matrix.sub(t,s);r.map((t=>t*t));const i=r.sum(1);return i.map((t=>t<=1?(1-Math.sqrt(t)**3)**3:0)),i}}fit(t,s){this._x=Matrix.fromArray(t),this._b=Matrix.resize(this._x,this._x.rows,2*this._x.cols+1,1),this._b.set(0,this._x.cols,Matrix.map(this._x,(t=>t**2))),this._y=Matrix.fromArray(s)}predict(t){t=Matrix.fromArray(t);const s=[];for(let r=0;r<t.rows;r++){const i=t.row(r),o=this._k(this._x,i),a=Matrix.mult(this._b,o),x=a.tDot(this._b).solve(a.tDot(this._y)),h=Matrix.resize(i,i.rows,2*i.cols+1,1);h.set(0,i.cols,Matrix.map(i,(t=>t**2))),s.push(h.dot(x).value)}return s}}