var d=Object.defineProperty;var o=(h,s)=>d(h,"name",{value:s,configurable:!0});import a from"../util/matrix.js";const c=o(function(h){for(let s=h.length-1;s>0;s--){let e=Math.floor(Math.random()*(s+1));[h[s],h[e]]=[h[e],h[s]]}return h},"shuffle");export default class x{static{o(this,"MCD")}constructor(s,e){this._datas=s,this._h=this._datas.length*e,this._ext_idx=this._datas.map((i,l)=>l),c(this._ext_idx),this._ext_idx=this._ext_idx.slice(0,this._h),this._Ri=null,this._mean=null,this._std=null}fit(){const s=this._datas.length,e=this._datas[0].length;let i=new a(s,e,this._datas);i=i.row(this._ext_idx),this._mean=i.mean(0),i.sub(this._mean),this._std=i.std(0),i.div(this._std);const l=i.cov();this._Ri=l.inv();const _=this.predict(this._datas).map((t,n)=>[n,t]);_.sort((t,n)=>t[1]-n[1]),this._ext_idx=_.map(t=>t[0]).slice(0,this._h)}predict(s){const e=[];for(let i=0;i<s.length;i++){let l=0;const _=[];for(let t=0;t<s[i].length;t++)_[t]=(s[i][t]-this._mean.value[t])/this._std.value[t];for(let t=0;t<_.length;t++)for(let n=0;n<_.length;n++)l+=_[n]*this._Ri.at(n,t)*_[t];e.push(l/2)}return e}}
