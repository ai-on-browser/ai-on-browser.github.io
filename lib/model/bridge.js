var C=Object.defineProperty;var B=(I,n)=>C(I,"name",{value:n,configurable:!0});import{KMeanspp as E}from"./kmeans.js";import D from"./dbscan.js";export default class G{static{B(this,"BRIDGE")}constructor(n,l,s){this._k=n,this._e_core=l,this._e_den=s}_distance(n,l){return Math.sqrt(n.reduce((s,r,h)=>s+(r-l[h])**2,0))}predict(n){const l=n.length,s=n[0].length,r=new E;for(let t=0;t<this._k;t++)r.add(n);for(;r.fit(n)>0;);const h=[],_=Array(this._k).fill(1/0);for(let t=0;t<this._k;t++){for(let e=t+1;e<this._k;e++){const c=this._distance(r.centroids[t],r.centroids[e])/2;c<_[t]&&(_[t]=c),c<_[e]&&(_[e]=c)}h[t]=Array.from({length:s},()=>[1/0,-1/0])}const P=r.predict(n),x=Array(this._k).fill(0),w=Array.from({length:this._k},()=>[]),u=Array.from({length:this._k},()=>[]),b=[],m=Array.from({length:s},()=>[1/0,-1/0]);for(let t=0;t<l;t++){const e=P[t];x[e]++;for(let i=0;i<s;i++)h[e][i][0]=Math.min(h[e][i][0],n[t][i]),h[e][i][1]=Math.max(h[e][i][1],n[t][i]),m[i][0]=Math.min(m[i][0],n[t][i]),m[i][1]=Math.max(m[i][1],n[t][i]);const c=this._distance(r.centroids[e],n[t]);c<_[e]-this._e_core?w[e].push(t):c<_[e]+this._e_core?u[e].push(t):b.push(t)}const p=Array(l).fill(-1);let d=1;s===1?d=2*this._e_den:s===2?d=Math.PI*this._e_den**2:s===3?d=4/3*Math.PI*this._e_den**3:d=(2*this._e_den)**s;let k=0;for(let t=0;t<this._k;t++){const e=h[t].reduce((o,j)=>o*(j[1]-j[0]),1),c=d/e*x[t],i=new D(this._e_den,c),g=w[t].concat(u[t]),M=i.predict(g.map(o=>n[o]));let A=k;for(let o=0;o<g.length;o++)M[o]>=0&&(p[g[o]]=k+M[o],A=Math.max(A,k+M[o]));k=A+1}const q=m.reduce((t,e)=>t*(e[1]-e[0]),1),v=new D(this._e_den,d/q*l),f=u.reduce((t,e)=>t.concat(e),b),a=v.predict(f.map(t=>n[t])),y=[];for(let t=0;t<f.length;t++)p[f[t]]>=0&&a[t]>=0&&y[a[t]]==null&&(y[a[t]]=p[f[t]]);for(let t=0;t<f.length;t++)p[f[t]]<0&&a[t]>=0&&(p[f[t]]=y[a[t]]);return this._clusters=p}}
