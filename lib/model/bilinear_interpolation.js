export default class BilinearInterpolation{fit(t,i){this._v=t,this._grids=i}predict(t){const i=(t,i)=>{let s=-1;for(let r=0;r<t.length&&i>=t[r];s=r++);return s===t.length-1?s-1:s};return t.map((t=>{const s=i(this._grids[0],t[0]);if(s<0||this._grids[0].length-1<s)return null;const r=s+1,h=this._grids[0][s],n=this._grids[0][r],e=i(this._grids[1],t[1]);if(e<0||this._grids[1].length-1<e)return null;const l=e+1,_=this._grids[1][e],g=this._grids[1][l];return(this._v[s][e]*(n-t[0])*(g-t[1])+this._v[r][e]*(t[0]-h)*(g-t[1])+this._v[s][l]*(n-t[0])*(t[1]-_)+this._v[r][l]*(t[0]-h)*(t[1]-_))/((n-h)*(g-_))}))}}