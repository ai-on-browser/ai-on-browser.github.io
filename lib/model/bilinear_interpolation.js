var u=Object.defineProperty;var d=(c,h)=>u(c,"name",{value:h,configurable:!0});export default class x{static{d(this,"BilinearInterpolation")}fit(h,e){this._v=h,this._grids=e}predict(h){const e=d((i,s)=>{let t=-1;for(let n=0;n<i.length&&s>=i[n];t=n++);return t===i.length-1?t-1:t},"maxLowIndex");return h.map(i=>{const s=e(this._grids[0],i[0]);if(s<0||this._grids[0].length-1<s)return null;const t=s+1,n=this._grids[0][s],l=this._grids[0][t],r=e(this._grids[1],i[1]);if(r<0||this._grids[1].length-1<r)return null;const o=r+1,_=this._grids[1][r],g=this._grids[1][o];return(this._v[s][r]*(l-i[0])*(g-i[1])+this._v[t][r]*(i[0]-n)*(g-i[1])+this._v[s][o]*(l-i[0])*(i[1]-_)+this._v[t][o]*(i[0]-n)*(i[1]-_))/((l-n)*(g-_))})}}
