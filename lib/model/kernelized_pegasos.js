var o=Object.defineProperty;var n=(l,h)=>o(l,"name",{value:h,configurable:!0});export default class a{static{n(this,"KernelizedPegasos")}constructor(h,i="gaussian"){if(this._r=h,this._itr=100,typeof i=="function")this._kernel=i;else switch(i){case"gaussian":this._s=1,this._kernel=(e,t)=>Math.exp(-(e.reduce((s,_,r)=>s+(_-t[r])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(e,t)=>(1+e.reduce((s,_,r)=>s+_*t[r]))**this._d;break}}init(h,i){this._x=h,this._y=i,this._t=0,this._a=Array(this._x.length).fill(0);const e=this._x.length;this._k=[];for(let t=0;t<e;t++){this._k[t]=[],this._k[t][t]=this._kernel(this._x[t],this._x[t]);for(let s=0;s<t;s++)this._k[t][s]=this._k[s][t]=this._kernel(this._x[t],this._x[s])}}fit(){for(let h=0;h<this._itr;h++){const i=Math.floor(Math.random()*this._x.length);this._t++;const e=1/(this._r*this._t);let t=0;for(let s=0;s<this._x.length;s++)t+=this._a[s]*this._y[s]*this._k[i][s];this._y[i]*e*t<1&&this._a[i]++}}predict(h){const i=[];for(let e=0;e<h.length;e++){let t=0;for(let s=0;s<this._x.length;s++)t+=this._a[s]*this._y[s]*this._kernel(h[e],this._x[s]);i.push(t<=0?-1:1)}return i}}
