var r=Object.defineProperty;var n=(e,h)=>r(e,"name",{value:h,configurable:!0});const l={gaussian:n(({s:e=1})=>(h,s)=>Math.exp(-(h.reduce((_,t,i)=>_+(t-s[i])**2,0)**2)/e**2),"gaussian"),polynomial:n(({d:e=2})=>(h,s)=>(1+h.reduce((_,t,i)=>_+t*s[i]))**e,"polynomial")};export default class o{static{n(this,"KernelizedPegasos")}constructor(h,s="gaussian"){this._r=h,this._itr=100,typeof s=="function"?this._kernel=s:(typeof s=="string"&&(s={name:s}),this._kernel=l[s.name](s))}init(h,s){this._x=h,this._y=s,this._t=0,this._a=Array(this._x.length).fill(0);const _=this._x.length;this._k=[];for(let t=0;t<_;t++){this._k[t]=[],this._k[t][t]=this._kernel(this._x[t],this._x[t]);for(let i=0;i<t;i++)this._k[t][i]=this._k[i][t]=this._kernel(this._x[t],this._x[i])}}fit(){for(let h=0;h<this._itr;h++){const s=Math.floor(Math.random()*this._x.length);this._t++;const _=1/(this._r*this._t);let t=0;for(let i=0;i<this._x.length;i++)t+=this._a[i]*this._y[i]*this._k[s][i];this._y[s]*_*t<1&&this._a[s]++}}predict(h){const s=[];for(let _=0;_<h.length;_++){let t=0;for(let i=0;i<this._x.length;i++)t+=this._a[i]*this._y[i]*this._kernel(h[_],this._x[i]);s.push(t<=0?-1:1)}return s}}
