var d=Object.defineProperty;var p=(u,i)=>d(u,"name",{value:i,configurable:!0});import _ from"../util/matrix.js";export default class l{static{p(this,"DiffusionMap")}constructor(i,e,t="gaussian"){this._t=i,this._rd=e,typeof t=="function"?this._k=t:(t==="gaussian"||t.name==="gaussian")&&(this._k=(c,a)=>Math.exp(-c.reduce((h,n,r)=>h+(n-a[r])**2,0)/2))}predict(i){const e=i.length,t=new _(e,e);for(let s=0;s<e;s++)for(let o=s;o<e;o++){const f=this._k(i[s],i[o]);t.set(s,o,f),t.set(o,s,f)}t.div(t.sum(1));const c=t.power(this._t),[a,h]=c.eigen(),n=h.slice(0,this._rd,1),r=new _(1,this._rd,a.slice(0,this._rd));return r.map(s=>s**this._t),n.mult(r),n.toArray()}}
