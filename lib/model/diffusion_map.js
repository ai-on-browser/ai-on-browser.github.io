var m=Object.defineProperty;var l=(r,i)=>m(r,"name",{value:i,configurable:!0});import g from"../util/matrix.js";export default class _{static{l(this,"DiffusionMap")}constructor(i,t="gaussian"){this._t=i,typeof t=="function"?this._k=t:(t==="gaussian"||t.name==="gaussian")&&(this._k=(o,e)=>Math.exp(-o.reduce((c,a,u)=>c+(a-e[u])**2,0)/2))}predict(i,t){const o=i.length,e=new g(o,o);for(let s=0;s<o;s++)for(let n=s;n<o;n++){const h=this._k(i[s],i[n]);e.set(s,n,h),e.set(n,s,h)}e.div(e.sum(1));const c=e.power(this._t),[a,u]=c.eigen(),f=u.slice(0,t,1),p=new g(1,t,a.slice(0,t));return p.map(s=>s**this._t),f.mult(p),f.toArray()}}
