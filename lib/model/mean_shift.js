export default class MeanShift{constructor(t){this._x=null,this._centroids=null,this._h=t,this._categories=0}get categories(){return this._categories}get h(){return this._h}_distance(t,e){return Math.sqrt(t.reduce(((t,i,s)=>t+(i-e[s])**2),0))}init(t){this._x=t,this._centroids=this._x.map((t=>[].concat(t)))}predict(t){this._categories=0;const e=[];for(let i=0;i<this._centroids.length;i++){let s=i;for(let r=0;r<i;r++)if(this._distance(this._centroids[i],this._centroids[r])<t){s=e[r];break}s===i&&this._categories++,e[i]=s}return e}fit(){if(0===this._centroids.length||0===this._x.length)return;this._centroids[0].length,Math.PI,this._h;const t=(t,e)=>t.reduce(((t,i,s)=>t+((i-e[s])/this._h)**2),0)<=1?1:0,e=t=>{let e=0,i=Array(this._x[0].length).fill(0);for(let s=0;s<this._x.length;s++)if(t[s]){e+=t[s];for(let e=0;e<i.length;e++)i[e]+=this._x[s][e]*t[s]}return i.map((t=>t/e))},i=i=>{let s=this._x.map((e=>t(i,e)));return((t,i)=>e(i).map(((e,i)=>e-t[i])))(i,s)};let s=!1;return this._centroids=this._centroids.map(((t,e)=>{let r=t;const h=i(t),n=t.map(((t,e)=>t+h[e]));return s||=r.some(((t,e)=>t!==n[e])),n})),s}}