export default class IsotonicRegression{constructor(){}fit(t,e){const s=t.map(((t,s)=>[t,e[s]]));s.sort(((t,e)=>t[0]-e[0])),this._x=t=s.map((t=>t[0])),e=s.map((t=>t[1]));const r=[0];let o=0;for(let t=1;t<=e.length;t++)if(r[t]=r[t-1]+e[t-1],o<=e[t-1])o=e[t-1];else{let e=0;for(let s=t-2;s>=1;s--)if(r[s]-r[s-1]<=(r[t]-r[s])/(t-s)){e=s,o=(r[t]-r[s])/(t-s);break}for(let s=e+1;s<t;s++)r[s]=r[e]+o*(s-e)}this._g=r.slice(1).map(((t,e)=>t-r[e])),this._x=t}predict(t){const e=this._x.length;return t.map((t=>{let s=e;for(;s>0&&!(t>this._x[s]);s--);return this._g[s]}))}}