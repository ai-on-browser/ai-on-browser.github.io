var f=Object.defineProperty;var a=(n,o)=>f(n,"name",{value:o,configurable:!0});export default class h{static{a(this,"IsotonicRegression")}constructor(){}fit(o,r){const l=o.map((t,i)=>[t,r[i]]);l.sort((t,i)=>t[0]-i[0]),this._x=o=l.map(t=>t[0]),r=l.map(t=>t[1]);const e=[0];let c=0;for(let t=1;t<=r.length;t++)if(e[t]=e[t-1]+r[t-1],c<=r[t-1])c=r[t-1];else{let i=0;for(let s=t-2;s>=1;s--)if(e[s]-e[s-1]<=(e[t]-e[s])/(t-s)){i=s,c=(e[t]-e[s])/(t-s);break}for(let s=i+1;s<t;s++)e[s]=e[i]+c*(s-i)}this._g=e.slice(1).map((t,i)=>t-e[i]),this._x=o}predict(o){const r=this._x.length;return o.map(l=>{let e=r;for(;e>0&&!(l>this._x[e]);e--);return this._g[e]})}}
