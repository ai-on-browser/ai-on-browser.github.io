export default class PercentileAnormaly{constructor(t,e="data"){this._percentile=t,this._distribution=e,this._thresholds=[]}fit(t){this._thresholds=[];const e=t,r=e.length;if(r<=0)return;const s=e[0].length;if(1===r){for(let t=0;t<s;t++)this._thresholds[t]=[e[0][t],e[0][t]];return}if(0===this._percentile){for(let t=0;t<s;t++)this._thresholds[t]=[-1/0,1/0];return}if(.5===this._percentile){for(let t=0;t<s;t++)this._thresholds[t]=[0,0];return}const h=[];if("data"===this._distribution){const t=(r-1)*this._percentile,i=[Math.floor(t),t-Math.floor(t),Math.ceil(t)],l=r-1-t,o=[Math.floor(l),l-Math.floor(l),Math.ceil(l)];for(let t=0;t<s;t++){const r=e.map((e=>e[t]));r.sort(((t,e)=>t-e)),h.push(r),this._thresholds[t]=[r[i[0]]+(r[i[2]]-r[i[0]])*i[1],r[o[0]]+(r[o[2]]-r[o[0]])*o[1]]}}else if("normal"===this._distribution){const t=[0,.004,.008,.012,.016,.0199,.0239,.0279,.0319,.0359,.0398,.0438,.0478,.0517,.0557,.0596,.0636,.0675,.0714,.0753,.0793,.0832,.0871,.091,.0948,.0987,.1026,.1064,.1103,.1141,.1179,.1217,.1255,.1293,.1331,.1368,.1406,.1443,.148,.1517,.1554,.1591,.1628,.1664,.17,.1736,.1772,.1808,.1844,.1879,.1915,.195,.1985,.2019,.2054,.2088,.2123,.2157,.219,.2224,.2257,.2291,.2324,.2357,.2389,.2422,.2454,.2486,.2517,.2549,.258,.2611,.2642,.2673,.2704,.2734,.2764,.2794,.2823,.2852,.2881,.291,.2939,.2967,.2995,.3023,.3051,.3078,.3106,.3133,.3159,.3186,.3212,.3238,.3264,.3289,.3315,.334,.3365,.3389,.3413,.3438,.3461,.3485,.3508,.3531,.3554,.3577,.3599,.3621,.3643,.3665,.3686,.3708,.3729,.3749,.377,.379,.381,.383,.3849,.3869,.3888,.3907,.3925,.3944,.3962,.398,.3997,.4015,.4032,.4049,.4066,.4082,.4099,.4115,.4131,.4147,.4162,.4177,.4192,.4207,.4222,.4236,.4251,.4265,.4279,.4292,.4306,.4319,.4332,.4345,.4357,.437,.4382,.4394,.4406,.4418,.4429,.4441,.4452,.4463,.4474,.4484,.4495,.4505,.4515,.4525,.4535,.4545,.4554,.4564,.4573,.4582,.4591,.4599,.4608,.4616,.4625,.4633,.4641,.4649,.4656,.4664,.4671,.4678,.4686,.4693,.4699,.4706,.4713,.4719,.4726,.4732,.4738,.4744,.475,.4756,.4761,.4767,.4772,.4778,.4783,.4788,.4793,.4798,.4803,.4808,.4812,.4817,.4821,.4826,.483,.4834,.4838,.4842,.4846,.485,.4854,.4857,.4861,.4864,.4868,.4871,.4875,.4878,.4881,.4884,.4887,.489,.4893,.4896,.4898,.4901,.4904,.4906,.4909,.4911,.4913,.4916,.4918,.492,.4922,.4925,.4927,.4929,.4931,.4932,.4934,.4936,.4938,.494,.4941,.4943,.4945,.4946,.4948,.4949,.4951,.4952,.4953,.4955,.4956,.4957,.4959,.496,.4961,.4962,.4963,.4964,.4965,.4966,.4967,.4968,.4969,.497,.4971,.4972,.4973,.4974,.4974,.4975,.4976,.4977,.4977,.4978,.4979,.4979,.498,.4981,.4981,.4982,.4982,.4983,.4984,.4984,.4985,.4985,.4986,.4986,.4987,.4987,.4987,.4988,.4988,.4989,.4989,.4989,.499,.499];let h=.5;const i=.5-this._percentile;for(let e=0;e<t.length-1;e++)if(t[e]<=i&&i<t[e+1]){h=.01*e;break}for(let t=0;t<s;t++){const s=e.reduce(((e,r)=>e+r[t]),0)/r,i=e.reduce(((e,r)=>e+(r[t]-s)**2),0)/r,l=Math.sqrt(i);this._thresholds[t]=[s-l*h,s+l*h]}}}predict(t){if(0===this._percentile)return Array(t.length).fill(!1);if(.5===this._percentile)return Array(t.length).fill(!0);const e=[];for(let r=0;r<t.length;r++){let s=!1;for(let e=0;e<this._thresholds.length;e++)s|=t[r][e]<this._thresholds[e][0]||this._thresholds[e][1]<t[r][e];e.push(s)}return e}}