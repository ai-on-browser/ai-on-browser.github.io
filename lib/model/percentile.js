export default class PercentileAnormaly{constructor(percentile,distribution="data"){this._percentile=percentile;this._distribution=distribution;this._thresholds=[]}fit(data){this._thresholds=[];const x=data;const n=x.length;if(n<=0){return}const dim=x[0].length;if(n===1){for(let d=0;d<dim;d++){this._thresholds[d]=[x[0][d],x[0][d]]}return}if(this._percentile===0){for(let d=0;d<dim;d++){this._thresholds[d]=[-Infinity,Infinity]}return}else if(this._percentile===.5){for(let d=0;d<dim;d++){this._thresholds[d]=[0,0]}return}const sortDatas=[];if(this._distribution==="data"){const lidx=(n-1)*this._percentile;const li=[Math.floor(lidx),lidx-Math.floor(lidx),Math.ceil(lidx)];const uidx=n-1-lidx;const ui=[Math.floor(uidx),uidx-Math.floor(uidx),Math.ceil(uidx)];for(let d=0;d<dim;d++){const sd=x.map((v=>v[d]));sd.sort(((a,b)=>a-b));sortDatas.push(sd);this._thresholds[d]=[sd[li[0]]+(sd[li[2]]-sd[li[0]])*li[1],sd[ui[0]]+(sd[ui[2]]-sd[ui[0]])*ui[1]]}}else if(this._distribution==="normal"){const ifnorm=[0,.004,.008,.012,.016,.0199,.0239,.0279,.0319,.0359,.0398,.0438,.0478,.0517,.0557,.0596,.0636,.0675,.0714,.0753,.0793,.0832,.0871,.091,.0948,.0987,.1026,.1064,.1103,.1141,.1179,.1217,.1255,.1293,.1331,.1368,.1406,.1443,.148,.1517,.1554,.1591,.1628,.1664,.17,.1736,.1772,.1808,.1844,.1879,.1915,.195,.1985,.2019,.2054,.2088,.2123,.2157,.219,.2224,.2257,.2291,.2324,.2357,.2389,.2422,.2454,.2486,.2517,.2549,.258,.2611,.2642,.2673,.2704,.2734,.2764,.2794,.2823,.2852,.2881,.291,.2939,.2967,.2995,.3023,.3051,.3078,.3106,.3133,.3159,.3186,.3212,.3238,.3264,.3289,.3315,.334,.3365,.3389,.3413,.3438,.3461,.3485,.3508,.3531,.3554,.3577,.3599,.3621,.3643,.3665,.3686,.3708,.3729,.3749,.377,.379,.381,.383,.3849,.3869,.3888,.3907,.3925,.3944,.3962,.398,.3997,.4015,.4032,.4049,.4066,.4082,.4099,.4115,.4131,.4147,.4162,.4177,.4192,.4207,.4222,.4236,.4251,.4265,.4279,.4292,.4306,.4319,.4332,.4345,.4357,.437,.4382,.4394,.4406,.4418,.4429,.4441,.4452,.4463,.4474,.4484,.4495,.4505,.4515,.4525,.4535,.4545,.4554,.4564,.4573,.4582,.4591,.4599,.4608,.4616,.4625,.4633,.4641,.4649,.4656,.4664,.4671,.4678,.4686,.4693,.4699,.4706,.4713,.4719,.4726,.4732,.4738,.4744,.475,.4756,.4761,.4767,.4772,.4778,.4783,.4788,.4793,.4798,.4803,.4808,.4812,.4817,.4821,.4826,.483,.4834,.4838,.4842,.4846,.485,.4854,.4857,.4861,.4864,.4868,.4871,.4875,.4878,.4881,.4884,.4887,.489,.4893,.4896,.4898,.4901,.4904,.4906,.4909,.4911,.4913,.4916,.4918,.492,.4922,.4925,.4927,.4929,.4931,.4932,.4934,.4936,.4938,.494,.4941,.4943,.4945,.4946,.4948,.4949,.4951,.4952,.4953,.4955,.4956,.4957,.4959,.496,.4961,.4962,.4963,.4964,.4965,.4966,.4967,.4968,.4969,.497,.4971,.4972,.4973,.4974,.4974,.4975,.4976,.4977,.4977,.4978,.4979,.4979,.498,.4981,.4981,.4982,.4982,.4983,.4984,.4984,.4985,.4985,.4986,.4986,.4987,.4987,.4987,.4988,.4988,.4989,.4989,.4989,.499,.499];let u=.5;const p=.5-this._percentile;for(let i=0;i<ifnorm.length-1;i++){if(ifnorm[i]<=p&&p<ifnorm[i+1]){u=i*.01;break}}for(let d=0;d<dim;d++){const mean=x.reduce(((m,v)=>m+v[d]),0)/n;const variance=x.reduce(((s,v)=>s+(v[d]-mean)**2),0)/n;const std=Math.sqrt(variance);this._thresholds[d]=[mean-std*u,mean+std*u]}}}predict(x){if(this._percentile===0){return Array(x.length).fill(false)}else if(this._percentile===.5){return Array(x.length).fill(true)}const outliers=[];for(let i=0;i<x.length;i++){let f=false;for(let d=0;d<this._thresholds.length;d++){f|=x[i][d]<this._thresholds[d][0]||this._thresholds[d][1]<x[i][d]}outliers.push(f)}return outliers}}