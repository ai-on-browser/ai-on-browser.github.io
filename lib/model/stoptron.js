var c=Object.defineProperty;var r=(_,i)=>c(_,"name",{value:i,configurable:!0});export default class l{static{r(this,"Stoptron")}constructor(i=10,s="gaussian"){if(this._n=i,typeof s=="function")this._kernel=s;else switch(typeof s=="string"&&(s={name:s}),s.name){case"gaussian":this._s=s.s??1,this._kernel=(t,h)=>Math.exp(-(t.reduce((n,e,o)=>n+(e-h[o])**2,0)**2)/this._s**2);break;case"polynomial":this._d=s.d??2,this._kernel=(t,h)=>(1+t.reduce((n,e,o)=>n+e*h[o]))**this._d;break}this._i=[]}fit(i,s){for(let t=0;t<i.length;t++){if(this._i.length>this._n)return;let h=0;for(let e=0;e<this._i.length;e++){const o=this._i[e];h+=o.y*this._kernel(i[t],o.x)}(h<0?-1:1)!==s[t]&&this._i.push({x:i[t],y:s[t]})}}predict(i){const s=[];for(let t=0;t<i.length;t++){let h=0;for(let n=0;n<this._i.length;n++){const e=this._i[n];h+=e.y*this._kernel(i[t],e.x)}s[t]=h<0?-1:1}return s}}
