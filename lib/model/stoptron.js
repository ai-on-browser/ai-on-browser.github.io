export default class Stoptron{constructor(t=10,e="gaussian"){if(this._n=t,"function"==typeof e)this._kernel=e;else switch(e){case"gaussian":this._s=1,this._kernel=(t,e)=>Math.exp(-(t.reduce(((t,s,i)=>t+(s-e[i])**2),0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(t,e)=>(1+t.reduce(((t,s,i)=>t+s*e[i])))**this._d}this._i=[]}fit(t,e){for(let s=0;s<t.length;s++){if(this._i.length>this._n)return;let i=0;for(let e=0;e<this._i.length;e++){const h=this._i[e];i+=h.y*this._kernel(t[s],h.x)}(i<0?-1:1)!==e[s]&&this._i.push({x:t[s],y:e[s]})}}predict(t){const e=[];for(let s=0;s<t.length;s++){let i=0;for(let e=0;e<this._i.length;e++){const h=this._i[e];i+=h.y*this._kernel(t[s],h.x)}e[s]=i<0?-1:1}return e}}