var o=Object.defineProperty;var _=(l,s)=>o(l,"name",{value:s,configurable:!0});export default class c{static{_(this,"Stoptron")}constructor(s=10,e="gaussian"){if(this._n=s,typeof e=="function")this._kernel=e;else switch(e){case"gaussian":this._s=1,this._kernel=(t,h)=>Math.exp(-(t.reduce((n,i,r)=>n+(i-h[r])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(t,h)=>(1+t.reduce((n,i,r)=>n+i*h[r]))**this._d;break}this._i=[]}fit(s,e){for(let t=0;t<s.length;t++){if(this._i.length>this._n)return;let h=0;for(let i=0;i<this._i.length;i++){const r=this._i[i];h+=r.y*this._kernel(s[t],r.x)}(h<0?-1:1)!==e[t]&&this._i.push({x:s[t],y:e[t]})}}predict(s){const e=[];for(let t=0;t<s.length;t++){let h=0;for(let n=0;n<this._i.length;n++){const i=this._i[n];h+=i.y*this._kernel(s[t],i.x)}e[t]=h<0?-1:1}return e}}
