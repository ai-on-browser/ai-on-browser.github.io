import Tensor from"../util/tensor.js";import Matrix from"../util/matrix.js";import Histogram from"./histogram.js";export default class PolynomialHistogram{constructor(t=2,s=.1){this._p=t,this._a=[],this._h=s,this._d=null}fit(t){this._a=[];const s=new Histogram({size:this._h}),r=Tensor.fromArray(s.fit(t)),i=s._separate_datas;if(this._ranges=s._ranges,this._d=this._ranges.length,0===this._p)return r.map((s=>s/t.length)),void(this._a[0]=r);if(r.forEach(((t,s)=>{if(0===t)return;const r=s.reduce(((t,s)=>t[s]),i),h=this._ranges.map(((t,r)=>(t[s[r]+1]+t[s[r]])/2));for(let t=0;t<r.length;t++)for(let s=0;s<r[t].length;s++)r[t][s]-=h[s]})),1===this._p)this._a[0]=r.copy(),this._a[0].map((s=>s/(t.length*this._h**this._d))),this._a[1]=this._a[0].copy(),this._a[1].map(((t,s)=>{if(0===t)return Matrix.zeros(1,this._d);const r=s.reduce(((t,s)=>t[s]),i),h=Matrix.fromArray(r).mean(0);return h.mult(12*t/this._h**2),h}));else if(2===this._p){const s=r.copy();s.map(((t,s)=>{if(0===t)return Matrix.zeros(this._d,this._d);const r=s.reduce(((t,s)=>t[s]),i),h=Matrix.fromArray(r),a=h.tDot(h);return a.div(h.rows),a})),this._a[0]=r.copy(),this._a[0].map(((r,i)=>((4+5*this._d)/4-15/this._h**2*s.at(i).trace())*r/t.length/this._h**this._d)),this._a[1]=r.copy(),this._a[1].map(((s,r)=>{if(0===s)return Matrix.zeros(1,this._d);const h=r.reduce(((t,s)=>t[s]),i),a=Matrix.fromArray(h).mean(0);return a.mult(12*s/(this._h**(this._d+2)*t.length)),a})),this._a[2]=s,this._a[2].map(((s,i)=>{for(let t=0;t<s.rows;t++)for(let r=0;r<s.cols;r++)t===r?s.set(t,r,180/this._h**2*s.at(t,r)-15):s.multAt(t,r,144/(2*this._h**2));return s.mult(r.at(i)/t.length/this._h**(this._d+2)),s}))}}predict(t){const s=[];for(let r=0;r<t.length;r++){const i=[];for(let s=0;s<this._ranges.length;s++){let h=-1;for(;h<this._ranges[s].length-1&&!(t[r][s]<=this._ranges[s][h+1]);h++);i.push(h)}if(i.some(((t,s)=>t<0||t>=this._ranges[s].length-1))){s.push(0);continue}const h=this._a.map((t=>t.at(i))),a=Matrix.fromArray(t[r]),e=Matrix.fromArray(this._ranges.map(((t,s)=>(t[i[s]+1]+t[i[s]])/2)));a.sub(e),0===this._p?s.push(h[0]):1===this._p?s.push(Math.max(0,h[0]+h[1].dot(a).toScaler())):2===this._p&&s.push(Math.max(0,h[0]+h[1].dot(a).toScaler()+a.tDot(h[2]).dot(a).toScaler()))}return s}}