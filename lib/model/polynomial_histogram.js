var d=Object.defineProperty;var m=(f,a)=>d(f,"name",{value:a,configurable:!0});import u from"../util/tensor.js";import l from"../util/matrix.js";import g from"./histogram.js";export default class y{static{m(this,"PolynomialHistogram")}constructor(a=2,n=.1){this._p=a,this._a=[],this._h=n,this._d=null}fit(a){this._a=[];const n=new g({size:this._h}),o=u.fromArray(n.fit(a)),_=n._separate_datas;if(this._ranges=n._ranges,this._d=this._ranges.length,this._p===0){o.map(r=>r/a.length),this._a[0]=o;return}if(o.forEach((r,i)=>{if(r===0)return;const h=i.reduce((t,e)=>t[e],_),s=this._ranges.map((t,e)=>(t[i[e]+1]+t[i[e]])/2);for(let t=0;t<h.length;t++)for(let e=0;e<h[t].length;e++)h[t][e]-=s[e]}),this._p===1)this._a[0]=o.copy(),this._a[0].map(r=>r/(a.length*this._h**this._d)),this._a[1]=this._a[0].copy(),this._a[1].map((r,i)=>{if(r===0)return l.zeros(1,this._d);const h=i.reduce((t,e)=>t[e],_),s=l.fromArray(h).mean(0);return s.mult(12*r/this._h**2),s});else if(this._p===2){const r=o.copy();r.map((i,h)=>{if(i===0)return l.zeros(this._d,this._d);const s=h.reduce((c,p)=>c[p],_),t=l.fromArray(s),e=t.tDot(t);return e.div(t.rows),e}),this._a[0]=o.copy(),this._a[0].map((i,h)=>((4+5*this._d)/4-15/this._h**2*r.at(h).trace())*i/a.length/this._h**this._d),this._a[1]=o.copy(),this._a[1].map((i,h)=>{if(i===0)return l.zeros(1,this._d);const s=h.reduce((e,c)=>e[c],_),t=l.fromArray(s).mean(0);return t.mult(12*i/(this._h**(this._d+2)*a.length)),t}),this._a[2]=r,this._a[2].map((i,h)=>{for(let s=0;s<i.rows;s++)for(let t=0;t<i.cols;t++)s===t?i.set(s,t,180/this._h**2*i.at(s,t)-15):i.multAt(s,t,144/(2*this._h**2));return i.mult(o.at(h)/a.length/this._h**(this._d+2)),i})}}predict(a){const n=[];for(let o=0;o<a.length;o++){const _=[];for(let s=0;s<this._ranges.length;s++){let t=-1;for(;t<this._ranges[s].length-1&&!(a[o][s]<=this._ranges[s][t+1]);t++);_.push(t)}if(_.some((s,t)=>s<0||s>=this._ranges[t].length-1)){n.push(0);continue}const r=this._a.map(s=>s.at(_)),i=l.fromArray(a[o]),h=l.fromArray(this._ranges.map((s,t)=>(s[_[t]+1]+s[_[t]])/2));i.sub(h),this._p===0?n.push(r[0]):this._p===1?n.push(Math.max(0,r[0]+r[1].dot(i).toScaler())):this._p===2&&n.push(Math.max(0,r[0]+r[1].dot(i).toScaler()+i.tDot(r[2]).dot(i).toScaler()))}return n}}
