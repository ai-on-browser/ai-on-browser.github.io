export default class KernelKMeans{constructor(t=3){this._k=t,this._kernel=(t,e)=>Math.exp(-(t.reduce(((t,l,s)=>t+(l-e[s])**2),1)**2))}_distance(t,e){const l=this._x.filter(((t,l)=>this._labels[l]===e));let s=this._kernel(t,t);for(let e=0;e<l.length;e++)s-=2*this._kernel(t,l[e])/l.length;for(let t=0;t<l.length;t++){s+=this._kernel(l[t],l[t])/l.length**2;for(let e=0;e<t;e++)s+=2*this._kernel(l[t],l[e])/l.length**2}return s}init(t){this._x=t,this._labels=[];for(let t=0;t<this._x.length;t++)this._labels[t]=Math.floor(Math.random()*this._k)}predict(){return this._labels}fit(){this._labels=this._x.map((t=>{let e=1/0,l=-1;for(let s=0;s<this._k;s++){const h=this._distance(t,s);h<e&&(e=h,l=s)}return l}))}}