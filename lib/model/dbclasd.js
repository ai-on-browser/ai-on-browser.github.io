const logGamma=t=>{let e=0;if(Number.isInteger(t))for(let o=2;o<t;o++)e+=Math.log(o);else{const o=t-.5;e=Math.log(Math.sqrt(Math.PI))-Math.log(2)*o;for(let t=2*o-1;t>0;t-=2)e+=Math.log(t)}return e},gammaStar=(t,e)=>{let o=0;const r=Math.log(e);for(let e=0;e<1e3;e++){const l=Math.exp(e*r-logGamma(t+e+1));if(o+=l,l/o<1e-12)break}return Math.exp(-e)*o},regularizedIncompleteGamma=(t,e)=>gammaStar(t,e)*e**t,cumChiSquared=(t,e)=>regularizedIncompleteGamma(e/2,t/2);export default class DBCLASD{constructor(){this._d=(t,e)=>Math.sqrt(t.reduce(((t,o,r)=>t+(o-e[r])**2),0))}predict(t){const e=t.length,o=Array(e);for(let r=0;r<e;r++){o[r]=[],o[r][r]=0;for(let e=0;e<r;e++){const l=this._d(t[r],t[e]);o[r][e]=o[e][r]=l}}const r=[];for(let t=0;t<e;t++)r[t]=o[t].map(((t,e)=>({d:t,i:e}))),r[t].sort(((t,e)=>t.d-e.d));const l=Array(e).fill(!1),a=[];for(let n=0;n<e;n++){if(l[n])continue;l[n]=!0;let h=[];const s=r[n].slice(0,30).map((t=>t.i));let f=0;for(let t=0;t<s.length;t++){l[s[t]]=!0;for(let e=0;e<t;e++)f=Math.max(f,o[s[t]][s[e]])}for(const t of s)for(let o=1;o<e&&!(r[t][o].d>f);o++){const e=r[t][o].i;l[e]||(l[e]=!0,h.push(e))}let c=!0;for(;c;){c=!1;const a=[];for(;h.length>0;){const n=h.shift(),i=[...s,n],g=[];for(let t=0;t<i.length;t++){g[t]=1/0;for(let e=0;e<i.length;e++)t!==e&&(g[t]=Math.min(g[t],o[i[t]][i[e]]))}const m=this._area(t,i,g);if(this._chiSquareTest(t,m,g)){s.push(n);for(let t=0;t<s.length;t++)f=Math.max(f,o[s[t]][n]);for(let t=1;t<e&&!(r[n][t].d>f);t++){const e=r[n][t].i;l[e]||(l[e]=!0,h.push(e))}c=!0}else a.push(n)}h=a}a.push(s);for(const t of h)l[t]=!1}a.reverse();const n=Array(e).fill(-1);for(let t=0;t<a.length;t++)for(const e of a[t])n[e]=t;return n}_chiSquareTest(t,e,o){const r=t[0].length,l=o.concat();l.sort(((t,e)=>t-e));let a=0;for(let t=0;t<l.length;t++){const o=Math.exp(r*Math.log(l[t])-logGamma(r/2+1)+r/2*Math.log(Math.PI)),n=1-(1-Math.max(0,Math.min(1,o/e)))**(t+1);a+=((t+1)/l.length-n)**2/n}return cumChiSquared(a,l.length)<.95}_area(t,e,o){const r=o.reduce(((t,e)=>Math.max(t,e)),0),l=t[0].length,a=Array(l).fill(1/0),n=Array(l).fill(-1/0);for(let o=0;o<e.length;o++)for(let r=0;r<l;r++)a[r]=Math.min(a[r],t[e[o]][r]),n[r]=Math.max(n[r],t[e[o]][r]);const h=[],s=[];let f=[h];for(let t=0;t<l;t++){s[t]=[];const e=Math.ceil((n[t]-a[t])/r),o=(e*r-(n[t]-a[t]))/2+a[t];for(let l=0;l<=e;l++)s[t][l]=o+l*r;const h=[];for(let o=0;o<f.length;o++)for(let r=0;r<=e;r++)t===l-1?f[o].push(0):h.push(f[o][r]=[]);f=h}let c=0;for(const o of e){let e=h;for(let r=0;r<l;r++){let a=0;for(;a<s[r].length-1&&!(s[r][a]<=t[o][r]&&t[o][r]<s[r][a+1]);a++);r===l-1?(0===e[a]&&c++,e[a]++):e=e[a]}}return c*r**l}}