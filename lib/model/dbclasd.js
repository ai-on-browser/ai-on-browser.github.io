var b=Object.defineProperty;var y=(p,n)=>b(p,"name",{value:n,configurable:!0});const I=y(p=>{let n=0;if(Number.isInteger(p))for(let o=2;o<p;o++)n+=Math.log(o);else{const o=p-.5;n=Math.log(Math.sqrt(Math.PI))-Math.log(2)*o;for(let h=2*o-1;h>0;h-=2)n+=Math.log(h)}return n},"logGamma"),v=y((p,n)=>{let o=0;const h=Math.log(n);for(let i=0;i<1e3;i++){const r=Math.exp(i*h-I(p+i+1));if(o+=r,r/o<1e-12)break}return Math.exp(-n)*o},"gammaStar"),A=y((p,n)=>v(p,n)*n**p,"regularizedIncompleteGamma"),_=y((p,n)=>A(n/2,p/2),"cumChiSquared");export default class q{static{y(this,"DBCLASD")}constructor(){this._d=(n,o)=>Math.sqrt(n.reduce((h,i,r)=>h+(i-o[r])**2,0))}predict(n){const o=n.length,h=Array(o);for(let e=0;e<o;e++){h[e]=[],h[e][e]=0;for(let l=0;l<e;l++){const f=this._d(n[e],n[l]);h[e][l]=h[l][e]=f}}const i=[];for(let e=0;e<o;e++)i[e]=h[e].map((l,f)=>({d:l,i:f})),i[e].sort((l,f)=>l.d-f.d);const r=Array(o).fill(!1),M=[];for(let e=0;e<o;e++){if(r[e])continue;r[e]=!0;let l=[];const f=i[e].slice(0,30).map(t=>t.i);let d=0;for(let t=0;t<f.length;t++){r[f[t]]=!0;for(let s=0;s<t;s++)d=Math.max(d,h[f[t]][f[s]])}for(const t of f)for(let s=1;s<o&&!(i[t][s].d>d);s++){const a=i[t][s].i;r[a]||(r[a]=!0,l.push(a))}let c=!0;for(;c;){c=!1;const t=[];for(;l.length>0;){const s=l.shift(),a=[...f,s],m=[];for(let u=0;u<a.length;u++){m[u]=1/0;for(let x=0;x<a.length;x++)u!==x&&(m[u]=Math.min(m[u],h[a[u]][a[x]]))}const k=this._area(n,a,m);if(this._chiSquareTest(n,k,m)){f.push(s);for(let u=0;u<f.length;u++)d=Math.max(d,h[f[u]][s]);for(let u=1;u<o&&!(i[s][u].d>d);u++){const x=i[s][u].i;r[x]||(r[x]=!0,l.push(x))}c=!0}else t.push(s)}l=t}M.push(f);for(const t of l)r[t]=!1}M.reverse();const g=Array(o).fill(-1);for(let e=0;e<M.length;e++)for(const l of M[e])g[l]=e;return g}_chiSquareTest(n,o,h){const i=n[0].length,r=h.concat();r.sort((g,e)=>g-e);let M=0;for(let g=0;g<r.length;g++){const e=Math.exp(i*Math.log(r[g])-I(i/2+1)+i/2*Math.log(Math.PI)),l=1-(1-Math.max(0,Math.min(1,e/o)))**(g+1);M+=((g+1)/r.length-l)**2/l}return _(M,r.length)<.95}_area(n,o,h){const i=h.reduce((c,t)=>Math.max(c,t),0),r=n[0].length,M=Array(r).fill(1/0),g=Array(r).fill(-1/0);for(let c=0;c<o.length;c++)for(let t=0;t<r;t++)M[t]=Math.min(M[t],n[o[c]][t]),g[t]=Math.max(g[t],n[o[c]][t]);const e=[],l=[];let f=[e];for(let c=0;c<r;c++){l[c]=[];const t=Math.ceil((g[c]-M[c])/i),s=(t*i-(g[c]-M[c]))/2+M[c];for(let m=0;m<=t;m++)l[c][m]=s+m*i;const a=[];for(let m=0;m<f.length;m++)for(let k=0;k<=t;k++)c===r-1?f[m].push(0):a.push(f[m][k]=[]);f=a}let d=0;for(const c of o){let t=e;for(let s=0;s<r;s++){let a=0;for(;a<l[s].length-1&&!(l[s][a]<=n[c][s]&&n[c][s]<l[s][a+1]);a++);s===r-1?(t[a]===0&&d++,t[a]++):t=t[a]}}return d*i**r}}
