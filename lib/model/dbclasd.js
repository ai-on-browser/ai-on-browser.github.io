const logGamma=t=>{let e=0;if(Number.isInteger(t))for(let r=2;r<t;r++)e+=Math.log(r);else{const r=t-.5;e=Math.log(Math.sqrt(Math.PI))-Math.log(2)*r;for(let t=2*r-1;t>0;t-=2)e+=Math.log(t)}return e},gammaStar=(t,e)=>{let r=0;const o=Math.log(e);for(let e=0;e<1e3;e++){const l=Math.exp(e*o-logGamma(t+e+1));if(r+=l,l/r<1e-12)break}return Math.exp(-e)*r},regularizedIncompleteGamma=(t,e)=>gammaStar(t,e)*e**t,cumChiSquared=(t,e)=>{return gammaStar(r=e/2,o=t/2)*o**r;var s,f};export default class DBCLASD{constructor(){this._d=(t,e)=>Math.sqrt(t.reduce(((t,r,o)=>t+(r-e[o])**2),0))}predict(t){const e=t.length,r=Array(e);for(let o=0;o<e;o++){r[o]=[],r[o][o]=0;for(let e=0;e<o;e++){const l=this._d(t[o],t[e]);r[o][e]=r[e][o]=l}}const o=[];for(let t=0;t<e;t++)o[t]=r[t].map(((t,e)=>({d:t,i:e}))),o[t].sort(((t,e)=>t.d-e.d));const l=Array(e).fill(!1),a=[];for(let n=0;n<e;n++){if(l[n])continue;l[n]=!0;let h=[];const s=o[n].slice(0,30).map((t=>t.i));let f=0;for(let t=0;t<s.length;t++){l[s[t]]=!0;for(let e=0;e<t;e++)f=Math.max(f,r[s[t]][s[e]])}for(const t of s)for(let r=1;r<e&&!(o[t][r].d>f);r++){const e=o[t][r].i;l[e]||(l[e]=!0,h.push(e))}let c=!0;for(;c;){c=!1;const a=[];for(;h.length>0;){const n=h.shift(),g=[...s,n],i=[];for(let t=0;t<g.length;t++){i[t]=1/0;for(let e=0;e<g.length;e++)t!==e&&(i[t]=Math.min(i[t],r[g[t]][g[e]]))}const m=this._area(t,g,i);if(this._chiSquareTest(t,m,i)){s.push(n);for(let t=0;t<s.length;t++)f=Math.max(f,r[s[t]][n]);for(let t=1;t<e&&!(o[n][t].d>f);t++){const e=o[n][t].i;l[e]||(l[e]=!0,h.push(e))}c=!0}else a.push(n)}h=a}a.push(s);for(const t of h)l[t]=!1}a.reverse();const n=Array(e).fill(-1);for(let t=0;t<a.length;t++)for(const e of a[t])n[e]=t;return n}_chiSquareTest(t,e,r){const o=t[0].length,l=r.concat();l.sort(((t,e)=>t-e));let a=0;for(let t=0;t<l.length;t++){const r=Math.exp(o*Math.log(l[t])-logGamma(o/2+1)+o/2*Math.log(Math.PI)),n=1-(1-Math.max(0,Math.min(1,r/e)))**(t+1);a+=((t+1)/l.length-n)**2/n}return n=a,h=l.length,gammaStar(s=h/2,f=n/2)*f**s<.95;var n,h,s,f}_area(t,e,r){const o=r.reduce(((t,e)=>Math.max(t,e)),0),l=t[0].length,a=Array(l).fill(1/0),n=Array(l).fill(-1/0);for(let r=0;r<e.length;r++)for(let o=0;o<l;o++)a[o]=Math.min(a[o],t[e[r]][o]),n[o]=Math.max(n[o],t[e[r]][o]);const h=[],s=[];let f=[h];for(let t=0;t<l;t++){s[t]=[];const e=Math.ceil((n[t]-a[t])/o),r=(e*o-(n[t]-a[t]))/2+a[t];for(let l=0;l<=e;l++)s[t][l]=r+l*o;const h=[];for(let r=0;r<f.length;r++)for(let o=0;o<=e;o++)t===l-1?f[r].push(0):h.push(f[r][o]=[]);f=h}let c=0;for(const r of e){let e=h;for(let o=0;o<l;o++){let a=0;for(;a<s[o].length-1&&!(s[o][a]<=t[r][o]&&t[r][o]<s[o][a+1]);a++);o===l-1?(0===e[a]&&c++,e[a]++):e=e[a]}}return c*o**l}}