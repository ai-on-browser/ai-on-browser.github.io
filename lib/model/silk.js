var d=Object.defineProperty;var f=(p,i)=>d(p,"name",{value:i,configurable:!0});export class ILK{static{f(this,"ILK")}constructor(i=1,l=1,s=1,_="gaussian",t="hinge"){if(this._eta=i,this._lambda=l,this._c=s,typeof _=="function")this._kernel=_;else switch(_){case"gaussian":this._s=1,this._kernel=(n,e)=>Math.exp(-(n.reduce((h,a,r)=>h+(a-e[r])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(n,e)=>(1+n.reduce((h,a,r)=>h+a*e[r]))**this._d;break}if(t==="square")this._loss=(n,e,h)=>{const a=this._eta*this._lambda/(1+this._eta*this._lambda);return this._c*(1-a)*(h-(1-a)*n)/(1+this._c*(1-a)*e)};else if(t==="hinge")this._rho=1,this._loss=(n,e,h)=>{const a=this._eta*this._lambda/(1+this._eta*this._lambda),r=h*(this._rho-(1-a)*h*n)/e;return h*r<0?0:h*r>(1-a)*this._c?h*(1-a)*this._c:r};else{if(t==="graph")throw new Error("Not implemented.");t==="logistic"&&(this._loss=(n,e,h)=>{const a=f(c=>{const o=this._eta*this._lambda/(1+this._eta*this._lambda);return(1-o)*this._c*h/(1+Math.exp(h*(1-o)*n+c*h*e))-c},"fn");let r=[0,a(0)],u=[h*this._c,a(h*this._c)];for(;u[0]-r[0]>=1e-8;){const c=(u[0]+r[0])/2,o=a(c);if(o===0)return c;r[1]*o>0?r=[c,o]:u=[c,o]}return(u[0]+r[0])/2})}this._sv=[],this._a=[]}update(i,l){let s=0;for(let e=0;e<this._sv.length;e++)s+=this._a[e]*this._kernel(i,this._sv[e]);const _=this._kernel(i,i),t=this._loss(s,_,l),n=this._eta*this._lambda/(1+this._eta*this._lambda);for(let e=0;e<this._a.length;e++)this._a[e]*=1-n;t!==0&&(this._sv.push(i),this._a.push(t))}fit(i,l){for(let s=0;s<i.length;s++)this.update(i[s],l[s])}predict(i){const l=[];for(let s=0;s<i.length;s++){let _=0;for(let t=0;t<this._sv.length;t++)_+=this._a[t]*this._kernel(i[s],this._sv[t]);l[s]=_<0?-1:1}return l}}export class SILK extends ILK{static{f(this,"SILK")}constructor(i=1,l=1,s=1,_=10,t="gaussian",n="hinge"){super(i,l,s,t,n),this._w=_}update(i,l){if(super.update(i,l),this._sv.length>this._w){let s=1/0,_=-1;for(let t=0;t<this._sv.length;t++)Math.abs(this._a[t])<s&&(s=Math.abs(this._a[t]),_=t);this._a.splice(_,1),this._sv.splice(_,1)}}}
