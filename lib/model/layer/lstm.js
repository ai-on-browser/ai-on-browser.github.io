import Layer from"./base.js";import{Matrix,Tensor}from"../../util/math.js";export default class LSTMLayer extends Layer{constructor({size:t,return_sequences:i=!1,w_z:s=null,w_in:_=null,w_for:h=null,w_out:r=null,r_z:o=null,r_in:d=null,r_for:a=null,r_out:e=null,p_in:n=null,p_for:u=null,p_out:z=null,b_z:l=null,b_in:c=null,b_for:y=null,b_out:p=null,...f}){super(f),this._size=t,this._w_z=s?Matrix.fromArray(s):null,this._w_in=_?Matrix.fromArray(_):null,this._w_for=h?Matrix.fromArray(h):null,this._w_out=r?Matrix.fromArray(r):null,this._r_z=o?Matrix.fromArray(o):Matrix.randn(this._size,this._size),this._r_in=d?Matrix.fromArray(d):Matrix.randn(this._size,this._size),this._r_for=a?Matrix.fromArray(a):Matrix.randn(this._size,this._size),this._r_out=e?Matrix.fromArray(e):Matrix.randn(this._size,this._size),this._p_in=n?Matrix.fromArray(n):Matrix.zeros(1,this._size),this._p_for=u?Matrix.fromArray(u):Matrix.zeros(1,this._size),this._p_out=z?Matrix.fromArray(z):Matrix.zeros(1,this._size),this._b_z=l?Matrix.fromArray(l):Matrix.zeros(1,this._size),this._b_in=c?Matrix.fromArray(c):Matrix.zeros(1,this._size),this._b_for=y?Matrix.fromArray(y):Matrix.zeros(1,this._size),this._b_out=p?Matrix.fromArray(p):Matrix.zeros(1,this._size),this._c0=Matrix.zeros(1,this._size),this._y0=Matrix.zeros(1,this._size),this._return_sequences=i}_sigmoid(t){return t.copyMap((t=>1/(1+Math.exp(-t))))}_grad_sigmoid(t,i){return i.copyMap((t=>t*(1-t)))}_tanh(t){return t.copyMap(Math.tanh)}_grad_tanh(t){return t.copyMap((t=>1/Math.cosh(t)**2))}calc(t){t=t.transpose(1,0,2),this._x=[];for(let i=0;i<t.sizes[0];i++)this._x[i]=t.at(i).toMatrix();this._w_z||(this._w_z=Matrix.randn(this._x[0].cols,this._size)),this._w_in||(this._w_in=Matrix.randn(this._x[0].cols,this._size)),this._w_for||(this._w_for=Matrix.randn(this._x[0].cols,this._size)),this._w_out||(this._w_out=Matrix.randn(this._x[0].cols,this._size)),this._c=[],this._y=[],this._ob=[],this._o=[],this._fb=[],this._f=[],this._ib=[],this._i=[],this._zb=[],this._z=[];for(let t=0;t<this._x.length;t++){const i=0===t?this._y0:this._y[t-1],s=0===t?this._c0:this._c[t-1],_=this._x[t].dot(this._w_z);_.add(i.dot(this._r_z)),_.add(this._b_z),this._zb[t]=_;const h=this._tanh(_);this._z[t]=h;const r=this._x[t].dot(this._w_in);r.add(i.dot(this._r_in)),r.add(this._p_in.copyMult(s)),r.add(this._b_in),this._ib[t]=r;const o=this._sigmoid(r);this._i[t]=o;const d=this._x[t].dot(this._w_for);d.add(i.dot(this._r_for)),d.add(this._p_for.copyMult(s)),d.add(this._b_for),this._fb[t]=d;const a=this._sigmoid(d);this._f[t]=a,this._c[t]=o.copyMult(h),this._c[t].add(a.copyMult(s));const e=this._x[t].dot(this._w_out);e.add(i.dot(this._r_out)),e.add(this._p_out.copyMult(this._c[t])),e.add(this._b_out),this._ob[t]=e;const n=this._sigmoid(e);this._o[t]=n,this._y[t]=this._tanh(this._c[t]),this._y[t].mult(n)}if(this._return_sequences){return Tensor.fromArray(this._y.map((t=>t.toArray()))).transpose(1,0,2)}return this._y[this._y.length-1]}grad(t){return this._grad_bptt(t)}_grad_bptt(t){const i=this._y.length;if(this._bo=Array(i),this._return_sequences){t=t.transpose(1,0,2);for(let s=0;s<i;s++)this._bo[s]=t.at(s).toMatrix()}else this._bo[i-1]=t;this._dy=[],this._do=[],this._dc=[],this._df=[],this._di=[],this._dz=[];const s=[];for(let t=i-1;t>=0;t--)this._dy[t]=this._bo[t]||Matrix.zeros(1,1),t<i-1&&(this._dy[t].add(this._dz[t+1].dot(this._r_z.t)),this._dy[t].add(this._di[t+1].dot(this._r_in.t)),this._dy[t].add(this._df[t+1].dot(this._r_for.t)),this._dy[t].add(this._do[t+1].dot(this._r_out.t))),this._do[t]=this._dy[t].copy(),this._do[t].mult(this._tanh(this._c[t])),this._do[t].mult(this._grad_sigmoid(this._ob[t],this._o[t])),this._dc[t]=this._dy[t].copy(),this._dc[t].mult(this._o[t]),this._dc[t].mult(this._grad_tanh(this._c[t])),this._dc[t].add(this._p_out.copyMult(this._do[t])),t<i-1&&(this._dc[t].add(this._p_in.copyMult(this._di[t+1])),this._dc[t].add(this._p_for.copyMult(this._df[t+1])),this._dc[t].add(this._dc[t+1].copyMult(this._f[t+1]))),this._df[t]=this._dc[t].copy(),this._df[t].mult(0===t?this._c0:this._c[t-1]),this._df[t].mult(this._grad_sigmoid(this._fb[t],this._f[t])),this._di[t]=this._dc[t].copy(),this._di[t].mult(this._z[t]),this._di[t].mult(this._grad_sigmoid(this._ib[t],this._i[t])),this._dz[t]=this._dc[t].copy(),this._dz[t].mult(this._i[t]),this._dz[t].mult(this._grad_tanh(this._zb[t])),s[t]=this._dz[t].dot(this._w_z.t),s[t].add(this._di[t].dot(this._w_in.t)),s[t].add(this._df[t].dot(this._w_for.t)),s[t].add(this._do[t].dot(this._w_out.t));return Tensor.fromArray(s.map((t=>t.toArray()))).transpose(1,0,2)}update(){this._update_bptt()}_update_bptt(){const t=this._y.length,i=this._x[0].rows,s=Matrix.zeros(...this._w_z.sizes),_=Matrix.zeros(...this._w_in.sizes),h=Matrix.zeros(...this._w_out.sizes),r=Matrix.zeros(...this._w_for.sizes),o=Matrix.zeros(1,this._size),d=Matrix.zeros(1,this._size),a=Matrix.zeros(1,this._size),e=Matrix.zeros(1,this._size),n=Matrix.zeros(1,this._size);for(let u=0;u<t;u++){const t=this._x[u].tDot(this._dz[u]);t.div(i),s.add(t);const z=this._x[u].tDot(this._di[u]);z.div(i),_.add(z);const l=this._x[u].tDot(this._do[u]);l.div(i),h.add(l);const c=this._x[u].tDot(this._df[u]);c.div(i),r.add(c),o.add(this._dz[u].mean(0)),d.add(this._di[u].mean(0)),a.add(this._do[u].mean(0)),e.add(this._df[u].mean(0));const y=this._dc[u].copyMult(this._do[u]);n.add(y.mean(0))}this._w_z.sub(this._opt.delta("w_z",s)),this._w_in.sub(this._opt.delta("w_i",_)),this._w_out.sub(this._opt.delta("w_o",h)),this._w_for.sub(this._opt.delta("w_f",r)),this._b_z.sub(this._opt.delta("b_z",o)),this._b_in.sub(this._opt.delta("b_i",d)),this._b_out.sub(this._opt.delta("b_o",a)),this._b_for.sub(this._opt.delta("b_f",e)),this._p_out.sub(this._opt.delta("p_o",n));const u=Matrix.zeros(this._size,this._size),z=Matrix.zeros(this._size,this._size),l=Matrix.zeros(this._size,this._size),c=Matrix.zeros(this._size,this._size),y=Matrix.zeros(1,this._size),p=Matrix.zeros(1,this._size);for(let s=0;s<t-1;s++){const t=this._y[s].tDot(this._dz[s+1]);t.div(i),u.add(t);const _=this._y[s].tDot(this._di[s+1]);_.div(i),z.add(_);const h=this._y[s].tDot(this._do[s+1]);h.div(i),l.add(h);const r=this._y[s].tDot(this._df[s+1]);r.div(i),c.add(r);const o=this._dc[s].copyMult(this._di[s+1]);y.add(o.mean(0));const d=this._dc[s].copyMult(this._df[s+1]);p.add(d.mean(0))}this._r_z.sub(this._opt.delta("r_z",u)),this._r_in.sub(this._opt.delta("r_i",z)),this._r_out.sub(this._opt.delta("r_o",l)),this._r_for.sub(this._opt.delta("r_f",c)),this._p_in.sub(this._opt.delta("p_i",y)),this._p_for.sub(this._opt.delta("p_f",p))}toObject(){return{type:"lstm",size:this._size,return_sequences:this._return_sequences,w_z:this._w_z?.toArray(),w_in:this._w_in?.toArray(),w_for:this._w_for?.toArray(),w_out:this._w_out?.toArray(),r_z:this._r_z.toArray(),r_in:this._r_in.toArray(),r_for:this._r_for.toArray(),r_out:this._r_out.toArray(),p_in:this._p_in.toArray(),p_for:this._p_for.toArray(),p_out:this._p_out.toArray(),b_z:this._b_z.toArray(),b_in:this._b_in.toArray(),b_for:this._b_for.toArray(),b_out:this._b_out.toArray()}}}LSTMLayer.registLayer("lstm");