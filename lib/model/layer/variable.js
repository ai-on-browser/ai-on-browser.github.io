import Layer from"./base.js";import{Matrix}from"../../util/math.js";export default class VariableLayer extends Layer{constructor({size:t,l2_decay:s=0,l1_decay:i=0,...a}){super(a),this._size=t,this._v=Matrix.randn(t[0],t[1]),this._l2_decay=s,this._l1_decay=i,this._n=1}bind({n:t}){this._n=t}calc(){return this._v}grad(t){this._bo=t}update(){const t=this._bo.copyDiv(this._n);if(this._l2_decay>0||this._l1_decay>0)for(let s=0;s<this._v.rows;s++)for(let i=0;i<this._v.cols;i++){const a=this._v.at(s,i);t.addAt(s,i,a*this._l2_decay+Math.sign(a)*this._l1_decay)}this._v.sub(this._opt.delta("v",t))}get_params(){return{v:this._v}}set_params(t){this._v=t.v.copy()}}