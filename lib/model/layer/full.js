import Layer from"./base.js";import{Matrix}from"../../util/math.js";export default class FullyConnected extends Layer{constructor({in_size:t=null,out_size:i,activation:s=null,l2_decay:_=0,l1_decay:a=0,...h}){super(h),this._in_size=t,this._out_size=i,this._w=null,this._b=Matrix.randn(1,i),s&&(this._activation_func=this.network.getLayerFromName(s,h)),this._l2_decay=_,this._l1_decay=a}calc(t){return this._w||(this._w=Matrix.randn(t.cols,this._out_size)),this._i=t,this._o=t.dot(this._w),this._o.add(this._b),this._activation_func?this._activation_func.calc(this._o):this._o}grad(t){return this._bo=t,this._activation_func&&(this._bo=this._activation_func.grad(t)),this._bi=this._bo.dot(this._w.t),this._bi}update(){const t=this._i.tDot(this._bo);if(t.div(this._i.rows),this._l2_decay>0||this._l1_decay>0)for(let i=0;i<t.rows;i++)for(let s=0;s<t.cols;s++){const _=this._w.at(i,s);t.addAt(i,s,_*this._l2_decay+Math.sign(_)*this._l1_decay)}this._w.sub(this._opt.delta("w",t));const i=this._bo.sum(0);i.div(this._i.rows),this._b.sub(this._opt.delta("b",i))}get_params(){return{w:this._w,b:this._b}}set_params(t){this._w=t.w.copy(),this._b=t.b.copy()}}