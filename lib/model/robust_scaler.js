export default class RobustScaler{constructor(){this._q_low=.25,this._q_high=.75}_q(i,t){const h=(i.length-1)*t,s=Math.floor(h),_=Math.ceil(h);return i[s]+(h-s)*(i[_]-i[s])}fit(i){if(Array.isArray(i[0])){this._mid=[],this._ql=[],this._qh=[];for(let t=0;t<i[0].length;t++){const h=i.map((i=>i[t]));h.sort(),this._mid[t]=this._q(h,.5),this._ql[t]=this._q(h,this._q_low),this._qh[t]=this._q(h,this._q_high)}}else(i=i.concat()).sort(),this._mid=this._q(i,.5),this._ql=this._q(i,this._q_low),this._qh=this._q(i,this._q_high)}predict(i){return i.map((i=>Array.isArray(i)?Array.isArray(this._mid)?i.map(((i,t)=>(i-this._mid[t])/(this._qh[t]-this._ql[t]))):i.map((i=>(i-this._mid)/(this._qh-this._ql))):Array.isArray(this._mid)?(i-this._mid[0])/(this._qh[0]-this._ql[0]):(i-this._mid)/(this._qh-this._ql)))}}