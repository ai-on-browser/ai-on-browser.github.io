import Matrix from"../util/matrix.js";export default class SelectiveSamplingSOP{constructor(t){this._b=t}init(t,s){this._x=Matrix.fromArray(t),this._shift=this._x.mean(0),this._x.sub(this._shift),this._y=s,this._d=this._x.cols,this._v=Matrix.zeros(this._d,1),this._s=Matrix.eye(this._d,this._d)}update(t,s){const i=Matrix.add(this._s,t.dot(t.t)).solve(this._v).tDot(t).toScaler(),h=i<=0?-1:1;this._b/(this._b*Math.abs(i))&&s!==h&&(this._v.add(Matrix.mult(t,s)),this._s.add(t.dot(t.t)))}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){const s=Matrix.fromArray(t);s.sub(this._shift);const i=this._s.solve(this._v);return s.dot(i).value.map((t=>t<=0?-1:1))}}