export default class Standardization{constructor(t=0){this._ddof=t}fit(t){if(Array.isArray(t[0])){this._m=Array(t[0].length).fill(0);for(let s=0;s<t.length;s++)for(let h=0;h<t[s].length;h++)this._m[h]+=t[s][h];this._m=this._m.map((s=>s/t.length)),this._s=Array(t[0].length).fill(0);for(let s=0;s<t.length;s++)for(let h=0;h<t[s].length;h++)this._s[h]+=(t[s][h]-this._m[h])**2;this._s=this._s.map((s=>Math.sqrt(s/(t.length-this._ddof))))}else this._m=t.reduce(((t,s)=>t+s),0)/t.length,this._s=Math.sqrt(t.reduce(((t,s)=>t+(s-this._m)**2),0)/(t.length-this._ddof))}predict(t){return t.map((t=>Array.isArray(t)?Array.isArray(this._m)?t.map(((t,s)=>(t-this._m[s])/this._s[s])):t.map((t=>(t-this._m)/this._s)):Array.isArray(this._m)?(t-this._m[0])/this._s[0]:(t-this._m)/this._s))}}