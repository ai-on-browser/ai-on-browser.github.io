export default class PassingBablok{constructor(){}fit(t,h){const s=t.length,e=[];for(let l=0;l<s;l++)for(let n=l+1;n<s;n++){let s=Math.atan2(h[n]-h[l],t[n]-t[l]);s<-.25*Math.PI&&(s+=Math.PI),e.push(s)}e.sort(((t,h)=>t-h)),e.length%2==1?this._d=e[(e.length-1)/2]:this._d=(e[e.length/2]+e[e.length/2-1])/2,this._d=Math.tan(this._d);const l=[];for(let e=0;e<s;e++)l[e]=h[e]-this._d*t[e];l.sort(((t,h)=>t-h)),l.length%2==1?this._c=l[(l.length-1)/2]:this._c=(l[l.length/2]+l[l.length/2-1])/2}predict(t){return t.map((t=>this._d*t+this._c))}}