export default class Sobel{constructor(t){this._threshold=t}_convolute(t,e){const l=[];for(let h=0;h<t.length;h++){l[h]=[];for(let o=0;o<t[h].length;o++){let n=0;for(let l=0;l<e.length;l++){let r=h+l-Math.floor(e.length/2);r=Math.max(0,Math.min(t.length-1,r));for(let h=0;h<e[l].length;h++){let g=o+h-Math.floor(e[l].length/2);g=Math.max(0,Math.min(t[r].length-1,g)),n+=t[r][g]*e[l][h]}}l[h][o]=n}}return l}predict(t){for(let e=0;e<t.length;e++)for(let l=0;l<t[e].length;l++){let h=t[e][l].reduce(((t,e)=>t+e),0)/t[e][l].length;t[e][l]=h}const e=this._convolute(t,[[1,0,-1],[2,0,-2],[1,0,-1]]),l=this._convolute(t,[[1,2,1],[0,0,0],[-1,-2,-1]]),h=[];for(let t=0;t<e.length;t++){h[t]=[];for(let o=0;o<e[t].length;o++)h[t][o]=Math.sqrt(e[t][o]**2+l[t][o]**2)>this._threshold}return h}}