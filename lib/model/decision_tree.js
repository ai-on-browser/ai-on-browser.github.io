var f=Object.defineProperty;var n=(a,e)=>f(a,"name",{value:e,configurable:!0});class g{static{n(this,"DecisionTree")}constructor(){this._depth=0}get depth(){return this._depth}init(e,s){this._datas=e.map((t,r)=>({value:t,target:s[r]})),this._tree={datas:this._datas,value:this._calcValue(this._datas),score:this._calcScore(this._datas),children:[],get leafs(){return this.children.length===0?[this]:this.children.reduce((t,r)=>t.concat(r.leafs),[])}},this._features=e[0].length,this._depth=1}fit(){this._tree.leafs.forEach(e=>{let s=e.score,t=-1,r=-1;for(let l=0;l<this._features;l++){const h=e.datas.map(c=>c.value[l]);h.sort((c,i)=>c-i);for(let c=0;c<h.length-1;c++){let i=(h[c]+h[c+1])/2,o=e.datas.filter(u=>u.value[l]<i),_=e.datas.filter(u=>u.value[l]>=i);const d=(this._calcScore(o)*o.length+this._calcScore(_)*_.length)/h.length;d<s&&(s=d,t=l,r=i)}}if(s<e.score){e.feature=t,e.threshold=r;const l=e.datas.filter(c=>c.value[t]<r),h=e.datas.filter(c=>c.value[t]>=r);e.children.push({datas:l,score:this._calcScore(l),value:this._calcValue(l),children:[],get leafs(){return this.children.length===0?[this]:this.children.reduce((c,i)=>c.concat(i.leafs),[])}}),e.children.push({datas:h,score:this._calcScore(h),value:this._calcValue(h),children:[],get leafs(){return this.children.length===0?[this]:this.children.reduce((c,i)=>c.concat(i.leafs),[])}})}}),this._depth++}importance(){const e=Array(this._features).fill(0);let s=0;const t=[this._tree];for(;t.length>0;){const r=t.pop();if(r.children.length===0)continue;const l=r.datas,h=r.children[0].datas,c=r.children[1].datas,i=(this._calcScore(l)*l.length-this._calcScore(h)*h.length-this._calcScore(c)*c.length)/this._datas.length;e[r.feature]+=i,s+=i,t.push(...r.children)}return s===0?e:e.map(r=>r/s)}predict_value(e){return e.map(s=>{let t=this._tree;for(;t.children.length>0;)t=s[t.feature]<t.threshold?t.children[0]:t.children[1];return t.value})}}export class DecisionTreeClassifier extends g{static{n(this,"DecisionTreeClassifier")}constructor(e){super(),this._method=e}_calcValue(e){return this._classesRate(e)}_calcScore(e){return this._method==="ID3"?this._id3(e):this._gini(e)}_classesRate(e){const s=new Map;return e.forEach(t=>{s.set(t.target,(s.get(t.target)||0)+1)}),s.forEach((t,r)=>{s.set(r,t/=e.length)}),s}_id3(e){const s=this._classesRate(e);let t=0;return s.forEach(r=>t-=r*Math.log(r)),t}_gini(e){const s=this._classesRate(e);let t=1;return s.forEach(r=>t-=r**2),t}predict_prob(e){return this.predict_value(e)}predict(e){return this.predict_prob(e).map(t=>{let r=0,l=-1;return t.forEach((h,c)=>{h>r&&(r=h,l=c)}),l})}}export class DecisionTreeRegression extends g{static{n(this,"DecisionTreeRegression")}_calcValue(e){if(e.length===0)return 0;if(Array.isArray(e[0].target)){const s=e[0].target.length;return e.reduce((t,r)=>t.map((l,h)=>l+r.target[h]),Array(s).fill(0)).map(t=>t/e.length)}else return e.reduce((s,t)=>s+t.target,0)/e.length}_calcScore(e){if(e.length===0)return 0;const s=this._calcValue(e);return Array.isArray(e[0].target)?Math.sqrt(e.reduce((t,r)=>t+r.target.reduce((l,h,c)=>l+(h-s[c])**2,0),0)/e.length):Math.sqrt(e.reduce((t,r)=>t+(r.target-s)**2,0)/e.length)}predict(e){return this.predict_value(e)}}
