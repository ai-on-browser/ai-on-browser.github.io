import{SDAR}from"./sdar.js";export default class ChangeFinder{constructor(p=1,r=.5,smooth=10){this._p=p;this._r=r;this._smooth=smooth;this._t=2}_smoothing(x,w){const s=[];for(let i=0;i<x.length;i++){let v=0;const c=Math.min(i+1,w);for(let k=i;k>i-c;k--){v+=x[k]}s.push(v/c)}return s}fit(datas){const model1=new SDAR(this._p,this._r);const score1=model1.probability(datas).map((v=>-Math.log(v)));const sscore1=this._smoothing(score1,this._smooth);const model2=new SDAR(this._p,this._r);const score2=model2.probability(sscore1).map((v=>-Math.log(v)));const sscore2=this._smoothing(score2,this._smooth*this._t);this._score=sscore2}predict(){return this._score}}