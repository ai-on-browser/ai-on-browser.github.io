import{SDAR}from"./sdar.js";export default class ChangeFinder{constructor(t=1,s=.5,o=10){this._p=t,this._r=s,this._smooth=o,this._t=2}_smoothing(t,s){const o=[];for(let h=0;h<t.length;h++){let i=0;const r=Math.min(h+1,s);for(let s=h;s>h-r;s--)i+=t[s];o.push(i/r)}return o}fit(t){const s=new SDAR(this._p,this._r).probability(t).map((t=>-Math.log(t))),o=this._smoothing(s,this._smooth),h=new SDAR(this._p,this._r).probability(o).map((t=>-Math.log(t))),i=this._smoothing(h,this._smooth*this._t);this._score=i}predict(){return this._score}}