var n=Object.defineProperty;var e=(_,h)=>n(_,"name",{value:h,configurable:!0});export default class o{static{e(this,"LogarithmicInterpolation")}constructor(){}fit(h,s){const i=h.map((t,r)=>[t,s[r]]);i.sort((t,r)=>t[0]-r[0]),this._x=i.map(t=>t[0]),this._y=i.map(t=>t[1])}predict(h){const s=this._x.length;return h.map(i=>{if(i<=this._x[0])return this._y[0];if(i>=this._x[s-1])return this._y[s-1];for(let t=1;t<s;t++)if(i<=this._x[t]){const r=(i-this._x[t-1])/(this._x[t]-this._x[t-1]);return this._y[t-1]**(1-r)*this._y[t]**r}return this._y[s-1]})}}
