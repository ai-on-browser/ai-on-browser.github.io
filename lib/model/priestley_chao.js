var M=Object.defineProperty;var p=(l,n)=>M(l,"name",{value:n,configurable:!0});import _ from"../util/matrix.js";export default class f{static{p(this,"PriestleyChao")}constructor(n){this._h=n,this._p=i=>{const r=Math.sqrt(2*Math.PI)**i.cols,s=_.mult(i,i).sum(1);return s.map(c=>Math.exp(-c/2)/r),s}}fit(n,i){if(!this._h){const t=n.length,s=n.map(o=>Math.sqrt(o.reduce((h,a)=>h+a**2,0))),c=s.reduce((o,h)=>o+h,0)/t,e=Math.sqrt(s.reduce((o,h)=>o+(h-c)**2,0)/t);s.sort((o,h)=>o-h);const m=p(o=>{const h=(t-1)*o,a=Math.floor(h),d=Math.ceil(h);return s[a]+(h-a)*(s[d]-s[a])},"q"),u=Math.min(e,(m(.75)-m(.25))/1.34);this._h=1.06*u/Math.pow(t,.2)}const r=n.map((t,s)=>[t[0],i[s]]);r.sort((t,s)=>t[0]-s[0]),this._x=_.fromArray(r.map(t=>t[0])),this._x2=this._x.slice(1),this._xd=_.sub(this._x2,this._x.slice(0,n.length-1)),this._y=r.map(t=>t[1])}predict(n){const i=this._x2.rows;return n.map(r=>{const t=_.sub(this._x2,new _(1,1,r[0]));t.div(this._h);const s=this._p(t);s.mult(this._xd);let c=0;for(let e=0;e<i;e++)c+=this._y[e][0]*s.value[e];return c/this._h})}}
