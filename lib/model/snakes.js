var u=Object.defineProperty;var f=(c,e)=>u(c,"name",{value:e,configurable:!0});export default class v{static{f(this,"Snakes")}constructor(e,s,i,h=100){this._alpha=e,this._beta=s,this._gamma=i,this._k=h,this._v=[]}_convolute(e,s){const i=[];for(let h=0;h<e.length;h++){i[h]=[];for(let t=0;t<e[h].length;t++){const l=Array(e[h][t].length).fill(0);for(let n=0;n<s.length;n++){let g=h+n-Math.floor(s.length/2);g=Math.max(0,Math.min(e.length-1,g));for(let _=0;_<s[n].length;_++){let o=t+_-Math.floor(s[n].length/2);o=Math.max(0,Math.min(e[g].length-1,o));for(let r=0;r<e[g][o].length;r++)l[r]+=e[g][o][r]*s[n][_]}}i[h][t]=l}}return i}init(e){const s=this._convolute(e,[[1,0,-1],[2,0,-2],[1,0,-1]]),i=this._convolute(e,[[1,2,1],[0,0,0],[-1,-2,-1]]);this._g=[];for(let t=0;t<s.length;t++){this._g[t]=[];for(let l=0;l<s[t].length;l++){this._g[t][l]=0;for(let n=0;n<s[t][l].length;n++)this._g[t][l]+=Math.sqrt(s[t][l][n]**2+i[t][l][n]**2);this._g[t][l]/=s[t][l].length}}this._v=[];const h=[];for(let t=0;t<4;t++)h.push(Math.round(t*this._k/4));h.push(this._k);for(let t=0;t<h[1]-h[0];t++)this._v.push([0,Math.round(t*(this._g[0].length-1)/(h[1]-h[0]))]);for(let t=0;t<h[2]-h[1];t++)this._v.push([Math.round(t*(this._g.length-1)/(h[2]-h[1])),this._g[0].length-1]);for(let t=0;t<h[3]-h[2];t++)this._v.push([this._g.length-1,this._g[0].length-1-Math.round(t*(this._g[0].length-1)/(h[3]-h[2]))]);for(let t=0;t<h[4]-h[3];t++)this._v.push([this._g.length-1-Math.round(t*(this._g.length-1)/(h[2]-h[1])),0])}_energy(e){let s=0,i=0,h=0;for(let t=0;t<e.length;t++){const l=t===0?e.length-1:t-1,n=t===e.length-1?0:t+1;s+=e[t].reduce((g,_,o)=>g+(_-e[l][o])**2,0),i+=e[t].reduce((g,_,o)=>g+(e[n][o]+e[l][o]-2*_)**2,0),h-=this._g[e[t][0]][e[t][1]]}return this._alpha*s+this._beta*i+this._gamma*h}fit(){const e=[[0,1],[1,1],[1,0],[1,-1],[0,-1],[-1,-1],[-1,0],[-1,1]];for(let s=0;s<this._v.length;s++){let i=this._energy(this._v),h=null;for(let t=0;t<e.length;t++){const l=this._v[s].map((_,o)=>_+e[t][o]);if(l[0]<0||l[1]<0||l[0]>=this._g.length||l[1]>=this._g[0].length)continue;const n=this._v.concat();n[s]=l;const g=this._energy(n);g<i&&(i=g,h=l)}h&&(this._v[s]=h)}}predict(){const e=[];for(let s=0;s<this._g.length;s++)e[s]=Array(this._g[s].length).fill(!1);for(let s=0;s<this._v.length;s++){const i=this._v[s][0],h=this._v[s][1],t=this._v[s===this._v.length-1?0:s+1][0],l=this._v[s===this._v.length-1?0:s+1][1],n=Math.abs(t-i),g=Math.abs(l-h);if(e[i][h]=!0,n>g){let _=2*g-n,o=h;const r=t>i?1:-1;for(let a=i+r;r>0?a<t:a>t;a+=r)_>0?(o+=l>h?1:-1,e[a][o]=!0,_+=2*g-2*n):(e[a][o]=!0,_+=2*g)}else{let _=2*n-g,o=i;const r=l>h?1:-1;for(let a=h+r;r>0?a<l:a>l;a+=r)_>0?(o+=t>i?1:-1,e[o][a]=!0,_+=2*n-2*g):(e[o][a]=!0,_+=2*n)}}return e}}
