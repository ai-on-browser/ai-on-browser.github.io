export default class LDF{constructor(t){this._k=t,this._m=t,this._h=1,this._c=.1}_distance(t,s){return Math.sqrt(t.reduce(((t,e,h)=>t+(e-s[h])**2),0))}predict(t){const s=t.length,e=[];for(let h=0;h<s;h++){e[h]=[],e[h][h]={d:0,i:h};for(let s=0;s<h;s++){const i=this._distance(t[h],t[s]);e[h][s]={d:i,i:s},e[s][h]={d:i,i:h}}}for(let t=0;t<s;t++)e[t].sort(((t,s)=>t.d-s.d));const h=[],i=t[0].length,r=(2*Math.PI)**(i/2);for(let t=0;t<s;t++){let s=0;for(let h=0;h<this._m;h++){const o=e[e[t][h+1].i][this._k].d,c=Math.max(e[t][h+1].d,o),l=this._h*o;s+=Math.exp(-(c**2)/(2*l**2))/(r*l**i)}h[t]=s/this._m}const o=[];for(let t=0;t<s;t++){let s=0;for(let i=0;i<this._m;i++)s+=h[e[t][i+1].i];s/=this._m,o[t]=s/(h[t]+this._c*s)}return o}}