var d=Object.defineProperty;var w=(u,i)=>d(u,"name",{value:i,configurable:!0});export default class x{static{w(this,"TighterPerceptron")}constructor(i=0,h=0,t="perceptron"){this._beta=i,this._p=h,this._C=1,this._update=t,this._loss=(n,a)=>n===a?0:1,this._w=null,this._c=0,this._a=[]}fit(i,h){this._w||(this._update==="mira"?this._w=Array(i[0].length).fill(1):this._w=Array(i[0].length).fill(0));for(let t=0;t<i.length;t++){const n=i[t].reduce((s,e,_)=>s+e*this._w[_],this._c);if(h[t]*n>this._beta)continue;if(this._p>0&&this._a.length>=this._p){let s=1/0,e=-1;for(let l=0;l<this._a.length;l++){const c=this._a[l],g=this._w.map((r,o)=>r-c.a*c.y*c.x[o]),m=this._c-c.a*c.y;let p=0;for(let r=0;r<this._a.length;r++){let o=m;for(let f=0;f<this._w.length;f++)o+=g[f]*this._a[r].x[f];p+=this._loss(this._a[r].y,o<=0?-1:1)}p<s&&(s=p,e=l)}const _=this._a[e];for(let l=0;l<this._w.length;l++)this._w[l]-=_.a*_.y*_.x[l];this._c-=_.a*_.y,this._a.splice(e,1)}let a=1;if(this._update==="mira"){const s=i[t].reduce((e,_)=>e+_**2,1);a=Math.min(1,Math.max(0,-h[t]*n/s))}else if(this._update==="nobias"){const s=i[t].reduce((e,_)=>e+_**2,1);a=Math.min(this._C,Math.max(0,(1-h[t]*n)/s))}this._a.push({a,x:i[t],y:h[t]});for(let s=0;s<this._w.length;s++)this._w[s]+=a*h[t]*i[t][s];this._c+=a*h[t]}}predict(i){const h=[];for(let t=0;t<i.length;t++){const n=i[t].reduce((a,s,e)=>a+s*this._w[e],this._c);h.push(n<=0?-1:1)}return h}}
