import Matrix from"../util/matrix.js";export default class LpNormLinearRegression{constructor(t=2){this._p=t,this._b=null}fit(t,s){t=Matrix.fromArray(t),s=Matrix.fromArray(s),this._w||(this._w=Matrix.ones(t.rows,s.cols)),this._b||(this._b=Matrix.zeros(t.cols,s.cols));for(let i=0;i<this._b.cols;i++){const r=Matrix.mult(t,this._w.col(i)),o=r.tDot(t).solve(r.tDot(s.col(i)));this._b.set(0,i,o)}if(this._p-2!=0){const i=t.dot(this._b);this._w=Matrix.sub(s,i),this._w.map(Math.abs),this._p-2<0?this._w.map((t=>Math.max(1e-8,t)**(this._p-2))):this._w.map((t=>t**(this._p-2)))}}predict(t){return(t=Matrix.fromArray(t)).dot(this._b).toArray()}}