var A=Object.defineProperty;var z=(q,v)=>A(q,"name",{value:v,configurable:!0});import j from"../util/matrix.js";export default class B{static{z(this,"BSGD")}constructor(v=10,k=1,f=1,p="removal",a="gaussian"){if(this._b=v,this._eta=k,this._lambda=f,this._maintenance=p,typeof a=="function")this._kernel=a;else switch(a){case"gaussian":this._s=1,this._kernel=(c,i)=>Math.exp(-(c.reduce((s,n,t)=>s+(n-i[t])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(c,i)=>(1+c.reduce((s,n,t)=>s+n*i[t]))**this._d;break}this._sv=[],this._alpha=[]}fit(v,k){const f=(1+Math.sqrt(5))/2;for(let p=0;p<v.length;p++){let a=0;for(let c=0;c<this._sv.length;c++)a+=this._alpha[c]*this._kernel(v[p],this._sv[c]);if(this._alpha=this._alpha.map(c=>c*(1-this._eta*this._lambda)),a*k[p]<1&&(this._alpha.push(this._eta*k[p]),this._sv.push(v[p]),this._sv.length>this._b)){let c=1/0,i=-1;for(let s=0;s<this._sv.length;s++){const n=this._alpha[s]**2*this._kernel(this._sv[s],this._sv[s]);n<c&&(c=n,i=s)}if(this._maintenance==="projection"){const s=this._sv.splice(i,1)[0],n=this._alpha.splice(i,1)[0],t=new j(this._b,this._b),m=new j(this._b,1);for(let e=0;e<this._b;e++){t.set(e,e,this._kernel(this._sv[e],this._sv[e]));for(let _=e;_<this._b;_++){const w=this._kernel(this._sv[e],this._sv[_]);t.set(e,_,w),t.set(_,e,w)}m.set(e,0,this._kernel(s,this._sv[e]))}const l=t.norm()/1e3;for(let e=0;e<this._b;e++)t.addAt(e,e,l);const g=t.solve(m);for(let e=0;e<this._b;e++)this._alpha[e]+=n*g.at(e,0)}else if(this._maintenance==="merging"){let s=1/0,n=0,t=0,m=null;for(let l=0;l<this._sv.length;l++){if(l===i)continue;const g=this._alpha[i]/(this._alpha[i]+this._alpha[l]),e=z(o=>g*this._kernel(this._sv[i].map(r=>(1-o)*r),this._sv[l].map(r=>(1-o)*r))+(1-g)*this._kernel(this._sv[i].map(r=>o*r),this._sv[l].map(r=>o*r)),"fh");let _=[0,e(0)],w=[1,e(1)],h=[1/(1+f),e(1/(1+f))];for(;w[0]-_[0]>1e-4;){const o=_[0]+(w[0]-h[0]),r=e(o);o<h[0]?r<h[1]?_=[o,r]:(w=h,h=[o,r]):r<h[1]?(_=h,h=[o,r]):w=[o,r]}const b=(_[0]+w[0])/2,u=this._sv[i].map((o,r)=>b*o+(1-b)*this._sv[l][r]),M=this._alpha[i]*this._kernel(this._sv[i],u)+this._alpha[l]*this._kernel(this._sv[l],u),y=this._alpha[i]**2*this._kernel(this._sv[i],this._sv[i])+this._alpha[l]**2*this._kernel(this._sv[l],this._sv[l])+M**2+this._kernel(u,u)+this._alpha[i]*this._alpha[l]*this._kernel(this._sv[i],this._sv[l])-this._alpha[i]*M*this._kernel(this._sv[i],u)-this._alpha[l]*M*this._kernel(this._sv[l],u);y<s&&(s=y,n=l,t=M,m=u)}this._sv.splice(Math.max(i,n),1),this._alpha.splice(Math.max(i,n),1),this._sv.splice(Math.min(i,n),1),this._alpha.splice(Math.min(i,n),1),this._sv.push(m),this._alpha.push(t)}else this._sv.splice(i,1),this._alpha.splice(i,1)}}}predict(v){const k=[];for(let f=0;f<v.length;f++){let p=0;for(let a=0;a<this._sv.length;a++)p+=this._alpha[a]*this._kernel(v[f],this._sv[a]);k[f]=p<0?-1:1}return k}}export class MulticlassBSGD{static{z(this,"MulticlassBSGD")}constructor(v=10,k=1,f=1,p="removal",a="gaussian"){if(this._b=v,this._eta=k,this._lambda=f,this._maintenance=p,typeof a=="function")this._kernel=a;else switch(a){case"gaussian":this._s=1,this._kernel=(c,i)=>Math.exp(-(c.reduce((s,n,t)=>s+(n-i[t])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(c,i)=>(1+c.reduce((s,n,t)=>s+n*i[t]))**this._d;break}this._classes=[],this._sv=[],this._alpha=[]}fit(v,k){const f=(1+Math.sqrt(5))/2;for(let p=0;p<v.length;p++){let a=this._classes.indexOf(k[p]);a<0&&(a=this._classes.length,this._classes.push(k[p]),this._sv.push([]),this._alpha.push([]));let c=-1/0,i=-1;for(let s=0;s<this._classes.length;s++){let n=0;for(let t=0;t<this._sv[s].length;t++)n+=this._alpha[s][t]*this._kernel(v[p],this._sv[s][t]);c<n&&(c=n,i=s)}for(let s=0;s<this._classes.length;s++)this._alpha[s]=this._alpha[s].map(n=>n*(1-this._eta*this._lambda));if(a!==i){this._alpha[a].push(this._eta),this._sv[a].push(v[p]),this._alpha[i].push(-this._eta),this._sv[i].push(v[p]);for(const s of[a,i]){if(this._sv[s].length<=this._b)continue;let n=1/0,t=-1;for(let m=0;m<this._sv[s].length;m++){const l=this._alpha[s][m]**2*this._kernel(this._sv[s][m],this._sv[s][m]);l<n&&(n=l,t=m)}if(this._maintenance==="projection"){const m=this._sv[s].splice(t,1)[0],l=this._alpha[s].splice(t,1)[0],g=new j(this._b,this._b),e=new j(this._b,1);for(let h=0;h<this._b;h++){g.set(h,h,this._kernel(this._sv[s][h],this._sv[s][h]));for(let b=h;b<this._b;b++){const u=this._kernel(this._sv[s][h],this._sv[s][b]);g.set(h,b,u),g.set(b,h,u)}e.set(h,0,this._kernel(m,this._sv[s][h]))}const _=g.norm()/1e3;for(let h=0;h<this._b;h++)g.addAt(h,h,_);const w=g.solve(e);for(let h=0;h<this._b;h++)this._alpha[s][h]+=l*w.at(h,0)}else if(this._maintenance==="merging"){let m=1/0,l=0,g=0,e=null;for(let _=0;_<this._sv[s].length;_++){if(_===t)continue;const w=this._alpha[s][t]/(this._alpha[s][t]+this._alpha[s][_]),h=z(x=>w*this._kernel(this._sv[s][t].map(d=>(1-x)*d),this._sv[s][_].map(d=>(1-x)*d))+(1-w)*this._kernel(this._sv[s][t].map(d=>x*d),this._sv[s][_].map(d=>x*d)),"fh");let b=[0,h(0)],u=[1,h(1)],M=[1/(1+f),h(1/(1+f))];for(;u[0]-b[0]>1e-4;){const x=b[0]+(u[0]-M[0]),d=h(x);x<M[0]?d<M[1]?b=[x,d]:(u=M,M=[x,d]):d<M[1]?(b=M,M=[x,d]):u=[x,d]}const y=(b[0]+u[0])/2,o=this._sv[s][t].map((x,d)=>y*x+(1-y)*this._sv[s][_][d]),r=this._alpha[s][t]*this._kernel(this._sv[s][t],o)+this._alpha[s][_]*this._kernel(this._sv[s][_],o),I=this._alpha[s][t]**2*this._kernel(this._sv[s][t],this._sv[s][t])+this._alpha[s][_]**2*this._kernel(this._sv[s][_],this._sv[s][_])+r**2+this._kernel(o,o)+this._alpha[s][t]*this._alpha[s][_]*this._kernel(this._sv[s][t],this._sv[s][_])-this._alpha[s][t]*r*this._kernel(this._sv[s][t],o)-this._alpha[s][_]*r*this._kernel(this._sv[s][_],o);I<m&&(m=I,l=_,g=r,e=o)}this._sv[s].splice(Math.max(t,l),1),this._alpha[s].splice(Math.max(t,l),1),this._sv[s].splice(Math.min(t,l),1),this._alpha[s].splice(Math.min(t,l),1),this._sv[s].push(e),this._alpha[s].push(g)}else this._sv[s].splice(t,1),this._alpha[s].splice(t,1)}}}}predict(v){const k=[];for(let f=0;f<v.length;f++){let p=-1/0;k[f]=null;for(let a=0;a<this._classes.length;a++){let c=0;for(let i=0;i<this._sv[a].length;i++)c+=this._alpha[a][i]*this._kernel(v[f],this._sv[a][i]);p<c&&(p=c,k[f]=this._classes[a])}}return k}}
