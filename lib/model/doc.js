var j=Object.defineProperty;var b=(y,i)=>j(y,"name",{value:i,configurable:!0});export class DOC{static{b(this,"DOC")}constructor(i,e,t){this._alpha=i,this._beta=e,this._w=t,this._p=[],this._d=[],this._mu=(h,l)=>h*(1/this._beta)**l}_select(i,e){const t=[];for(let h=0;h<e;h++)t.push(Math.floor(Math.random()*(i-h)));for(let h=t.length-1;h>=0;h--)for(let l=t.length-1;l>h;l--)t[h]<=t[l]&&t[l]++;return t}fit(i){const e=i.length,t=i[0].length,h=Math.min(e,Math.ceil(Math.log(2*t)/Math.log(1/(2*this._beta)))),l=(2/this._alpha)**h*Math.log(4);let o=0,c=[],u=[];for(let r=0;r<2/this._alpha;r++){const s=i[Math.floor(Math.random()*e)];for(let a=0;a<l;a++){const f=this._select(e,h),m=[],p=[],_=[];for(let n=0;n<t;n++)f.every(d=>Math.abs(i[d][n]-s[n])<=this._w)?(_.push(n),m.push(s[n]-this._w),p.push(s[n]+this._w)):(m.push(-1/0),p.push(1/0));const g=[];for(let n=0;n<e;n++)i[n].every((d,x)=>m[x]<=d&&d<=p[x])&&g.push(n);if(g.length<this._alpha*e)continue;const w=this._mu(g.length,_.length);o<w&&(o=w,c=g,u=_)}}const M=Array(e).fill(-1);for(let r=0;r<c.length;r++)M[c[r]]=0;this._p=M,this._d=u}predict(){return this._p}}export class FastDOC{static{b(this,"FastDOC")}constructor(i,e,t,h,l){this._alpha=i,this._beta=e,this._w=t,this._maxiter=h,this._d0=l,this._p=[],this._d=[]}_select(i,e){const t=[];for(let h=0;h<e;h++)t.push(Math.floor(Math.random()*(i-h)));for(let h=t.length-1;h>=0;h--)for(let l=t.length-1;l>h;l--)t[h]<=t[l]&&t[l]++;return t}fit(i){const e=i.length,t=i[0].length,h=Math.min(e,Math.ceil(Math.log(2*t)/Math.log(1/(2*this._beta)))),l=Math.min(this._maxiter,(2/this._alpha)**h*Math.log(4));let o=[],c=null;for(let s=0;s<2/this._alpha;s++){const a=i[Math.floor(Math.random()*e)];for(let f=0;f<l;f++){const m=this._select(e,h),p=[];for(let _=0;_<t;_++)m.every(g=>Math.abs(i[g][_]-a[_])<=this._w)&&p.push(_);if(p.length>=o.length&&(o=p,c=a),o.length>=this._d0)break}if(o.length>=this._d0)break}const u=Array.from({length:t},()=>-1/0),M=Array.from({length:t},()=>1/0);for(let s=0;s<o.length;s++)u[o[s]]=c[o[s]]-this._w,M[o[s]]=c[o[s]]+this._w;const r=Array(e).fill(-1);for(let s=0;s<e;s++)i[s].every((a,f)=>u[f]<=a&&a<=M[f])&&(r[s]=0);this._p=r,this._d=o}predict(){return this._p}}
