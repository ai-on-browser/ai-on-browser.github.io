var b=Object.defineProperty;var x=(l,o)=>b(l,"name",{value:o,configurable:!0});export class CatmullRomSplines{static{x(this,"CatmullRomSplines")}constructor(){}fit(o,_){const i=o.map((t,s)=>[t,_[s]]);i.sort((t,s)=>t[0]-s[0]),this._x=i.map(t=>t[0]),this._y=i.map(t=>t[1])}predict(o){const _=this._x.length;return o.map(i=>{if(i<=this._x[0])return this._y[0];if(i>=this._x[_-1])return this._y[_-1];for(let t=1;t<_;t++)if(i<=this._x[t]){const s=(i-this._x[t-1])/(this._x[t]-this._x[t-1]),e=t>1?this._y[t-2]:2*this._y[t-1]-this._y[t],r=this._y[t-1],y=this._y[t],p=t<_-1?this._y[t+1]:2*this._y[t]+this._y[t-1],c=-.5*e+1.5*r-1.5*y+.5*p,h=e-2.5*r+2*y-.5*p,n=.5*y-.5*e,a=r;return c*s**3+h*s**2+n*s+a}return this._y[_-1]})}}export class CentripetalCatmullRomSplines{static{x(this,"CentripetalCatmullRomSplines")}constructor(o=.5){this._alpha=o}fit(o,_){const i=o.map((t,s)=>[t,_[s]]);i.sort((t,s)=>t[0]-s[0]),this._x=i.map(t=>t[0]),this._y=i.map(t=>t[1])}predict(o){const _=this._x.length;return o.map(i=>{if(i<=this._x[0])return this._y[0];if(i>=this._x[_-1])return this._y[_-1];for(let t=1;t<_;t++)if(i<=this._x[t]){let s=(i-this._x[t-1])/(this._x[t]-this._x[t-1]);const e=t>1?this._y[t-2]:2*this._y[t-1]-this._y[t],r=this._y[t-1],y=this._y[t],p=t<_-1?this._y[t+1]:2*this._y[t]+this._y[t-1],c=0,h=((e-r)**2)**(this._alpha/2)+c,n=((r-y)**2)**(this._alpha/2)+h,a=((y-p)**2)**(this._alpha/2)+n;s=h+(n-h)*s;const m=(h-s)/(h-c)*e+(s-c)/(h-c)*r,u=(n-s)/(n-h)*r+(s-h)/(n-h)*y,f=(a-s)/(a-n)*y+(s-n)/(a-n)*p,d=(n-s)/(n-c)*m+(s-c)/(n-c)*u,C=(a-s)/(a-h)*u+(s-h)/(a-h)*f;return(n-s)/(n-h)*d+(s-h)/(n-h)*C}return this._y[_-1]})}}
