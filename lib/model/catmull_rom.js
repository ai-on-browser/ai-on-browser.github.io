export class CatmullRomSplines{constructor(){}fit(t,s){const i=t.map(((t,i)=>[t,s[i]]));i.sort(((t,s)=>t[0]-s[0])),this._x=i.map((t=>t[0])),this._y=i.map((t=>t[1]))}predict(t){const s=this._x.length;return t.map((t=>{if(t<=this._x[0])return this._y[0];if(t>=this._x[s-1])return this._y[s-1];for(let i=1;i<s;i++)if(t<=this._x[i]){const h=(t-this._x[i-1])/(this._x[i]-this._x[i-1]),_=i>1?this._y[i-2]:2*this._y[i-1]-this._y[i],r=this._y[i-1],n=this._y[i],y=i<s-1?this._y[i+1]:2*this._y[i]+this._y[i-1];return(-.5*_+1.5*r-1.5*n+.5*y)*h**3+(_-2.5*r+2*n-.5*y)*h**2+(.5*n-.5*_)*h+r}return this._y[s-1]}))}}export class CentripetalCatmullRomSplines{constructor(t=.5){this._alpha=t}fit(t,s){const i=t.map(((t,i)=>[t,s[i]]));i.sort(((t,s)=>t[0]-s[0])),this._x=i.map((t=>t[0])),this._y=i.map((t=>t[1]))}predict(t){const s=this._x.length;return t.map((t=>{if(t<=this._x[0])return this._y[0];if(t>=this._x[s-1])return this._y[s-1];for(let i=1;i<s;i++)if(t<=this._x[i]){let h=(t-this._x[i-1])/(this._x[i]-this._x[i-1]);const _=i>1?this._y[i-2]:2*this._y[i-1]-this._y[i],r=this._y[i-1],n=this._y[i],y=i<s-1?this._y[i+1]:2*this._y[i]+this._y[i-1],e=0,a=((_-r)**2)**(this._alpha/2)+e,o=((r-n)**2)**(this._alpha/2)+a,p=((n-y)**2)**(this._alpha/2)+o;h=a+(o-a)*h;const l=(o-h)/(o-a)*r+(h-a)/(o-a)*n;return(o-h)/(o-a)*((o-h)/(o-e)*((a-h)/(a-e)*_+(h-e)/(a-e)*r)+(h-e)/(o-e)*l)+(h-a)/(o-a)*((p-h)/(p-a)*l+(h-a)/(p-a)*((p-h)/(p-o)*n+(h-o)/(p-o)*y))}return this._y[s-1]}))}}