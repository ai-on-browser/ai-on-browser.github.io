import Matrix from"../util/matrix.js";export default class NeighbourhoodComponentsAnalysis{constructor(t=null,r=.1){this._w=null,this._d=t,this._lr=r}fit(t,r){t=Matrix.fromArray(t),this._w||(this._w=Matrix.randn(this._d||t.cols,t.cols)),t.sub(t.mean(0)),t.div(t.variance(0));const o=t.rows,s=[];for(let t=0;t<o;s[t++]=[]);for(let r=0;r<o;r++){const o=t.row(r);s[r][r]=Matrix.sub(o,o);for(let i=0;i<r;i++){const a=Matrix.sub(o,t.row(i));s[r][i]=a,s[i][r]=Matrix.map(a,(t=>-t))}}const i=new Matrix(o,o);for(let t=0;t<o;t++){i.set(t,t,0);for(let r=0;r<t;r++){const o=Matrix.mult(s[t][r],this._w),a=Math.exp(-(o.norm()**2));i.set(t,r,a),i.set(r,t,a)}}i.div(i.sum(1));const a=[];for(let t=0;t<o;t++){a[t]=0;for(let s=0;s<o;s++)r[t]===r[s]&&(a[t]+=i.at(t,s))}const e=Matrix.zeros(this._w.cols,this._w.cols);for(let t=0;t<o;t++){const l=[];for(let r=0;r<o;r++){const o=s[t][r];l[r]=o.tDot(o),e.add(Matrix.mult(l[r],i.at(t,r)*a[t]))}for(let s=0;s<o;s++){if(r[t]!==r[s])continue;const o=l[s];o.mult(i.at(t,s)),e.sub(o)}}const l=this._w.dot(e);l.mult(2*this._lr),this._w.sub(l)}importance(){return this._w.mean(0).value}predict(t){return Matrix.fromArray(t).dot(this._w.t).toArray()}}