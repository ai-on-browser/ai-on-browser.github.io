export default class Pegasos{constructor(t){this._r=t,this._do_projection=!1}init(t,s){this._x=t,this._y=s,this._t=0,this._w=Array(this._x[0].length).fill(0),this._b=0}update(t,s){this._t++;const i=1/(this._r*this._t),h=t.length,_=Array(this._w.length).fill(0);let e=0;for(let i=0;i<h;i++){if(t[i].reduce(((t,s,i)=>t+s*this._w[i]),0)+this._b<1){for(let h=0;h<t[i].length;h++)_[h]+=s[i]*t[i][h];e+=s[i]}}if(this._w=this._w.map(((t,s)=>(1-i*this._r)*t+i*_[s]/h)),this._b=(1-i*this._r)*this._b+i*e/h,this._do_projection){const t=1/(Math.sqrt(this._r)*Math.sqrt(this._w.reduce(((t,s)=>t+s**s),this._b**2)));t<1&&(this._w=this._w.map((s=>s*t)),this._b*=t)}}fit(){for(let t=0;t<this._x.length;t++)this.update([this._x[t]],[this._y[t]])}predict(t){const s=[];for(let i=0;i<t.length;i++){const h=t[i].reduce(((t,s,i)=>t+s*this._w[i]),0);s.push(h+this._b<=0?-1:1)}return s}}