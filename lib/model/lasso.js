import Matrix from"../util/matrix.js";export default class Lasso{constructor(t=.1,s="CD"){this._w=null,this._lambda=t,this._method=s}_soft_thresholding(t,s){t.map((t=>t<-s?t+s:t>s?t-s:0))}_calc_b0(t,s){let a=this._w.copy();for(let t=0;t<a.cols;t++)a.set(a.rows-1,t,0);let o=t.dot(a);o.isub(s);let i=o.sum(0);i.div(t.rows),this._w.set(this._w.rows-1,0,i)}fit(t,s){t=Matrix.fromArray(t),s=Matrix.fromArray(s),this._w||(this._w=Matrix.randn(t.cols,s.cols)),"ISTA"===this._method?this._ista(t,s):"CD"===this._method?this._cd(t,s):"LARS"===this._method&&this._lars(t,s)}_ista(t,s){let a=t.tDot(t);a.map((t=>Math.abs(t))),a=a.sum(0);const o=Math.max.apply(null,a.value)/this._lambda;let i=t.dot(this._w);i.isub(s),i=t.tDot(i),i.div(this._lambda*o),this._w.add(i),this._soft_thresholding(this._w,1/o)}_cd(t,s){for(let a=0;a<this._w.rows;a++){let o=t.col(a),i=this._w.copy();for(let t=0;t<this._w.cols;t++)i.set(a,t,0);i=t.dot(i),i.isub(s);let r=o.tDot(i);this._soft_thresholding(r,this._lambda),r.div(o.tDot(o)),this._w.set(a,0,r)}}_lars(t,s){const a=[],o=Array.from({length:t.cols},((t,s)=>s)),i=Matrix.zeros(t.rows,this._w.cols),r=Matrix.zeros(this._w.rows,this._w.cols);let l=!1,h=0;for(;o.length>0;){let e=null;const _=t.tDot(Matrix.sub(s,i));l||(e=o[Matrix.map(_.row(o),Math.abs).argmax(0).toScaler()],a.push(e),o.splice(o.indexOf(e),1));const c=Matrix.map(_,Math.abs).argmax(0).toScaler(),m=Matrix.map(_.row(a),Math.sign),d=Matrix.mult(t.col(a),m.t),n=d.tDot(d).inv(),w=1/Math.sqrt(n.sum()),u=n.sum(1);u.mult(w);const M=d.dot(u),x=t.tDot(M),f=Matrix.mult(m,u);let b=c/w;if(h<t.cols-1){const t=Matrix.zeros(o.length,2);for(let s=0;s<o.length;s++)t.set(s,0,(c-_.at(o[s],0))/(w-x.at(o[s],0))),t.set(s,1,(c+_.at(o[s],0))/(w+x.at(o[s],0)));b=Matrix.map(t,(t=>t<=0?1/0:t)).min()}const p=r.row(a);p.div(f),p.mult(-1),p.map((t=>t<=0?1/0:t));const g=p.min();l=!1,g<b&&(b=g,e=a[p.argmin(0).toScaler()],l=!0);const D=r.row(a);D.add(Matrix.mult(f,b));const y=0!==e?0:1,A=Matrix.zeros(this._w.rows,this._w.cols);for(let t=0;t<a.length;t++)A.set(a[t],0,D.at(t,0));const v=2*Math.abs(t.col(y).tDot(Matrix.sub(s,t.dot(A))).toScaler())/t.rows;if(v<this._lambda){const o=2*Math.abs(t.col(y).tDot(Matrix.sub(s,t.dot(this._w))).toScaler())/t.rows;if(a.length<2&&o<this._lambda)break;const l=b*(this._lambda-o)/(v-o);for(let t=0;t<a.length;t++)r[a[t]]+=f.at(t,0)*l;i.add(Matrix.mult(M,l)),this._w=r.copy();break}i.add(Matrix.mult(M,b));for(let t=0;t<a.length;t++)r.addAt(a[t],0,D.at(t,0));this._w=r.copy(),l&&(a.splice(a.indexOf(e),1),o.push(e)),h=a.length}}predict(t){return(t=Matrix.fromArray(t)).dot(this._w).toArray()}importance(){return this._w.value}}