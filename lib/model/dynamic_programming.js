var g=Object.defineProperty;var p=(c,t)=>g(c,"name",{value:t,configurable:!0});import"../rl/base.js";import{QTableBase as m}from"./q_learning.js";class x extends m{static{p(this,"DPTable")}constructor(t,e=20,s=.9){super(t,e);let a=this._state_sizes.reduce((n,_)=>n*_,1);this._v=Array(a).fill(0),this._gamma=s}_step_index(t,e){for(let s=0;s<e.length;s++){if(e[s]++,e[s]<t[s])return!0;e[s]=0}return!1}update(t="value"){t==="value"?this.valueIteration():this.policyIteration()}policyIteration(){const t=[].concat(this._v),e=[].concat(this._table),s=.05,a=Array(this.states.length).fill(0),n=Array(this.actions.length);do{let _=[];n.fill(0);do{const{state:i,reward:o}=this._env.test(this._state_value(a),this._action_value(n)),h=this._state_index(i),[f]=this._to_position(this._state_sizes,h),v=o+this._gamma*t[f],[,d]=this._q(a,n);this._table[d]=v,_.push([v,e[d]])}while(this._step_index(this._action_sizes,n));const[u]=this._to_position(this._state_sizes,a);let l=-1/0,r=-1;for(let i=0;i<_.length;i++)_[i][1]>l&&(l=_[i][1],r=i);this._v[u]=_.reduce((i,o,h)=>i+o[0]*(h===r?1-s:s/(_.length-1)),0)}while(this._step_index(this._state_sizes,a))}valueIteration(){const t=[].concat(this._v),e=Array(this.states.length).fill(0),s=Array(this.actions.length);do{let a=-1/0;s.fill(0);const n=this._state_value(e);do{const{state:u,reward:l}=this._env.test(n,this._action_value(s)),r=this._state_index(u),[i]=this._to_position(this._state_sizes,r),o=l+this._gamma*t[i],[,h]=this._q(e,s);this._table[h]=o,a=Math.max(o,a)}while(this._step_index(this._action_sizes,s));const[_]=this._to_position(this._state_sizes,e);this._v[_]=a}while(this._step_index(this._state_sizes,e))}}export default class y{static{p(this,"DPAgent")}constructor(t,e=20){this._table=new x(t,e)}get_score(){return this._table.toArray()}get_action(t){return this._table.best_action(t)}update(t){this._table.update(t)}}
