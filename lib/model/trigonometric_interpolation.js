export default class TrigonometricInterpolation{constructor(){this._alpha=0}fit(t,i){const s=t.map(((t,s)=>[t,i[s]]));s.sort(((t,i)=>t[0]-i[0])),this._x=s.map((t=>t[0])),this._y=s.map((t=>t[1]))}_t(t,i){const s=this._x.length;let h=1;s%2==0&&(h=Math.sin((t-this._alpha)/2)/Math.sin((this._x[i]-this._alpha)/2),Number.isFinite(h)||(h=1));for(let a=0;a<s;a++)a!==i&&(h*=Math.sin((t-this._x[a])/2)/Math.sin((this._x[i]-this._x[a])/2));return h}predict(t){const i=this._x.length;return t.map((t=>{let s=0;for(let h=0;h<i;h++)s+=this._y[h]*this._t(t,h);return s}))}}