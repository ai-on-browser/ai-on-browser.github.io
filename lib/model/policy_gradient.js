var l=Object.defineProperty;var p=(n,t)=>l(n,"name",{value:t,configurable:!0});import"../rl/base.js";import{QTableBase as d}from"./q_learning.js";class b{static{p(this,"SoftmaxPolicyGradient")}constructor(t,i=20){this._params=new d(t,i),this._epoch=0}get _state_sizes(){return this._params._state_sizes}get _action_sizes(){return this._params._action_sizes}_state_index(t){return this._params._state_index(t)}_action_index(t){return this._params._action_index(t)}probability(t){t=this._params._state_index(t);const[i]=this._params._q(t),_=i.map(Math.exp),e=_.reduce((s,o)=>s+o,0);return _.map(s=>s/e)}toArray(){return this._params.toArray()}get_action(t){const i=this.probability(t),_=Math.random();let e=0,a=-1;for(let s=0;s<i.length;s++)if(e+=i[s],_<e){a=s;break}return this._params._action_value(this._params._to_index(this._action_sizes,a))}update(t,i){const _=t.length,e=[],a={};for(const s of t){let[o,r]=s;r=this._state_index(r),o=this._action_index(o);const h=this._params._to_position(this._state_sizes,r)[0];e[h]=(e[h]||0)+1;const[,c]=this._params._q(r,o);if(!a[c]){const m=this.probability(r),u=this._params._to_position(this._action_sizes,o)[0];a[c]={n:0,s:h,p:m[u]}}a[c].n++}for(const s of Object.keys(a)){const o=a[s];this._params._table[s]+=i*(o.n+o.p*e[o.s])/_}this._epoch++}}export default class x{static{p(this,"PGAgent")}constructor(t,i=20){this._table=new b(t,i),this._history=[]}reset(){this._history=[]}get_score(){return this._table.toArray()}get_action(t){return this._table.get_action(t)}update(t,i,_,e,a){this._history.push([t,i,_]),e&&(this._table.update(this._history,a),this._history=[])}}
