var S=Object.defineProperty;var j=(v,s)=>S(v,"name",{value:s,configurable:!0});import b from"../util/matrix.js";export default class k{static{j(this,"SplitAndMerge")}constructor(s="variance",l=.1){this._method=s,this._threshold=l}_shouldSplit(s){if(s=b.fromArray(s.flat()),this._method==="variance"){if(s.variance(0).mean()>this._threshold)return!0}else if(this._method==="uniformity"){const l=s.mean(1);if(l.sub(l.mean()),l.map(Math.abs),l.max()>this._threshold)return!0}return!1}predict(s){this._x=s;let l=0;const p={data:s,category:l++,range:[[0,s.length],[0,s[0].length]],children:[],get leafs(){return this.children.length===0?[this]:this.children.reduce((e,r)=>e.concat(r.leafs),[])}},m=[p];for(;m.length>0;){const e=m.pop(),r=e.data;if(r.length<=1||r[0].length<=1)continue;const n=e.range;if(this._shouldSplit(r)){const o=n.map(t=>t[1]-t[0]),f=o.map(t=>Math.floor(t/2)),g=[],h=Array(o.length).fill(!1);do{g.push(h.map((t,c)=>t?[0,f[c]]:[f[c],o[c]]));for(let t=0;t<h.length;t++){if(!h[t]){h[t]=!0;break}h[t]=!1}}while(h.some(t=>t));for(const[t,c]of g){const i=[];for(let u=t[0];u<t[1];u++){const d=[];for(let _=c[0];_<c[1];_++)d.push(r[u][_]);i.push(d)}const M={data:i,category:l++,range:[[n[0][0]+t[0],n[0][0]+t[1]],[n[1][0]+c[0],n[1][0]+c[1]]],children:[],get leafs(){return this.children.length===0?[this]:this.children.reduce((u,d)=>u.concat(d.leafs),[])}};e.children.push(M),m.push(M)}}}const a=p.leafs;for(let e=0;e<a.length;e++){const r=a[e].range;for(let n=0;n<a.length;n++){if(a[e].category===a[n].category)continue;const o=a[n].range;let f=!1;for(let t=0;t<o.length;t++)(o[t][0]===r[t][1]||o[t][1]===r[t][0])&&o.every((c,i)=>i===t||o[i][0]<r[i][1]&&r[i][0]<o[i][1])&&(f=!0);if(!f)continue;const g=a.filter(t=>t.category===a[e].category||t.category===a[n].category),h=[];for(const t of g)h.push(...t.data.flat());if(!this._shouldSplit(h)){const t=Math.min(a[e].category,a[n].category);for(const c of g)c.category=t}}}const y=[];for(let e=0;e<this._x.length;y[e++]=[]);return p.leafs.forEach(e=>{const r=e.range;for(let n=r[0][0];n<r[0][1];n++)for(let o=r[1][0];o<r[1][1];o++)y[n][o]=e.category}),y}}
