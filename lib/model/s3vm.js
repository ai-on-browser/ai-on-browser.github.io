var M=Object.defineProperty;var p=(l,h)=>M(l,"name",{value:h,configurable:!0});import d from"../util/matrix.js";const b={gaussian:(l=1)=>(h,o)=>{let _=h.reduce((n,t,i)=>n+(t-o[i])**2,0);return Math.exp(-_/(2*l*l))},linear:()=>(l,h)=>l.reduce((o,_,n)=>o+_*h[n],0)};export default class C{static{p(this,"S3VM")}constructor(h,o=[]){this._b=0,this._s=3,this._gammas=null,this._rate=.1,this._C=1,this._Cs=1,typeof h=="function"?this._kernel=h:this._kernel=b[h](...o)}init(h,o){this._x=h.map(t=>t.concat()),this._t=o;const _=this._x.length;this._a=d.randn(_,1).value,this._m=Array(this._x[0].length).fill(0);let n=0;for(let t=0;t<_;t++)if(this._t[t])this._b+=this._t[t];else{for(let i=0;i<this._x[t].length;i++)this._m[i]+=this._x[t][i];n++}this._m=this._m.map(t=>t/n);for(let t=0;t<_;t++)for(let i=0;i<this._x[t].length;i++)this._x[t][i]-=this._m[i];this._b/=this._x.length-n,this._k=[];for(let t=0;t<_;this._k[t++]=[]);for(let t=0;t<_;t++)for(let i=t;i<_;i++)this._k[t][i]=this._k[i][t]=this._kernel(this._x[t],this._x[i])}fit(){this._fit_continuation()}_fit_continuation(){const h=this._x.length;if(!this._gammas){const s=d.zeros(h,h);let e=0;for(let r=0;r<h;r++){if(this._t[r])continue;const x=new d(h,1,this._k[r]),u=x.dot(x.t),g=x.norm();u.div(g**3),s.add(u),e<g&&(e=g)}const[a]=s.eigenPowerIteration(),c=Math.cbrt((this._Cs*a)**2/(2*this._s)),f=1/(20*this._s*e**2);this._gammas=[];const k=11;for(let r=0;r<=10;r++)this._gammas[r]=(f/c)**(r/(k-1))*c;this._gamma_idx=0}const o=this._gammas[this._gamma_idx],_=[],n=[],t=[];for(let s=0;s<h;s++){const e=this._k[s].reduce((a,c)=>a+c**2,0);_[s]=this._k[s].reduce((a,c,f)=>a+this._a[f]*c,0)+this._b,n[s]=1+2*o*this._s*e,this._t[s]&&(t[s]=(this._t[s]*_[s]-1)/Math.sqrt(2*o*e))}const i=this._a.concat();for(let s=0;s<h;s++){let e;this._t[s]?e=this._C/2*this._erfc(t[s])*this._t[s]:e=this._Cs*(2*this._s*_[s]/n[s]**(3/2))*Math.exp(-this._s*_[s]**2/n[s]);for(let a=0;a<h;a++)i[a]-=e*this._k[s][a]}const m=i.reduce((s,e)=>s+e**2,0);this._a=this._a.map((s,e)=>s-this._rate*i[e]),m<1e-4&&this._gamma_idx<this._gammas.length-1&&this._gamma_idx++}_erfc(h){const o=.3275911,_=.254829592,n=-.284496736,t=1.421413741,i=-1.453152027,m=1.061405429,s=h<0?-1:1,e=Math.abs(h),a=1/(1+o*e),c=1-((((m*a+i)*a+t)*a+n)*a+_)*a*Math.exp(-e*e);return 1-s*c}predict(h){const o=this._x.length;return h.map(_=>{_=_.map((t,i)=>t-this._m[i]);let n=0;for(let t=0;t<o;t++)n+=this._a[t]*this._kernel(_,this._x[t]);return n+this._b})}}
