export default class HermitInterpolation{constructor(t,i){this._t=t,this._b=i}fit(t,i){const s=t.map(((t,s)=>[t,i[s]]));s.sort(((t,i)=>t[0]-i[0])),this._x=s.map((t=>t[0])),this._y=s.map((t=>t[1]))}predict(t){const i=this._x.length;return t.map((t=>{if(t<=this._x[0])return this._y[0];if(t>=this._x[i-1])return this._y[i-1];for(let s=1;s<i;s++)if(t<=this._x[s]){const h=(t-this._x[s-1])/(this._x[s]-this._x[s-1]),_=s>1?this._y[s-2]:2*this._y[s-1]-this._y[s],r=this._y[s-1],e=this._y[s],n=s<i-1?this._y[s+1]:2*this._y[s]+this._y[s-1];return(2*h**3-3*h**2+1)*r+(h**3-2*h**2+h)*(((r-_)*(1+this._b)+(e-r)*(1-this._b))*(1-this._t)/2)+(h**3-h**2)*(((e-r)*(1+this._b)+(n-e)*(1-this._b))*(1-this._t)/2)+(-2*h**3+3*h**2)*e}return this._y[i-1]}))}}