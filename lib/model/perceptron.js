import Matrix from"../util/matrix.js";export default class Perceptron{constructor(t=!1,i){this._r=i,this._average=t}init(t,i){this._x=Matrix.fromArray(t),this._y=i,this._epoch=0,this._a=Matrix.randn(this._x.cols,1),this._atotal=Matrix.zeros(this._x.cols,1),this._b=0,this._btotal=0}fit(){const t=this._x.dot(this._a);t.map((t=>t+this._b<=0?-1:1)),this._epoch++;for(let i=0;i<this._x.rows;i++)if(t.at(i,0)!==this._y[i]){const s=(this._y[i]-t.at(i,0))*this._r,a=this._x.row(i);a.mult(s),this._average?(this._atotal.add(a.t),this._a.add(this._atotal.copyDiv(this._epoch)),this._btotal+=s,this._b+=this._btotal/this._epoch):(this._a.add(a.t),this._b+=s)}}predict(t){return Matrix.fromArray(t).dot(this._a).value.map((t=>t+this._b<=0?-1:1))}}