var p=Object.defineProperty;var a=(l,t)=>p(l,"name",{value:t,configurable:!0});export class Perceptron{static{a(this,"Perceptron")}constructor(t){this._r=t,this._a=null,this._b=0}fit(t,r){this._a||(this._a=Array(t[0].length).fill(0));for(let i=0;i<t.length;i++){const _=t[i].reduce((s,h,e)=>s+h*this._a[e],this._b)<=0?-1:1;if(_!==r[i]){const s=(r[i]-_)*this._r;for(let h=0;h<t[i].length;h++)this._a[h]+=s*t[i][h];this._b+=s}}}predict(t){return t.map(r=>r.reduce((i,_,s)=>i+_*this._a[s],this._b)<=0?-1:1)}}export class AveragedPerceptron{static{a(this,"AveragedPerceptron")}constructor(t){this._r=t,this._epoch=0,this._a=null,this._atotal=null,this._b=0,this._btotal=0}fit(t,r){this._a||(this._a=Array(t[0].length).fill(0),this._atotal=Array(t[0].length).fill(0)),this._epoch++;for(let i=0;i<t.length;i++){const _=t[i].reduce((s,h,e)=>s+h*this._a[e],this._b)<=0?-1:1;if(_!==r[i]){const s=(r[i]-_)*this._r;for(let h=0;h<t[i].length;h++)this._atotal[h]+=s*t[i][h],this._a[h]+=this._atotal[h]/this._epoch;this._btotal+=s,this._b+=this._btotal/this._epoch}}}predict(t){return t.map(r=>r.reduce((i,_,s)=>i+_*this._a[s],this._b)<=0?-1:1)}}export class MulticlassPerceptron{static{a(this,"MulticlassPerceptron")}constructor(t){this._r=t,this._c=[],this._epoch=0,this._a=[],this._b=[]}fit(t,r){this._epoch++;for(let i=0;i<t.length;i++){let _=this._c.indexOf(r[i]);_<0&&(this._c.push(r[i]),this._a.push(Array(t[i].length).fill(0)),this._b.push(0),_=this._c.length-1);let s=-1/0,h=-1;for(let e=0;e<this._c.length;e++){const o=this._a[e].reduce((c,n,f)=>c+n*t[i][f],this._b[e]);s<o&&(s=o,h=e)}if(h!==_){for(let e=0;e<t[i].length;e++)this._a[_][e]+=t[i][e]*this._r,this._a[h][e]-=t[i][e]*this._r;this._b[_]+=this._r,this._b[h]-=this._r}}}predict(t){const r=[];for(let i=0;i<t.length;i++){let _=-1/0,s=-1;for(let h=0;h<this._c.length;h++){const e=this._a[h].reduce((o,c,n)=>o+c*t[i][n],this._b[h]);_<e&&(_=e,s=h)}r.push(this._c[s])}return r}}
