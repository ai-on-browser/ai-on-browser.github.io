var x=Object.defineProperty;var u=(r,t)=>x(r,"name",{value:t,configurable:!0});import w from"../util/matrix.js";const d=u(r=>{if(Number.isInteger(r)&&r>0){let t=0;for(let e=2;e<r;e++)t+=Math.log(e);return t}else if(Number.isInteger(r-.5)&&r>0){const t=r-.5;let e=Math.log(Math.sqrt(Math.PI))-Math.log(2)*t;for(let s=2*t-1;s>0;s-=2)e+=Math.log(s);return e}throw""},"logGamma"),I=u((r,t)=>Math.exp(d(r)+d(t)-d(r+t)),"beta"),p=u((r,t,e)=>{if(r>(t+1)/(t+e+1))return 1-p(1-r,e,t);let s,n=-r*(t+e)/(t+1),h,l=2,o=1+n/l,g,i=1,f=1+n/i,a=1,M=l/i*a,m=o/f*M;const q=1e-12;for(let c=1;c<1e3&&!(Math.abs(m-a)<q);c++){const b=c*2*t;s=r*c*(e-c)/(b*(b-1)),n=-r*(t+c)*(t+e+c)/(b*(b+1)),h=o,l=1+s/h,o=1+n/l,g=f,i=1+s/g,f=1+n/i,a=m,M=l/i*a,m=o/f*M}return r**t*(1-r)**e*(m-1)/(t*I(t,e))},"ibeta"),N=u((r,t)=>{if(t===1)return 1/2+Math.atan(r)/Math.PI;if(t===2)return(1+r/Math.sqrt(2+r**2))/2;const e=Math.sqrt(r**2+t),s=(r+e)/(2*e);return p(s,t/2,t/2)},"ct"),v=u((r,t)=>{if(Math.abs(t)>1)throw"absolute of 'a' need less than or equals to 1.";if(Math.abs(t)===1)return Math.sign(t)*(1/0);if(t>.5)return-v(r,1-t);t=1-t;let e=1,s=null,n=0;const h=1e-5;let l=1e4;for(;l-- >0;){const o=N(e,r);if(isNaN(o))return o;if(Math.abs(o-t)<h)return e;o<t?(n=e,s===null?e*=2:e=(e+s)/2):(s=e,e=(e+n)/2)}throw"qt not converged."},"qt");export default class y{static{u(this,"SmirnovGrubbs")}constructor(t){this._alpha=t}predict(t){const e=w.fromArray(t),s=e.rows,n=Array(t.length).fill(!1);if(s<=2|this._alpha>s)return n;const h=e.mean(0),l=e.std(0);e.sub(h),e.abs(),e.div(l);const o=e.max(1),g=o.argmax(0).toScaler(),i=o.at(g,0),f=this._alpha/s,a=v(s-2,f),M=(s-1)*a/Math.sqrt(s*(s-2+a**2));return i>M&&(n[g]=!0),n}}
