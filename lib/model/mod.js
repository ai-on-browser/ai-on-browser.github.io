import Matrix from"../util/matrix.js";export default class MOD{constructor(t,r,o=r){this._x=Matrix.fromArray(t),this._m=r,this._k=o,this._d=Matrix.randn(this._x.cols,r),this._d.div(this._d.copyMap((t=>t**2)).mean(0).copyMap(Math.sqrt))}fit(){const t=new Matrix(this._x.rows,this._m);for(let r=0;r<this._x.rows;r++){const o=this._omp(this._x.row(r).t);t.set(r,0,o.t)}return this._d=this._x.tDot(t.dot(t.tDot(t).inv())),this._r=t,this._r.toArray()}_omp(t){let r=Matrix.zeros(this._m,1),o=t;const s=[];for(let i=0;i<this._k;i++){let i=1/0,e=-1;for(let t=0;t<this._m;t++){if(s.indexOf(t)>=0)continue;const r=this._d.col(t),h=o.norm()**2-r.tDot(o).toScaler()**2/(r.norm()**2+1e-12);h<i&&(i=h,e=t)}s.push(e);const h=this._d.col(s),_=h.tDot(h).solve(h.tDot(t));for(let t=0;t<s.length;t++)r.set(s[t],0,_.row(t));if(o=t.copySub(h.dot(_)),o.norm()<1e-8)break}return r}predict(){return this._r.toArray()}}