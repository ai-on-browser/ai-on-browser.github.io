var p=Object.defineProperty;var d=(f,r)=>p(f,"name",{value:r,configurable:!0});export default class u{static{d(this,"ElkanKMeans")}constructor(r){this._k=r,this._c=null,this._d=(_,l)=>Math.sqrt(_.reduce((e,i,h)=>e+(i-l[h])**2,0))}get centroids(){return this._c}init(r){this._x=r;const _=this._x.length;this._c=[this._x[Math.floor(Math.random()*_)]];const l=Array.from(this._x,()=>[]);for(let i=1;i<this._k;i++){for(let n=0;n<_;n++)l[n][i-1]=this._d(this._x[n],this._c[i-1])**2;const h=l.map(n=>n.reduce((c,k)=>Math.min(c,k),1/0)),o=h.reduce((n,c)=>n+c,0);let t=Math.random()*o,s=0;for(;s<h.length-1&&!(t<h[s]);s++)t-=h[s];this._c.push(this._x[s])}const e=[];for(let i=0;i<this._k;i++){e[i]=[],e[i][i]=0;for(let h=0;h<i;h++)e[i][h]=e[h][i]=this._d(this._c[i],this._c[h])}this._p=[],this._l=[],this._u=[];for(let i=0;i<_;i++){this._l[i]=Array(this._k.length).fill(0),this._p[i]=0,this._u[i]=this._l[i][0]=this._d(this._x[i],this._c[0]);for(let h=1;h<this._k;h++)this._l[i][this._p[i]]*2<=e[this._p[i]][h]||(this._l[i][h]=this._d(this._x[i],this._c[h]),this._l[i][h]<this._l[i][this._p[i]]&&(this._p[i]=h,this._u[i]=this._l[i][h]))}}fit(){const r=this._x.length,_=[];for(let t=0;t<this._k;t++){_[t]=[],_[t][t]=0;for(let s=0;s<t;s++)_[t][s]=_[s][t]=this._d(this._c[t],this._c[s])}const l=Array(this._k).fill(1/0);for(let t=0;t<this._k;t++){for(let s=0;s<this._k;s++)t!==s&&_[t][s]<l[t]&&(l[t]=_[t][s]);l[t]/=2}const e=Array(r).fill(!0);for(let t=0;t<r;t++)if(!(this._u[t]<=l[this._p[t]]))for(let s=0;s<this._k;s++){if(this._p[t]===s||this._u[t]<=this._l[t][s]||this._u[t]<=_[this._p[t]][s]/2)continue;let n=this._u[t];e[t]&&(n=this._l[t][this._p[t]]=this._d(this._x[t],this._c[this._p[t]]),e[t]=!1),(n>this._l[t]||n>_[this._p[t]][s]/2)&&(this._l[t][s]=this._d(this._x[t],this._c[s]),this._l[t][s]<n&&(this._p[t]=s))}const i=[],h=Array(this._k).fill(0);for(let t=0;t<this._k;t++)i[t]=Array(this._x[0].length).fill(0);for(let t=0;t<r;t++){for(let s=0;s<this._x[t].length;s++)i[this._p[t]][s]+=this._x[t][s];h[this._p[t]]++}const o=[];for(let t=0;t<this._k;t++)i[t]=i[t].map(s=>s/h[t]),o[t]=this._d(this._c[t],i[t]);for(let t=0;t<r;t++){for(let s=0;s<this._k;s++)this._l[t][s]=Math.max(this._l[t][s]-o[s],0);this._u[t]+=o[this._p[t]]}this._c=i}predict(r){const _=[];for(let l=0;l<r.length;l++){let e=1/0;_[l]=-1;for(let i=0;i<this._c.length;i++){const h=this._d(r[l],this._c[i]);h<e&&(e=h,_[l]=i)}}return _}}
