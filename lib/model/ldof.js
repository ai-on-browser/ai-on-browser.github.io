export default class LDOF{constructor(t){this._k=t}_distance(t,e){return Math.sqrt(t.reduce(((t,r,s)=>t+(r-e[s])**2),0))}predict(t){const e=[];for(let r=0;r<t.length;r++){e[r]=[],e[r][r]=0;for(let s=0;s<r;s++){const n=this._distance(t[r],t[s]);e[r][s]=e[s][r]=n}}const r=[],s=Math.min(this._k+1,t.length);for(let n=0;n<t.length;n++){const t=e[n].map(((t,e)=>[t,e]));t.sort(((t,e)=>t[0]-e[0]));let o=0,c=0;for(let r=1;r<s;r++){o+=t[r][0];for(let n=1;n<s;n++)r!==n&&(c+=e[t[r][1]][t[n][1]])}const l=o/(s-1),h=c/((s-1)*(s-2));r[n]=l/h}return r}}