var b=Object.defineProperty;var d=(m,s)=>b(m,"name",{value:s,configurable:!0});class v{static{d(this,"PriorityQueue")}constructor(s){this._value=s||[]}get length(){return this._value.length}_sort(){this._value.sort((s,e)=>s[1]-e[1])}push(s,e){this._value.push([s,e]),this._sort()}move(s,e){for(let r=0;r<this.length;r++)if(this._value[r][0]===s){this._value[r][1]=e,this._sort();return}this.push(s,e)}shift(){const[s]=this._value.shift();return s}}export default class y{static{d(this,"OPTICS")}constructor(s=1/0,e=5,r="euclid"){if(this._eps=s,this._minPts=e,this._metric=r,typeof this._metric=="function")this._d=this._metric;else switch(this._metric){case"euclid":this._d=(o,c)=>Math.sqrt(o.reduce((a,l,_)=>a+(l-c[_])**2,0));break;case"manhattan":this._d=(o,c)=>o.reduce((a,l,_)=>a+Math.abs(l-c[_]),0);break;case"chebyshev":this._d=(o,c)=>Math.max(...o.map((a,l)=>Math.abs(a-c[l])));break}}fit(s){const e=s.length,r=Array(e);for(let t=0;t<e;r[t++]=Array(e));for(let t=0;t<e;t++)for(let i=0;i<t;i++){const n=this._d(s[t],s[i]);r[t][i]=r[i][t]=n}const o=d(t=>{const i=[];for(let n=0;n<e;n++)r[t][n]<this._eps&&i.push(n);return i},"getNeighbors"),c=d(t=>{const i=o(t).map(n=>r[t][n]);return i.length<=this._minPts?null:(i.sort((n,u)=>n-u),i[this._minPts])},"coreDist"),a=d((t,i)=>{const n=c(i);return n===null?n:Math.max(n,r[i][t])},"reachabilityDist"),l=Array(e).fill(!1),_=Array(e).fill(null),p=d((t,i,n)=>{const u=c(i);if(u!==null)for(const h of t){if(l[h])continue;const f=Math.max(u,r[i][h]);_[h]===null?(_[h]=f,n.push(h,f)):f<_[h]&&(_[h]=f,n.move(h,f))}},"update");this._core_distance=[];for(let t=0;t<e;t++){if(l[t])continue;const i=o(t);l[t]=!0;const n=c(t);if(this._core_distance.push([t,n]),n!==null){const u=new v;for(p(i,t,u);u.length>0;){const h=u.shift(),f=o(h);l[h]=!0;const g=c(h);this._core_distance.push([h,g]),g!==null&&p(f,h,u)}}}}predict(s=.1){let e=0;const r=this._core_distance.length,o=Array(r);for(let c=0;c<r;c++){const[a,l]=this._core_distance[c];o[a]=l>s?++e:e}return o}}
