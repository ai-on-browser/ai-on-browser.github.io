var g=Object.defineProperty;var d=(p,s)=>g(p,"name",{value:s,configurable:!0});class v{static{d(this,"PriorityQueue")}constructor(s){this._value=s||[]}get length(){return this._value.length}_sort(){this._value.sort((s,e)=>s[1]-e[1])}push(s,e){this._value.push([s,e]),this._sort()}move(s,e){for(let r=0;r<this.length;r++)if(this._value[r][0]===s){this._value[r][1]=e,this._sort();return}this.push(s,e)}shift(){const[s]=this._value.shift();return s}}export default class b{static{d(this,"OPTICS")}constructor(s,e=1/0,r=5,u="euclid"){if(this._threshold=s,this._eps=e,this._minPts=r,this._metric=u,typeof this._metric=="function")this._d=this._metric;else switch(this._metric){case"euclid":this._d=(o,c)=>Math.sqrt(o.reduce((l,_,t)=>l+(_-c[t])**2,0));break;case"manhattan":this._d=(o,c)=>o.reduce((l,_,t)=>l+Math.abs(_-c[t]),0);break;case"chebyshev":this._d=(o,c)=>Math.max(...o.map((l,_)=>Math.abs(l-c[_])));break}}fit(s){const e=s.length,r=Array(e);for(let t=0;t<e;r[t++]=Array(e));for(let t=0;t<e;t++)for(let i=0;i<t;i++){const n=this._d(s[t],s[i]);r[t][i]=r[i][t]=n}const u=d(t=>{const i=[];for(let n=0;n<e;n++)r[t][n]<this._eps&&i.push(n);return i},"getNeighbors"),o=d(t=>{const i=u(t).map(n=>r[t][n]);return i.length<=this._minPts?null:(i.sort((n,a)=>n-a),i[this._minPts])},"coreDist"),c=Array(e).fill(!1),l=Array(e).fill(null),_=d((t,i,n)=>{const a=o(i);if(a!==null)for(const h of t){if(c[h])continue;const f=Math.max(a,r[i][h]);l[h]===null?(l[h]=f,n.push(h,f)):f<l[h]&&(l[h]=f,n.move(h,f))}},"update");this._core_distance=[];for(let t=0;t<e;t++){if(c[t])continue;const i=u(t);c[t]=!0;const n=o(t);if(this._core_distance.push([t,n]),n!==null){const a=new v;for(_(i,t,a);a.length>0;){const h=a.shift(),f=u(h);c[h]=!0;const m=o(h);this._core_distance.push([h,m]),m!==null&&_(f,h,a)}}}}predict(){let s=0;const e=this._core_distance.length,r=Array(e);for(let u=0;u<e;u++){const[o,c]=this._core_distance[u];r[o]=c>this._threshold?++s:s}return r}}
