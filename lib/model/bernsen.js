import{Matrix}from"../util/math.js";export default class BernsenThresholding{constructor(t=3,h=15){this._n=t,this._ct=h,this._th=128}predict(t){const h=Math.floor(this._n/2),r=[];for(let a=0;a<t.length;a++){r[a]=[];for(let e=0;e<t[a].length;e++){const o=[];for(let r=Math.max(0,a-h);r<=Math.min(t.length-1,a+h);r++)for(let n=Math.max(0,e-h);n<=Math.min(t[a].length-1,e+h);n++)o.push(t[r][n]);const n=Matrix.fromArray(o),i=n.max(0),l=n.min(0),s=i.copySub(l),c=i.copyAdd(l);c.div(2),r[a][e]=s.value.map(((h,r)=>h<this._ct?c.value[r]>=this._th?255:0:t[a][e][r]>=c.value[r]?255:0))}}return r}}