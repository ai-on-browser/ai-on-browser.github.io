export default class StatisticalRegionMerging{constructor(t){this._t=t}_d(t,l){return Math.sqrt(t.reduce(((t,e,h)=>t+(e-l[h])**2),0))}predict(t){this._values=[];const l=[],e=[];for(let h=0;h<t.length;h++){l[h]=Array(t[h].length).fill(!1),this._values[h]=Array(t[h].length).fill(0),e[h]=[];for(let l=0;l<t[h].length;l++)e[h][l]=Array(4)}for(let l=0;l<t.length;l++)for(let h=0;h<t[l].length;h++)l>0&&(e[l-1][h][0]=e[l][h][2]=this._d(t[l][h],t[l-1][h])),h>0&&(e[l][h-1][3]=e[l][h][1]=this._d(t[l][h],t[l][h-1]));for(;;){let h=null;for(let t=0;t<l.length&&!h;t++)for(let e=0;e<l[t].length&&!h;e++)l[t][e]||(h=[t,e]);if(!h)break;const r=[h],s=[],n=[];for(;r.length>0;){const h=r.pop(),[o,u]=h;e[o][u]&&!l[o][u]&&(l[o][u]=!0,s.push(h),n.push(t[o][u]),null!=e[o][u][0]&&e[o][u][0]<this._t&&r.push([o+1,u]),null!=e[o][u][1]&&e[o][u][1]<this._t&&r.push([o,u+1]),null!=e[o][u][2]&&e[o][u][2]<this._t&&r.push([o-1,u]),null!=e[o][u][3]&&e[o][u][3]<this._t&&r.push([o,u-1]))}const o=n[0];for(let t=1;t<n.length;t++)for(let l=0;l<o.length;l++)o[l]+=n[t][l];for(let t=0;t<o.length;t++)o[t]/=n.length;for(let t=0;t<s.length;t++)this._values[s[t][0]][s[t][1]]=o}return this._values}}