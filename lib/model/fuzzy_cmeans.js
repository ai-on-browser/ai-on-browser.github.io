var l=Object.defineProperty;var n=(c,i)=>l(c,"name",{value:i,configurable:!0});import o from"../util/matrix.js";export default class a{static{n(this,"FuzzyCMeans")}constructor(i=2){this._m=i,this._c=[],this._u=[]}_distance(i,_){return Math.sqrt(i.reduce((e,t,s)=>e+(t-_[s])**2,0))}init(i){this._x=i}add(){let i=null;for(;;){const t=Math.floor(Math.random()*this._x.length);if(i=this._x[t],this._c.every(s=>this._distance(i,s)>0))break}this._c.push(i.concat());const _=[],e=this._c.length;for(let t=0;t<this._x.length;t++){const s=this._distance(this._c[e-1],this._x[t]);let h=0;for(let r=0;r<e;r++)h+=(s/this._distance(this._c[r],this._x[t]))**(1/(this._m-1));_[t]=isNaN(h)?0:1/h}this._u.push(_)}fit(){const i=this._x[0].length,_=this._u.map(e=>{const t=Array(i).fill(0);let s=0;for(let h=0;h<this._x.length;h++){s+=e[h]**this._m;for(let r=0;r<i;r++)t[r]+=this._x[h][r]*e[h]**this._m}return t.map(h=>h/s)});for(let e=0;e<this._x.length;e++){const t=_.map(s=>this._distance(this._x[e],s));for(let s=0;s<_.length;s++){let h=0;for(let r=0;r<_.length;r++)h+=(t[s]/t[r])**(2/(this._m-1));this._u[s][e]=1/h}}this._c=_}predict(){return o.fromArray(this._u).t.toArray()}}
