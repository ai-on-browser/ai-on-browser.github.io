import{Matrix}from"../util/math.js";export default class SauvolaThresholding{constructor(t=3,r=.1,a=1){this._n=t,this._k=r,this._r=a}predict(t){const r=Math.floor(this._n/2),a=[];for(let h=0;h<t.length;h++){a[h]=[];for(let o=0;o<t[h].length;o++){const l=[];for(let a=Math.max(0,h-r);a<=Math.min(t.length-1,h+r);a++)for(let s=Math.max(0,o-r);s<=Math.min(t[h].length-1,o+r);s++)l.push(t[a][s]);const s=Matrix.fromArray(l),e=s.mean(0),n=s.std(0);n.map((t=>1+this._k*(t/this._r-1))),a[h][o]=e.copyMult(n).value.map(((r,a)=>t[h][o][a]<r?0:255))}}return a}}