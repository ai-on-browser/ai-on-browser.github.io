export default class MIRA{constructor(){this._w=null}init(t,h){this._x=t,this._y=h,this._w=Array(this._x[0].length).fill(1),this._b=0}update(t,h){const i=t.reduce(((t,h,i)=>t+h*this._w[i]),this._b),s=-h*i/t.reduce(((t,h)=>t+h**2),0),e=Math.max(0,Math.min(1,s));if(e>0)for(let i=0;i<this._w.length;i++)this._w[i]+=e*h*t[i],this._b+=e*h}fit(){for(let t=0;t<this._x.length;t++)this.update(this._x[t],this._y[t])}predict(t){const h=[];for(let i=0;i<t.length;i++){const s=t[i].reduce(((t,h,i)=>t+h*this._w[i]),0);h.push(s+this._b<=0?-1:1)}return h}}