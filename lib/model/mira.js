export default class MIRA{constructor(){this._w=null,this._b=0}update(t,e){const h=t.reduce(((t,e,h)=>t+e*this._w[h]),this._b),s=-e*h/t.reduce(((t,e)=>t+e**2),0),i=Math.max(0,Math.min(1,s));if(i>0)for(let h=0;h<this._w.length;h++)this._w[h]+=i*e*t[h],this._b+=i*e}fit(t,e){this._w||(this._w=Array(t[0].length).fill(1));for(let h=0;h<t.length;h++)this.update(t[h],e[h])}predict(t){const e=[];for(let h=0;h<t.length;h++){const s=t[h].reduce(((t,e,h)=>t+e*this._w[h]),0);e.push(s+this._b<=0?-1:1)}return e}}