import Matrix from"../util/matrix.js";export default class LTSA{constructor(t=1){this._k=t}predict(t,o=0){const r=(t=Matrix.fromArray(t)).cols,e=t.rows,s=[];for(let o=0;o<e;o++){s[o]=[];for(let e=0;e<o;e++){let n=0;for(let s=0;s<r;s++)n+=(t.at(o,s)-t.at(e,s))**2;s[o][e]=s[e][o]=n}}const n=[];for(let t=0;t<e;t++){const o=[];for(let r=0;r<e;r++){if(r===t)continue;const e=s[t][r];if(o.length<this._k||e<o[this._k-1].dt){o.length===this._k&&o.pop(),o.push({dt:e,idx:r});for(let t=o.length-1;t>0;t--)o[t].dt<o[t-1].dt&&([o[t],o[t-1]]=[o[t-1],o[t]])}}n.push([t,...o.map((t=>t.idx))])}const i=Matrix.zeros(e,e);for(let o=0;o<e;o++){const s=t.row(n[o]),c=s.mean(0);s.sub(c);const l=s.tDot(s).eigenVectors(),a=Matrix.ones(e,r+1);a.set(0,1,l.slice(0,r,1));const d=a.dot(a.t);for(let t=0;t<n[o].length;t++){const r=n[o][t];i.addAt(r,r,1+d.at(t,t));for(let e=0;e<t;e++){const s=n[o][e];i.addAt(r,s,d.at(t,e)),i.addAt(s,r,d.at(e,t))}}}const c=i.eigenVectors();return c.flip(1),c.slice(1,o+1,1).toArray()}}