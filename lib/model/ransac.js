export default class RANSAC{constructor(t,e=null){this._model=t,this._sample=e,this._best_score=1/0,this._best_model=null}fit(t,e){const s=this._sample??t[0].length+1,r=[];for(let e=0;e<s;e++)r.push(Math.floor(Math.random()*(t.length-e)));for(let t=s-1;t>=0;t--)for(let e=s-1;e>t;e--)r[t]<=r[e]&&r[e]++;const l=r.map((e=>t[e])),o=r.map((t=>e[t])),h=new this._model;h.fit(l,o);const c=h.predict(t);let i=1/0;i=h.score?h.score(c,e):Array.isArray(e[0])?Math.sqrt(c.reduce(((t,s,r)=>t+s.reduce(((t,s,l)=>t+(s-e[r][l])**2),0)),0)/e.length):Math.sqrt(c.reduce(((t,s,r)=>t+(s-e[r])**2),0)/e.length),i<this._best_score&&(this._best_model=h,this._best_score=i)}predict(t){return this._best_model.predict(t)}}