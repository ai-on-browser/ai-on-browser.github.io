import Matrix from"../util/matrix.js";export default class RecursiveLeastSquares{constructor(){this._w=null,this._s=null}update(t,s){const r=this._s.dot(t).dot(t.tDot(this._s));r.div(1+t.tDot(this._s).dot(t).toScaler()),this._s.sub(r);const o=this._s.dot(t);o.mult(t.tDot(this._w).toScaler()-s),this._w.sub(o)}fit(t,s){t=Matrix.fromArray(t);const r=Matrix.resize(t,t.rows,t.cols+1,1);this._w||(this._w=Matrix.zeros(r.cols,1),this._s=Matrix.eye(r.cols,r.cols));for(let o=0;o<t.rows;o++)this.update(r.row(o).t,s[o])}predict(t){const s=Matrix.fromArray(t);return Matrix.resize(s,s.rows,s.cols+1,1).dot(this._w).value}}