var w=Object.defineProperty;var p=(h,e)=>w(h,"name",{value:e,configurable:!0});import a from"../util/matrix.js";export default class _{static{p(this,"LLE")}constructor(e=1){this._k=e}predict(e,k=0){e=a.fromArray(e);const g=e.cols,i=e.rows,l=[];for(let o=0;o<i;l[o++]=[]);for(let o=0;o<i;o++)for(let t=0;t<o;t++){let r=0;for(let s=0;s<g;s++)r+=(e.at(o,s)-e.at(t,s))**2;l[o][t]=l[t][o]=r}const m=[];for(let o=0;o<i;o++){const t=[];for(let r=0;r<i;r++){if(r===o)continue;const s=l[o][r];if(t.length<this._k||s<t[this._k-1].dt){t.length===this._k&&t.pop(),t.push({dt:s,idx:r});for(let n=t.length-1;n>0;n--)t[n].dt<t[n-1].dt&&([t[n],t[n-1]]=[t[n-1],t[n]])}}m.push(t)}const f=a.eye(i,i);for(let o=0;o<i;o++){const t=m[o].map(c=>c.idx),r=e.row(t);r.sub(e.row(o));const s=r.dot(r.t),n=Math.floor(Math.log10(s.trace()))-3;s.add(a.eye(s.rows,s.cols,10**n));const d=s.inv().sum(0);d.div(d.sum());for(let c=0;c<this._k;c++)f.subAt(o,t[c],d.value[c])}const u=f.tDot(f).eigenVectors();return u.flip(1),u.slice(1,k+1,1).toArray()}}
