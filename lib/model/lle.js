import{Matrix}from"../util/math.js";export default class LLE{constructor(t=1){this._k=t}predict(t,e=0){const r=(t=Matrix.fromArray(t)).cols,o=t.rows,l=[];for(let t=0;t<o;l[t++]=[]);for(let e=0;e<o;e++)for(let o=0;o<e;o++){let s=0;for(let l=0;l<r;l++)s+=(t.at(e,l)-t.at(o,l))**2;l[e][o]=l[o][e]=s}const s=[];for(let t=0;t<o;t++){let e=[];for(let r=0;r<o;r++){if(r===t)continue;let o=l[t][r];if(e.length<this._k||o<e[this._k-1].dt){e.length===this._k&&e.pop(),e.push({dt:o,idx:r});for(let t=e.length-1;t>0;t--)e[t].dt<e[t-1].dt&&([e[t],e[t-1]]=[e[t-1],e[t]])}}s.push(e)}const i=Matrix.eye(o,o);for(let e=0;e<o;e++){let r=s[e].map((t=>t.idx)),o=t.row(r);o.sub(t.row(e));let l=o.dot(o.t).inv().sum(0);l.div(l.sum());for(let t=0;t<this._k;t++)i.subAt(e,r[t],l.value[t])}let f=i.tDot(i).eigenVectors();return f.flip(1),f.slice(1,e+1,1).toArray()}}