export default class FINDIT{constructor(t,e){this._cminsize=t,this._dmindist=e,this._sminsize=30,this._mminsize=1,this._delta=.01,this._rho=1,this._V=20,this._penaltyDim=2,this._avgdThreshold=.95}get size(){return this._mcs?.length??0}_chernoffBounds(t,e,l,h){const s=e*l,n=Math.log(1/h);return t*s+s*n+s*Math.sqrt(n**2+2*t*n)}_sample(t,e){e=Math.min(t,e);const l=[];for(let h=0;h<e;h++)l.push(Math.floor(Math.random()*(t-h)));for(let t=l.length-1;t>=0;t--)for(let e=l.length-1;e>t;e--)l[t]<=l[e]&&l[e]++;return l}_binomial(t,e,l){let h=1;for(let l=0;l<t;l++)h*=e-l,h/=l+1;return h*l**t*(1-l)**(e-t)}fit(t){const e=t,l=e[0].length,h=e.length/this._cminsize,s=this._chernoffBounds(this._sminsize,h,this._rho,this._delta),n=this._chernoffBounds(this._mminsize,h,this._rho,this._delta),o=this._sample(e.length,s),r=this._sample(e.length,n);this._m=r.map((t=>e[t]));const i=Array.from({length:l},(()=>[1/0,-1/0]));for(let t=0;t<e.length;t++)for(let h=0;h<l;h++)i[h][0]=Math.min(i[h][0],e[t][h]),i[h][1]=Math.max(i[h][1],e[t][h]);const f=i.map((t=>t[1]-t[0]));let c=0,a=null,g=null,_=null;for(let t=1;t<=25;t++){const h=f.map((e=>e*t/100)),s=[];for(let n=0;n<r.length;n++){const i=[];for(let t=0;t<o.length;t++){i[t]={i:t,d:l,vote:Array(l)};for(let s=0;s<l;s++)i[t].vote[s]=Math.abs(e[r[n]][s]-e[o[t]][s])<=h[s],i[t].vote[s]&&i[t].d--}i.sort(((t,e)=>t.d-e.d));let f=this._V,c=0;for(;f>=0&&(c+=this._binomial(f,this._V,2*t/100),!(c>=1e-8));f--);s[n]=[];for(let t=0;t<l;t++){let e=0;for(let l=0;l<this._V;l++)i[l].vote[t]&&e++;e>f&&s[n].push(t)}}const n=Array.from(r,(()=>[]));for(let t=0;t<o.length;t++){let i=1/0,f=-1;for(let n=0;n<r.length;n++){let c=s[n].length;for(const l of s[n])Math.abs(e[o[t]][l]-e[r[n]][l])<=h[l]&&c--;if(0===c){let s=l;for(let i=0;i<l;i++)Math.abs(e[o[t]][i]-e[r[n]][i])<=h[i]&&s--;s<i&&(i=s,f=n)}}f>=0&&n[f].push(t)}const i=Array.from(r,(()=>[])),m=Array.from(r,(()=>[]));for(let t=0;t<r.length;t++){i[t][t]=m[t][t]=0;for(let n=0;n<t;n++){let o=0;for(const l of s[t])s[n].indexOf(l)>=0&&Math.abs(e[r[t]][l]-e[r[n]][l])<=h[l]&&o++;o<=this._penaltyDim?i[t][n]=i[n][t]=l:i[t][n]=i[n][t]=Math.max(s[t].length,s[n].length)-o,m[t][n]=m[n][t]=i[t][n]}}const d=Array.from(r,((t,e)=>[e]));for(;;){let t=1/0,e=-1,l=-1;for(let h=0;h<d.length;h++)for(let s=0;s<h;s++)m[h][s]<t&&m[h][s]<=this._dmindist&&(t=m[h][s],e=h,l=s);if(e<0||l<0)break;d[l]=d[l].concat(d[e]);for(let t=0;t<d.length;t++){if(t===e||t===l)continue;let h=0;for(const e of d[l])for(const l of d[t])h+=n[e].length*n[l].length*i[e][l];h/=d[l].reduce(((t,e)=>t+n[e].length),0)*d[t].reduce(((t,e)=>t+n[e].length),0),m[l][t]=m[t][l]=h,m[t].splice(e,1)}m[l].splice(e,1),d.splice(e,1),m.splice(e,1)}const u=[];for(let t=0;t<d.length;t++){u[t]=[];const e=Array(l).fill(0);for(let l=0;l<d[t].length;l++)for(const h of s[d[t][l]])e[h]++;for(let h=0;h<l;h++)e[h]/d[t].length>=this._avgdThreshold&&u[t].push(h)}const p=Array(d.length).fill(-1),M=d.map((t=>t.concat()));for(let t=d.length-1;t>=0;t--)for(let s=t+1;s<d.length;s++){if(p[s]===t)continue;let o=0;for(const i of M[t])for(const f of M[s]){let c=0;for(const l of u[t])u[s].indexOf(l)>=0&&Math.abs(e[r[i]][l]-e[r[f]][l])<=h[l]&&c++;let a=c<=this._penaltyDim?l:Math.max(u[t].length,u[s].length)-c;o+=n[i].length*n[f].length*a}if(o/=M[t].reduce(((t,e)=>t+n[e].length),0)*M[s].reduce(((t,e)=>t+n[e].length),0),o<=this._dmindist){if(p[s]>=0){d[t]=d[t].concat(d[p[s]]);for(let e=t+1;e<d.length;e++)e!==s&&p[e]===p[s]&&(p[e]=t);p[p[s]]=t}else{d[t]=d[t].concat(d[s]);for(let e=t+1;e<d.length;e++)p[e]===s&&(p[e]=t)}p[s]=t}}let y=0;for(let t=d.length-1;t>=0;t--){if(p[t]>=0||d[t].length<this._sminsize){d.splice(t,1),u.splice(t,1);continue}u[t]=[];const e=Array(l).fill(0);for(let l=0;l<d[t].length;l++)for(const h of s[d[t][l]])e[h]++;for(let h=0;h<l;h++)e[h]/d[t].length>=this._avgdThreshold&&u[t].push(h);y+=d[t].reduce(((t,e)=>t+n[e].length),0)*u[t].length}c<y&&(c=y,a=h,g=d,_=u)}this._e=a,this._mcs=g,this._kd=_}predict(t){const e=this._m[0].length,l=Array(t.length).fill(-1);if(!this._mcs)return l;for(let h=0;h<t.length;h++){let s=1/0,n=-1;for(let l=0;l<this._mcs.length;l++)for(let o=0;o<this._mcs[l].length;o++){let r=this._kd[l].length;for(const e of this._kd[l])Math.abs(t[h][e]-this._m[this._mcs[l][o]][e])<=this._e[e]&&r--;if(0===r){let r=e;for(let s=0;s<e;s++)Math.abs(t[h][s]-this._m[this._mcs[l][o]][s])<=this._e[s]&&r--;r<s&&(s=r,n=l)}}l[h]=n}return l}}