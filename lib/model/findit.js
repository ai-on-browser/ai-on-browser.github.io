var N=Object.defineProperty;var F=(B,c)=>N(B,"name",{value:c,configurable:!0});export default class C{static{F(this,"FINDIT")}constructor(c,l){this._cminsize=c,this._dmindist=l,this._sminsize=30,this._mminsize=1,this._delta=.01,this._rho=1,this._V=20,this._penaltyDim=2,this._avgdThreshold=.95}get size(){return this._mcs?.length??0}_chernoffBounds(c,l,h,f){const a=l*h,A=Math.log(1/f);return c*a+a*A+a*Math.sqrt(A**2+2*c*A)}_sample(c,l){l=Math.min(c,l);const h=[];for(let f=0;f<l;f++)h.push(Math.floor(Math.random()*(c-f)));for(let f=h.length-1;f>=0;f--)for(let a=h.length-1;a>f;a--)h[f]<=h[a]&&h[a]++;return h}_binomial(c,l,h){let f=1;for(let a=0;a<c;a++)f*=l-a,f/=a+1;return f*h**c*(1-h)**(l-c)}fit(c){const l=c,h=l[0].length,f=l.length/this._cminsize,a=this._chernoffBounds(this._sminsize,f,this._rho,this._delta),A=this._chernoffBounds(this._mminsize,f,this._rho,this._delta),g=this._sample(l.length,a),d=this._sample(l.length,A);this._m=d.map(u=>l[u]);const z=Array.from({length:h},()=>[1/0,-1/0]);for(let u=0;u<l.length;u++)for(let m=0;m<h;m++)z[m][0]=Math.min(z[m][0],l[u][m]),z[m][1]=Math.max(z[m][1],l[u][m]);const v=z.map(u=>u[1]-u[0]);let I=0,x=null,q=null,w=null;for(let u=1;u<=25;u++){const m=v.map(t=>t*u/100),M=[];for(let t=0;t<d.length;t++){const i=[];for(let s=0;s<g.length;s++){i[s]={i:s,d:h,vote:Array(h)};for(let r=0;r<h;r++)i[s].vote[r]=Math.abs(l[d[t]][r]-l[g[s]][r])<=m[r],i[s].vote[r]&&i[s].d--}i.sort((s,r)=>s.d-r.d);let n=this._V,e=0;for(;n>=0&&(e+=this._binomial(n,this._V,2*u/100),!(e>=1e-8));n--);M[t]=[];for(let s=0;s<h;s++){let r=0;for(let _=0;_<this._V;_++)i[_].vote[s]&&r++;r>n&&M[t].push(s)}}const k=Array.from(d,()=>[]);for(let t=0;t<g.length;t++){let i=1/0,n=-1;for(let e=0;e<d.length;e++){let s=M[e].length;for(const r of M[e])Math.abs(l[g[t]][r]-l[d[e]][r])<=m[r]&&s--;if(s===0){let r=h;for(let _=0;_<h;_++)Math.abs(l[g[t]][_]-l[d[e]][_])<=m[_]&&r--;r<i&&(i=r,n=e)}}n>=0&&k[n].push(t)}const j=Array.from(d,()=>[]),b=Array.from(d,()=>[]);for(let t=0;t<d.length;t++){j[t][t]=b[t][t]=0;for(let i=0;i<t;i++){let n=0;for(const e of M[t])M[i].includes(e)&&Math.abs(l[d[t]][e]-l[d[i]][e])<=m[e]&&n++;n<=this._penaltyDim?j[t][i]=j[i][t]=h:j[t][i]=j[i][t]=Math.max(M[t].length,M[i].length)-n,b[t][i]=b[i][t]=j[t][i]}}const o=Array.from(d,(t,i)=>[i]);for(;;){let t=1/0,i=-1,n=-1;for(let e=0;e<o.length;e++)for(let s=0;s<e;s++)b[e][s]<t&&b[e][s]<=this._dmindist&&(t=b[e][s],i=e,n=s);if(i<0||n<0)break;o[n]=o[n].concat(o[i]);for(let e=0;e<o.length;e++){if(e===i||e===n)continue;let s=0;for(const r of o[n])for(const _ of o[e])s+=k[r].length*k[_].length*j[r][_];s/=o[n].reduce((r,_)=>r+k[_].length,0)*o[e].reduce((r,_)=>r+k[_].length,0),b[n][e]=b[e][n]=s,b[e].splice(i,1)}b[n].splice(i,1),o.splice(i,1),b.splice(i,1)}const y=[];for(let t=0;t<o.length;t++){y[t]=[];const i=Array(h).fill(0);for(let n=0;n<o[t].length;n++)for(const e of M[o[t][n]])i[e]++;for(let n=0;n<h;n++)i[n]/o[t].length>=this._avgdThreshold&&y[t].push(n)}const p=Array(o.length).fill(-1),D=o.map(t=>t.concat());for(let t=o.length-1;t>=0;t--)for(let i=t+1;i<o.length;i++){if(p[i]===t)continue;let n=0;for(const e of D[t])for(const s of D[i]){let r=0;for(const T of y[t])y[i].includes(T)&&Math.abs(l[d[e]][T]-l[d[s]][T])<=m[T]&&r++;let _=r<=this._penaltyDim?h:Math.max(y[t].length,y[i].length)-r;n+=k[e].length*k[s].length*_}if(n/=D[t].reduce((e,s)=>e+k[s].length,0)*D[i].reduce((e,s)=>e+k[s].length,0),n<=this._dmindist){if(p[i]>=0){o[t]=o[t].concat(o[p[i]]);for(let e=t+1;e<o.length;e++)e!==i&&p[e]===p[i]&&(p[e]=t);p[p[i]]=t}else{o[t]=o[t].concat(o[i]);for(let e=t+1;e<o.length;e++)p[e]===i&&(p[e]=t)}p[i]=t}}let V=0;for(let t=o.length-1;t>=0;t--){if(p[t]>=0||o[t].length<this._sminsize){o.splice(t,1),y.splice(t,1);continue}y[t]=[];const i=Array(h).fill(0);for(let n=0;n<o[t].length;n++)for(const e of M[o[t][n]])i[e]++;for(let n=0;n<h;n++)i[n]/o[t].length>=this._avgdThreshold&&y[t].push(n);V+=o[t].reduce((n,e)=>n+k[e].length,0)*y[t].length}I<V&&(I=V,x=m,q=o,w=y)}this._e=x,this._mcs=q,this._kd=w}predict(c){const l=this._m[0].length,h=Array(c.length).fill(-1);if(!this._mcs)return h;for(let f=0;f<c.length;f++){let a=1/0,A=-1;for(let g=0;g<this._mcs.length;g++)for(let d=0;d<this._mcs[g].length;d++){let z=this._kd[g].length;for(const v of this._kd[g])Math.abs(c[f][v]-this._m[this._mcs[g][d]][v])<=this._e[v]&&z--;if(z===0){let v=l;for(let I=0;I<l;I++)Math.abs(c[f][I]-this._m[this._mcs[g][d]][I])<=this._e[I]&&v--;v<a&&(a=v,A=g)}}h[f]=A}return h}}
