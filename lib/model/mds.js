import{Matrix}from"../util/math.js";export default class MDS{predict(t,e=1,r=!1){const a=(t=Matrix.fromArray(t)).cols,l=t.rows,o=new Matrix(l,l);if(r)o.set(0,0,t);else for(let e=0;e<l;e++){o.set(e,e,0);for(let r=e+1;r<l;r++){let s=0;for(let l=0;l<a;l++)s+=(t.at(e,l)-t.at(r,l))**2;o.value[e*l+r]=o.value[r*l+e]=Math.sqrt(s)}}let s=o.copyMap((t=>t**2));const i=s.mean(0),c=s.mean(1),f=s.mean();s.sub(i),s.sub(c),s.add(f),s.mult(-.5);const[m,n]=s.eigenJacobi(1e5);for(let t=0;t<l;t++)for(let r=0;r<e;r++)n.multAt(t,r,Math.sqrt(m[r]));return n.slice(0,e,1).toArray()}}