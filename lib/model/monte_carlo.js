var n=Object.defineProperty;var a=(h,t)=>n(h,"name",{value:t,configurable:!0});import"../rl/base.js";import{QTableBase as l}from"./q_learning.js";class c extends l{static{a(this,"MCTable")}constructor(t,s=20,e=.99){super(t,s),this._g=Array(this._table.length).fill(0),this._epoch=0,this._gamma=e}update(t){let s=0;for(let e=t.length-1;e>=0;e--){const[_,r,o]=t[e],[p,i]=this._q(this._state_index(r),this._action_index(_));s=o+this._gamma*s,this._g[i]=(s+this._g[i]*this._epoch)/(this._epoch+1),this._table[i]=this._g[i]}this._epoch++}}export default class g{static{a(this,"MCAgent")}constructor(t,s=20){this._env=t,this._table=new c(t,s),this._history=[]}reset(){this._history=[]}get_score(){return this._table.toArray()}get_action(t,s=.5){return Math.random()>s?this._table.best_action(t):this._env.sample_action(this)}update(t,s,e,_){this._history.push([t,s,e]),_&&(this._table.update(this._history),this._history=[])}}
