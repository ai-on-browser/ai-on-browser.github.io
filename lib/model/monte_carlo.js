import{RLEnvironmentBase}from"../rl/base.js";import{QTableBase}from"./q_learning.js";class MCTable extends QTableBase{constructor(t,s=20,e=.99){super(t,s),this._g=Array(this._table.length).fill(0),this._epoch=0,this._gamma=e}update(t){let s=0;for(let e=t.length-1;e>=0;e--){const[i,h,a]=t[e],[_,r]=this._q(this._state_index(h),this._action_index(i));s=a+this._gamma*s,this._g[r]=(s+this._g[r]*this._epoch)/(this._epoch+1),this._table[r]=this._g[r]}this._epoch++}}export default class MCAgent{constructor(t,s=20){this._env=t,this._table=new MCTable(t,s),this._history=[]}reset(){this._history=[]}get_score(){return this._table.toArray()}get_action(t,s=.5){return Math.random()>s?this._table.best_action(t):this._env.sample_action(this)}update(t,s,e,i){this._history.push([t,s,e]),i&&(this._table.update(this._history),this._history=[])}}