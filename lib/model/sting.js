export default class STING{constructor(){this._cells=null}fit(l){const t=l,r=t.length,e=t[0].length,a=t.reduce(((l,t)=>l.map(((l,r)=>Math.min(l,t[r])))),Array(e).fill(1/0)),n=t.reduce(((l,t)=>l.map(((l,r)=>Math.max(l,t[r])))),Array(e).fill(-1/0)),s=a.map(((l,t)=>[l,n[t]]));this._cells={ranges:s,children:[]};let o=[this._cells];const f=2**e,h=Math.log(r/20)/Math.log(f),i=[o];for(let l=0;l<h;l++){const l=[];for(const t of o){const r=t.ranges;for(let a=0;a<f;a++){let n=a;const s=[];for(let l=0;l<e;l++){const t=(r[l][1]+r[l][0])/2;n%2==0?s.push([r[l][0],t]):s.push([t,r[l][1]]),n=Math.floor(n/2)}const o={ranges:s,children:[]};l.push(o),t.children.push(o)}}o=l,i.push(o)}for(let l=0;l<o.length;l++){const r=o[l],a=t.filter((l=>r.ranges.every(((t,r)=>t[0]<=l[r]&&(t[1]===n[r]?l[r]<=t[1]:l[r]<t[1]))))),s=r.n=a.length,f=Array(e).fill(0),h=r.min=Array(e).fill(1/0),i=r.max=Array(e).fill(-1/0);for(let l=0;l<s;l++)for(let t=0;t<e;t++)f[t]+=a[l][t],h[t]=Math.min(h[t],a[l][t]),i[t]=Math.max(i[t],a[l][t]);r.m=f.map((l=>s>0?l/s:0));const c=Array(e).fill(0);for(let l=0;l<s;l++)for(let t=0;t<e;t++)c[t]+=(a[l][t]-f[t])**2;r.s=c.map((l=>s>0?Math.sqrt(l/s):0))}for(let l=i.length-2;l>=0;l--)for(let t=0;t<i[l].length;t++){let r=0;const a=Array(e).fill(0),n=i[l][t].min=Array(e).fill(1/0),s=i[l][t].max=Array(e).fill(-1/0),o=Array(e).fill(0);for(const h of i[l+1].slice(t*f,(t+1)*f)){r+=h.n;for(let l=0;l<e;l++)a[l]+=h.m[l]*h.n,n[l]=Math.min(n[l],h.min[l]),s[l]=Math.max(s[l],h.max[l]),o[l]+=(h.s[l]**2+h.m[l]**2)*h.n}i[l][t].n=r,i[l][t].m=a.map((l=>r>0?l/r:0)),i[l][t].s=o.map(((l,t)=>r>0?Math.sqrt(l/r-a[t]**2):0))}}predict(l){}}