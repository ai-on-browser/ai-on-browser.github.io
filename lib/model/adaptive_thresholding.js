var g=Object.defineProperty;var a=(f,t)=>g(f,"name",{value:t,configurable:!0});export default class k{static{a(this,"AdaptiveThresholding")}constructor(t="mean",h=3,s=2){this._method=t,this._k=h,this._c=s}_kernel(){const t=[];for(let h=0;h<this._k;t[h++]=Array(this._k).fill(1/this._k**2));if(this._method==="gaussian"){const s=Math.floor(this._k/2);let n=0;for(let e=0;e<this._k;e++)for(let i=0;i<this._k;i++){const l=e-s,o=i-s,r=Math.exp(-(l**2+o**2)/(2*1.3**2));t[e][i]=r,n+=r}for(let e=0;e<this._k;e++)for(let i=0;i<this._k;i++)t[e][i]/=n}return t}predict(t){switch(this._method){case"mean":case"gaussian":return this._predict_kernel(t);case"median":case"midgray":return this._predict_statistics(t)}}_predict_kernel(t){const h=[],s=this._kernel();for(let n=0;n<t.length;n++){h[n]=[];for(let e=0;e<t[n].length;e++){let i=0,l=0;for(let o=0;o<s.length;o++){const r=n+o-(s.length-1)/2;if(!(r<0||t.length<=r))for(let c=0;c<s[o].length;c++){const _=e+c-(s[o].length-1)/2;_<0||t[n].length<=_||(i+=s[o][c]*t[r][_],l+=s[o][c])}}h[n][e]=t[n][e]<i/l-this._c?0:1}}return h}_predict_statistics(t){const h=[];for(let s=0;s<t.length;s++){h[s]=[];for(let n=0;n<t[s].length;n++){const e=[];for(let i=0;i<this._k;i++){const l=s+i-(this._k-1)/2;if(!(l<0||t.length<=l))for(let o=0;o<this._k;o++){const r=n+o-(this._k-1)/2;r<0||t[s].length<=r||e.push(t[l][r])}}if(e.sort((i,l)=>i-l),this._method==="median"){const i=e.length%2===0?e[e.length/2-1]:e[(e.length-1)/2];h[s][n]=t[s][n]<i-this._c?0:1}else if(this._method==="midgray"){const i=(e[0]+e[e.length-1])/2;h[s][n]=t[s][n]<i-this._c?0:1}}}return h}}
