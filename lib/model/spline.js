import Matrix from"../util/matrix.js";import SplineInterpolation from"./spline_interpolation.js";export default class SmoothingSpline{constructor(t){this._l=t}fit(t,i){const e=t.map(((t,e)=>[t,i[e],e]));e.sort(((t,i)=>t[0]-i[0])),t=e.map((t=>t[0])),i=Matrix.fromArray(e.map((t=>t[1])));const o=t.length,s=Matrix.zeros(o-2,o-2),r=Matrix.zeros(o-2,o);for(let i=0;i<o-2;i++){const e=t[i+1]-t[i],o=t[i+2]-t[i+1];r.set(i,i,1/e),r.set(i,i+1,-1/e-1/o),r.set(i,i+2,1/o),i>0&&(s.set(i-1,i,e/6),s.set(i,i-1,e/6)),s.set(i,i,(e+o)/3)}const n=r.tDot(s.inv()).dot(r);n.mult(this._l);for(let t=0;t<o;t++)n.addAt(t,t,1);const l=n.solve(i).value;this._spline=new SplineInterpolation,this._spline.fit(t,l)}predict(t){return this._spline.predict(t)}}