import{Matrix}from"../util/math.js";import SplineInterpolation from"./spline_interpolation.js";export default class SmoothingSpline{constructor(t){this._l=t}fit(t,e){const i=t.map(((t,i)=>[t,e[i],i]));i.sort(((t,e)=>t[0]-e[0])),t=i.map((t=>t[0])),e=Matrix.fromArray(i.map((t=>t[1])));const o=t.length,s=Matrix.zeros(o-2,o-2),r=Matrix.zeros(o-2,o);for(let e=0;e<o-2;e++){const i=t[e+1]-t[e],o=t[e+2]-t[e+1];r.set(e,e,1/i),r.set(e,e+1,-1/i-1/o),r.set(e,e+2,1/o),e>0&&(s.set(e-1,e,i/6),s.set(e,e-1,i/6)),s.set(e,e,(i+o)/3)}const n=r.tDot(s.inv()).dot(r);n.mult(this._l);for(let t=0;t<o;t++)n.addAt(t,t,1);const l=n.solve(e).value;this._spline=new SplineInterpolation,this._spline.fit(t,l)}predict(t){return this._spline.predict(t)}}