var d=Object.defineProperty;var f=(m,s)=>d(m,"name",{value:s,configurable:!0});import a from"../util/matrix.js";import u from"./spline_interpolation.js";export default class _{static{f(this,"SmoothingSpline")}constructor(s){this._l=s}fit(s,r){const l=s.map((t,o)=>[t,r[o],o]);l.sort((t,o)=>t[0]-o[0]),s=l.map(t=>t[0]),r=a.fromArray(l.map(t=>t[1]));const e=s.length,n=a.zeros(e-2,e-2),i=a.zeros(e-2,e);for(let t=0;t<e-2;t++){const o=s[t+1]-s[t],c=s[t+2]-s[t+1];i.set(t,t,1/o),i.set(t,t+1,-1/o-1/c),i.set(t,t+2,1/c),t>0&&(n.set(t-1,t,o/6),n.set(t,t-1,o/6)),n.set(t,t,(o+c)/3)}const p=i.tDot(n.inv()).dot(i);p.mult(this._l);for(let t=0;t<e;t++)p.addAt(t,t,1);const h=p.solve(r).value;this._spline=new u,this._spline.fit(s,h)}predict(s){return this._spline.predict(s)}}
