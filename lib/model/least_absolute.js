import{Matrix}from"../util/math.js";export default class LeastAbsolute{constructor(){this._w=null}fit(t,o){t=Matrix.fromArray(t),o=Matrix.fromArray(o);const r=t.rows,s=t.resize(r,t.cols+1,1);null===this._w&&(this._w=Matrix.randn(s.cols,o.cols));const i=s.dot(this._w),l=o.copySub(i);l.map((t=>1/(Math.abs(t)+1e-8)));for(let t=0;t<this._w.cols;t++){const r=s.copyMult(l.col(t)),i=r.tDot(s).solve(r.tDot(o.col(t)));this._w.set(0,t,i)}}predict(t){return(t=Matrix.fromArray(t)).resize(t.rows,t.cols+1,1).dot(this._w).toArray()}}