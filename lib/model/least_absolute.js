import Matrix from"../util/matrix.js";export default class LeastAbsolute{constructor(){this._w=null}fit(t,r){t=Matrix.fromArray(t),r=Matrix.fromArray(r);const s=t.rows,o=Matrix.resize(t,s,t.cols+1,1);null===this._w&&(this._w=Matrix.randn(o.cols,r.cols));const i=o.dot(this._w),a=Matrix.sub(r,i);a.map((t=>1/(Math.abs(t)+1e-8)));for(let t=0;t<this._w.cols;t++){const s=Matrix.mult(o,a.col(t)),i=s.tDot(o).solve(s.tDot(r.col(t)));this._w.set(0,t,i)}}predict(t){t=Matrix.fromArray(t);return Matrix.resize(t,t.rows,t.cols+1,1).dot(this._w).toArray()}}