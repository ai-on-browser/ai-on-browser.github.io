import{Matrix}from"../util/math.js";const f=(t,l,s,e,o,n)=>{const h=t/2,r=2*Math.PI/t;if(t>1){for(let t=0;t<h;t++){const e=Math.cos(t*r),n=-Math.sin(t*r),f=l[t+o],a=s[t+o],i=l[t+o+h],c=s[t+o+h];l[t+o]=f+i,s[t+o]=a+c,l[t+o+h]=(f-i)*e-(a-c)*n,s[t+o+h]=(a-c)*e+(f-i)*n}f(t/2,l,s,2*e,o,n),f(t/2,l,s,2*e,o+h,n+e)}else o>n&&([l[o],l[n]]=[l[n],l[o]],[s[o],s[n]]=[s[n],s[o]])},fft=(t,l=null)=>{const s=t.length;if(!Number.isInteger(Math.log2(s)))throw"Invalid value length.";return l||(l=Array(s).fill(0)),f(s,t,l,1,0,0),[t,l]},ifft=(t,l)=>(l=l.map((t=>-t)),f(t.length,t,l,1,0,0),t=t.map((l=>l/t.length)),l=l.map((l=>-l/t.length)),[t,l]);export class LowpassFilter{constructor(t=.5){this._c=t}_cutoff(t,l,s,e){return t>=l?[0,0]:[s,e]}_lowpass(t){const[l,s]=fft(t),e=t.length/2,o=Math.floor(e*(1-this._c));for(let n=1;n<=e;n++)[l[n],s[n]]=this._cutoff(n,o,l[n],s[n]),n!==e&&([l[t.length-n],s[t.length-n]]=this._cutoff(n,o,l[t.length-n],s[t.length-n]));const[n,h]=(r=l,a=(a=s).map((t=>-t)),f(r.length,r,a,1,0,0),r=r.map((t=>t/r.length)),a=a.map((t=>-t/r.length)),[r,a]);var r,a;return n}predict(t){const l=t.length,s=Math.log2(l);if(Number.isInteger(s))return this._lowpass(t);const e=2**Math.floor(s),o=t.length-e,n=Math.floor(o/2),h=this._lowpass(t.slice(0,e)),r=this._lowpass(t.slice(n,n+e)),f=this._lowpass(t.slice(o)),a=[];for(let t=0;t<e/2;t++)a[t]=a[e-t-1]=t+1;const i=[];for(let t=0;t<l;t++)i[t]=t<n?h[t]:t<o?(h[t]*a[t]+r[t-n]*a[t-n])/(a[t]+a[t-n]):t>=n+e?f[t-o]:t>=e?(r[t-n]*a[t-n]+f[t-o]*a[t-o])/(a[t-n]+a[t-o]):(h[t]*a[t]+r[t-n]*a[t-n]+f[t-o]*a[t-o])/(a[t]+a[t-n]+a[t-o]);return i}}