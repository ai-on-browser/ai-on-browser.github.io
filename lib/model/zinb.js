var u=Object.defineProperty;var r=(o,t)=>u(o,"name",{value:t,configurable:!0});const g=r(o=>{let t=0;if(Number.isInteger(o))for(let e=2;e<o;e++)t+=Math.log(e);else if(Number.isInteger(o-.5)){const e=o-.5;t=Math.log(Math.sqrt(Math.PI))-Math.log(2)*e;for(let i=2*e-1;i>0;i-=2)t+=Math.log(i)}else if(o<.5)t=Math.log(Math.PI)-Math.log(Math.sin(Math.PI*o))-g(1-o);else{const e=[676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];o-=1,t=.9999999999998099;for(let s=0;s<e.length;s++)t+=e[s]/(o+s+1);const i=o+e.length-.5;t=Math.log(Math.sqrt(2*Math.PI))+Math.log(i)*(o+.5)-i+Math.log(t)}return t},"logGamma");export default class b{static{r(this,"ZeroInflatedNegativeBinomial")}fit(t){const e=t.reduce((h,a)=>h+a,0)/t.length,i=t.reduce((h,a)=>h+(a-e)**2,0)/t.length,s=[];for(let h=0;h<t.length;h++)s[t[h]]=(s[t[h]]??0)+1;const c=r(h=>{const a=e/(1-h),f=(i/e-1)/a-h;if(f<=1e-5)return-1/0;let _=0;for(let n=0;n<s.length;n++)s[n]&&(_+=s[n]*Math.log(this._probability(n,h,f,a)));return _},"calc_llh"),M=(i/e-1)/(e+i/e-1),l=[0,M/2,M].map(h=>[h,c(h)]);for(;l[2][0]-l[0][0]>1e-8;){const h=c((l[0][0]+l[1][0])/2),a=c((l[1][0]+l[2][0])/2);l[1][1]<h?(l[2]=l[1],l[1]=[(l[0][0]+l[1][0])/2,h]):l[1][1]<a?(l[0]=l[1],l[1]=[(l[1][0]+l[2][0])/2,a]):(l[0]=[(l[0][0]+l[1][0])/2,h],l[2]=[(l[1][0]+l[2][0])/2,a])}this._pi=l[1][0],this._l=e/(1-this._pi),this._k=(i/e-1)/this._l-this._pi}_probability(t,e,i,s){return t===0?e+(1-e)/(1+i*s)**(1/i):(1-e)*Math.exp(g(t+1/i)+t*Math.log(i*s)-g(t+1)-g(1/i)-(t+1/i)*Math.log(1+i*s))}probability(t){return t.map(e=>this._probability(e,this._pi,this._k,this._l))}}
