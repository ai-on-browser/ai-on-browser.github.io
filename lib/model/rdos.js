var p=Object.defineProperty;var _=(h,n)=>p(h,"name",{value:n,configurable:!0});const k={gaussian:_(h=>Math.exp(-h.reduce((n,o)=>n+o**2,0)/2)/Math.sqrt(2*Math.PI)**h.length,"gaussian")};export default class j{static{_(this,"RDOS")}constructor(n,o,i="gaussian"){this._k=n,this._h=o,typeof i=="function"?this._kernel=i:(i==="gaussian"||i.name==="gaussian")&&(this._kernel=k.gaussian)}_distance(n,o){return Math.sqrt(n.reduce((i,r,c)=>i+(r-o[c])**2,0))}predict(n){const o=n.length,i=[];for(let t=0;t<o;t++){i[t]=[],i[t][t]={d:0,i:t};for(let s=0;s<t;s++){const e=this._distance(n[t],n[s]);i[t][s]={d:e,i:s},i[s][t]={d:e,i:t}}}const r=[];for(let t=0;t<o;t++)i[t].sort((s,e)=>s.d-e.d),r[t]=i[t].slice(1,this._k+1).map(s=>s.i);const c=[];for(let t=0;t<o;t++){c[t]=[];for(let s=0;s<o;s++)r[s].some(e=>e===t)&&c[t].push(s)}const f=[],l=[];for(let t=0;t<o;t++){const s=new Set;for(let e=0;e<this._k;e++)for(const u of c[r[t][e]])u!==t&&s.add(u);l[t]=new Set([...r[t],...c[t],...s]),f[t]=this._kernel(Array(n[t].length).fill(0));for(const e of l[t]){const u=n[t].map((d,g)=>(d-n[e][g])/this._h);f[t]+=this._kernel(u)}f[t]/=this._h**n[t].length*(l[t].size+1)}const a=[];for(let t=0;t<o;t++){let s=0;for(const e of l[t])s+=f[e];a[t]=s/(l[t].size*f[t])}return a}}
