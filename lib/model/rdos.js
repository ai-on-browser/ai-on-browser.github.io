var g=Object.defineProperty;var u=(_,n)=>g(_,"name",{value:n,configurable:!0});export default class j{static{u(this,"RDOS")}constructor(n,i,o="gaussian"){this._k=n,this._h=i,typeof o=="function"?this._kernel=o:o==="gaussian"&&(this._kernel=r=>Math.exp(-r.reduce((c,h)=>c+h**2,0)/2)/Math.sqrt(2*Math.PI)**r.length)}_distance(n,i){return Math.sqrt(n.reduce((o,r,c)=>o+(r-i[c])**2,0))}predict(n){const i=n.length,o=[];for(let t=0;t<i;t++){o[t]=[],o[t][t]={d:0,i:t};for(let e=0;e<t;e++){const s=this._distance(n[t],n[e]);o[t][e]={d:s,i:e},o[e][t]={d:s,i:t}}}const r=[];for(let t=0;t<i;t++)o[t].sort((e,s)=>e.d-s.d),r[t]=o[t].slice(1,this._k+1).map(e=>e.i);const c=[];for(let t=0;t<i;t++){c[t]=[];for(let e=0;e<i;e++)r[e].some(s=>s===t)&&c[t].push(e)}const h=[],f=[];for(let t=0;t<i;t++){const e=new Set;for(let s=0;s<this._k;s++)for(const l of c[r[t][s]])l!==t&&e.add(l);f[t]=new Set([...r[t],...c[t],...e]),h[t]=this._kernel(Array(n[t].length).fill(0));for(const s of f[t]){const l=n[t].map((p,k)=>(p-n[s][k])/this._h);h[t]+=this._kernel(l)}h[t]/=this._h**n[t].length*(f[t].size+1)}const d=[];for(let t=0;t<i;t++){let e=0;for(const s of f[t])e+=h[s];d[t]=e/(f[t].size*h[t])}return d}}
