var g=Object.defineProperty;var d=(_,n)=>g(_,"name",{value:n,configurable:!0});export default class k{static{d(this,"RDOS")}constructor(n,i,o="gaussian"){this._k=n,this._h=i,typeof o=="function"?this._kernel=o:(o==="gaussian"||o.name==="gaussian")&&(this._kernel=r=>Math.exp(-r.reduce((c,h)=>c+h**2,0)/2)/Math.sqrt(2*Math.PI)**r.length)}_distance(n,i){return Math.sqrt(n.reduce((o,r,c)=>o+(r-i[c])**2,0))}predict(n){const i=n.length,o=[];for(let t=0;t<i;t++){o[t]=[],o[t][t]={d:0,i:t};for(let s=0;s<t;s++){const e=this._distance(n[t],n[s]);o[t][s]={d:e,i:s},o[s][t]={d:e,i:t}}}const r=[];for(let t=0;t<i;t++)o[t].sort((s,e)=>s.d-e.d),r[t]=o[t].slice(1,this._k+1).map(s=>s.i);const c=[];for(let t=0;t<i;t++){c[t]=[];for(let s=0;s<i;s++)r[s].some(e=>e===t)&&c[t].push(s)}const h=[],f=[];for(let t=0;t<i;t++){const s=new Set;for(let e=0;e<this._k;e++)for(const l of c[r[t][e]])l!==t&&s.add(l);f[t]=new Set([...r[t],...c[t],...s]),h[t]=this._kernel(Array(n[t].length).fill(0));for(const e of f[t]){const l=n[t].map((p,a)=>(p-n[e][a])/this._h);h[t]+=this._kernel(l)}h[t]/=this._h**n[t].length*(f[t].size+1)}const u=[];for(let t=0;t<i;t++){let s=0;for(const e of f[t])s+=h[e];u[t]=s/(f[t].size*h[t])}return u}}
