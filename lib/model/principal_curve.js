import Matrix from"../util/matrix.js";import SmoothingSpline from"./spline.js";export default class PrincipalCurve{constructor(){this._l=null}fit(t){t=Matrix.fromArray(t),this._bending(t)}_bending(t){const r=(t=Matrix.fromArray(t)).rows,o=t.cols;let i=this._l;if(!i){const[r,o]=t.svd();i=r.col(0),i.mult(o[0])}const n=1e3;for(let l=0;l<1;l++){const l=i.copy(),s=l.unique(),e=t.row(s),c=[];for(let t=0;t<o;t++){const r=new SmoothingSpline(.1);r.fit(l.value,e.col(t).value),c.push(r)}const a=i.min()-.01,m=i.max()+.01,f=[];for(let t=0;t<n;t++)f[t]=t/999*(m-a)+a;const u=new Matrix(n,o);for(let t=0;t<o;t++){const r=c[t].predict(f);for(let o=0;o<n;o++)u.set(o,t,r[o])}const p=[];for(let o=0;o<r;o++){const r=u.copySub(t.row(o));r.map((t=>t**2)),p[o]=f[r.sum(1).argmin(0).toScaler()]}i=Matrix.fromArray(p)}this._l=i}predict(){return this._l.toArray()}}