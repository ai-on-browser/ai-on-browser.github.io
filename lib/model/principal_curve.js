var A=Object.defineProperty;var w=(a,o)=>A(a,"name",{value:o,configurable:!0});import l from"../util/matrix.js";import b from"./spline.js";export default class q{static{w(this,"PrincipalCurve")}constructor(){this._l=null}fit(o){o=l.fromArray(o),this._bending(o)}_bending(o){o=l.fromArray(o);const y=o.rows,f=o.cols;let n=this._l;if(!n){const[i,e]=o.svd();n=i.col(0),n.mult(e[0])}const u=.01,c=1e3;for(let i=0;i<1;i++){const e=n.copy(),g=e.unique(),k=o.row(g),p=[];for(let t=0;t<f;t++){const r=new b(.1);r.fit(e.value,k.col(t).value),p.push(r)}const d=n.min()-u,v=n.max()+u,m=[];for(let t=0;t<c;t++)m[t]=t/(c-1)*(v-d)+d;const h=new l(c,f);for(let t=0;t<f;t++){const r=p[t].predict(m);for(let s=0;s<c;s++)h.set(s,t,r[s])}const _=[];for(let t=0;t<y;t++){const r=l.sub(h,o.row(t));r.map(s=>s**2),_[t]=m[r.sum(1).argmin(0).toScaler()]}n=l.fromArray(_)}this._l=n}predict(){return this._l.toArray()}}
