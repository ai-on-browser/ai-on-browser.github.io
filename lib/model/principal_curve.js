import{Matrix}from"../util/math.js";import SmoothingSpline from"./spline.js";export default class PrincipalCurve{constructor(){this._l=null}fit(t){t=Matrix.fromArray(t),this._bending(t)}_bending(t){const r=(t=Matrix.fromArray(t)).rows,o=t.cols;let i=this._l;if(!i){const[r,o]=t.svd();i=r.col(0),i.mult(o[0])}const l=1e3;for(let n=0;n<1;n++){const n=[];for(let r=0;r<o;r++){const o=new SmoothingSpline(0);o.fit(i.value,t.col(r).value),n.push(o)}const s=i.min()-.01,e=i.max()+.01,c=[];for(let t=0;t<l;t++)c[t]=t/999*(e-s)+s;const a=new Matrix(l,o);for(let t=0;t<o;t++){const r=n[t].predict(c);for(let o=0;o<l;o++)a.set(o,t,r[o])}const m=[];for(let o=0;o<r;o++){const r=a.copySub(t.row(o));r.map((t=>t**2)),m[o]=c[r.sum(1).argmin(0).toScaler()]}i=Matrix.fromArray(m)}this._l=i}predict(){return this._l.toArray()}}