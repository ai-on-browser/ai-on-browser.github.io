export default class RBP{constructor(t){this._b=t,this._w=null,this._c=0,this._s=[]}fit(t,s){this._w||(this._w=Array(t[0].length).fill(0));for(let h=0;h<t.length;h++){const i=t[h].reduce(((t,s,h)=>t+s*this._w[h]),this._c)<=0?-1:1;if(s[h]!==i){for(let i=0;i<t[h].length;i++)this._w[i]+=s[h]*t[h][i];if(this._c+=s[h],this._s.length>=this._b){const t=this._s[Math.floor(Math.random()*this._s.length)];for(let s=0;s<t.x.length;s++)this._w[s]-=t.y*t.x[s];this._c-=s[t],this._s.splice(t,1)}this._s.push({x:t[h],y:s[h]})}}}predict(t){const s=[];for(let h=0;h<t.length;h++){const i=t[h].reduce(((t,s,h)=>t+s*this._w[h]),this._c);s.push(i<=0?-1:1)}return s}}