export default class RBP{constructor(t){this._b=t}init(t,s){this._x=t,this._y=s,this._k=0,this._w=Array(this._x[0].length).fill(0),this._c=0,this._s=[]}fit(){for(let t=0;t<this._x.length;t++){const s=this._x[t].reduce(((t,s,h)=>t+s*this._w[h]),this._c)<=0?-1:1;if(this._y[t]!==s){for(let s=0;s<this._x[t].length;s++)this._w[s]+=this._y[t]*this._x[t][s];if(this._c+=this._y[t],this._s.length>=this._b){const t=this._s[Math.floor(Math.random()*this._s.length)];for(let s=0;s<this._x[t].length;s++)this._w[s]-=this._y[t]*this._x[t][s];this._c-=this._y[t],this._s.splice(t,1)}this._s.push(t)}}}predict(t){const s=[];for(let h=0;h<t.length;h++){const i=t[h].reduce(((t,s,h)=>t+s*this._w[h]),this._c);s.push(i<=0?-1:1)}return s}}