export default class CLARANS{constructor(t){this._k=t}_distance(t,s){return Math.sqrt(t.reduce(((t,e,o)=>t+(e-s[o])**2),0))}_cost(t){const s=this._x.length,e=[],o=[];for(let h=0;h<s;h++){const s=t[h];if(e[s]){for(let t=0;t<this._x[h].length;t++)e[s][t]+=this._x[h][t];o[s]++}else e[s]=this._x[h].concat(),o[s]=1}for(let t=0;t<e.length;t++)for(let s=0;s<e[t].length;s++)e[t][s]/=o[t];let h=0;for(let o=0;o<s;o++)h+=this._distance(this._x[o],e[t[o]]);return h}init(t){this._x=t,this._categories=[];for(let t=0;t<this._x.length;t++)this._categories[t]=Math.floor(Math.random()*this._k)}fit(t,s){const e=this._x.length,o=this._categories;let h=1,r=1/0;for(;h<=t;){let t=1,i=this._cost(o);for(;t<=s;){const s=Math.floor(Math.random()*e),h=o[s],r=Math.floor(Math.random()*(this._k-1));o[s]=r>=h?r+1:r;const n=this._cost(o);n<i?(t=1,i=n):(t++,o[s]=h)}i<r&&(r=i),h++}}predict(){return this._categories}}