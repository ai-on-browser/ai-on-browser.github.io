import{onnx as e}from"../onnx_exporter.js";import{getConstNodeName as l}from"../utils.js";export default{export(_,t){const i=l(_,0),d=new e.TensorProto;d.setName(t.name+"_alpha"),d.setDataType(e.TensorProto.DataType.FLOAT),d.setDimsList([1]),d.setFloatDataList([t.alpha??1]);const o=new e.TensorProto;o.setName(t.name+"_beta"),o.setDataType(e.TensorProto.DataType.FLOAT),o.setDimsList([1]),o.setFloatDataList([t.beta??1]);const m=Array.isArray(t.input)?t.input[0]:t.input,p=new e.NodeProto;p.setOpType("Mul"),p.addInput(m),p.addInput(t.name+"_beta"),p.addOutput(t.name+"_mul_b");const u=new e.NodeProto;u.setOpType("Tanh"),u.addInput(t.name+"_mul_b"),u.addOutput(t.name+"_tanh");const r=new e.NodeProto;r.setOpType("Mul"),r.addInput(t.name+"_tanh"),r.addInput(t.name+"_alpha"),r.addOutput(t.name+"_mul_a");const s=new e.NodeProto;s.setOpType("Greater"),s.addInput(m),s.addInput(i),s.addOutput(t.name+"_greater");const n=new e.NodeProto;n.setOpType("Where"),n.addInput(t.name+"_greater"),n.addInput(m),n.addInput(t.name+"_mul_a"),n.addOutput(t.name);const a=_.getGraph();a.addInitializer(d),a.addInitializer(o),a.addNode(p),a.addNode(u),a.addNode(r),a.addNode(s),a.addNode(n)}};
