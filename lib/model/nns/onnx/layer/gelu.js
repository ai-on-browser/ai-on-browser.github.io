import{onnx as e}from"../onnx_exporter.js";import{getConstNodeName as p}from"../utils.js";export default{export(n,d){const S=Array.isArray(d.input)?d.input[0]:d.input,C=n.getOpsetImportList()[0];if(C.getDomain()===""&&C.getVersion()>=20){const a=new e.NodeProto;a.setOpType("Gelu"),a.addInput(S),a.addOutput(d.name),n.getGraph().addNode(a)}else{const a=p(n,1),A=p(n,2),E=p(n,.3275911),L=p(n,.254829592),R=p(n,-.284496736),V=p(n,1.421413741),k=p(n,-1.453152027),z=p(n,1.061405429),M=new e.NodeProto;M.setOpType("Sqrt"),M.addInput(A),M.addOutput(d.name+"_sqrt2");const u=new e.NodeProto;u.setOpType("Div"),u.addInput(S),u.addInput(d.name+"_sqrt2"),u.addOutput(d.name+"_v");const x=new e.NodeProto;x.setOpType("Abs"),x.addInput(d.name+"_v"),x.addOutput(d.name+"_abs");const o=new e.NodeProto;o.setOpType("Mul"),o.addInput(d.name+"_abs"),o.addInput(E),o.addOutput(d.name+"_mul_p");const _=new e.NodeProto;_.setOpType("Add"),_.addInput(d.name+"_mul_p"),_.addInput(a),_.addOutput(d.name+"_add1");const h=new e.NodeProto;h.setOpType("Reciprocal"),h.addInput(d.name+"_add1"),h.addOutput(d.name+"_t");const s=new e.NodeProto;s.setOpType("Mul"),s.addInput(d.name+"_t"),s.addInput(z),s.addOutput(d.name+"_mul_a5");const m=new e.NodeProto;m.setOpType("Add"),m.addInput(d.name+"_mul_a5"),m.addInput(k),m.addOutput(d.name+"_add_a4");const r=new e.NodeProto;r.setOpType("Mul"),r.addInput(d.name+"_add_a4"),r.addInput(d.name+"_t"),r.addOutput(d.name+"_mul_a4");const N=new e.NodeProto;N.setOpType("Add"),N.addInput(d.name+"_mul_a4"),N.addInput(V),N.addOutput(d.name+"_add_a3");const O=new e.NodeProto;O.setOpType("Mul"),O.addInput(d.name+"_add_a3"),O.addInput(d.name+"_t"),O.addOutput(d.name+"_mul_a3");const I=new e.NodeProto;I.setOpType("Add"),I.addInput(d.name+"_mul_a3"),I.addInput(R),I.addOutput(d.name+"_add_a2");const c=new e.NodeProto;c.setOpType("Mul"),c.addInput(d.name+"_add_a2"),c.addInput(d.name+"_t"),c.addOutput(d.name+"_mul_a2");const w=new e.NodeProto;w.setOpType("Add"),w.addInput(d.name+"_mul_a2"),w.addInput(L),w.addOutput(d.name+"_add_a1");const y=new e.NodeProto;y.setOpType("Mul"),y.addInput(d.name+"_add_a1"),y.addInput(d.name+"_t"),y.addOutput(d.name+"_mul_a1");const l=new e.NodeProto;l.setOpType("Pow"),l.addInput(d.name+"_v"),l.addInput(A),l.addOutput(d.name+"_pow");const q=new e.NodeProto;q.setOpType("Neg"),q.addInput(d.name+"_pow"),q.addOutput(d.name+"_neg");const D=new e.NodeProto;D.setOpType("Exp"),D.addInput(d.name+"_neg"),D.addOutput(d.name+"_exp");const P=new e.NodeProto;P.setOpType("Mul"),P.addInput(d.name+"_mul_a1"),P.addInput(d.name+"_exp"),P.addOutput(d.name+"_mul");const T=new e.NodeProto;T.setOpType("Sub"),T.addInput(a),T.addInput(d.name+"_mul"),T.addOutput(d.name+"_erf");const G=new e.NodeProto;G.setOpType("Sign"),G.addInput(d.name+"_v"),G.addOutput(d.name+"_sign");const i=new e.NodeProto;i.setOpType("Mul"),i.addInput(d.name+"_erf"),i.addInput(d.name+"_sign"),i.addOutput(d.name+"_sign_erf");const g=new e.NodeProto;g.setOpType("Add"),g.addInput(a),g.addInput(d.name+"_sign_erf"),g.addOutput(d.name+"_erf_add1");const f=new e.NodeProto;f.setOpType("Mul"),f.addInput(S),f.addInput(d.name+"_erf_add1"),f.addOutput(d.name+"_mul_v");const v=new e.NodeProto;v.setOpType("Div"),v.addInput(d.name+"_mul_v"),v.addInput(A),v.addOutput(d.name);const t=n.getGraph();t.addNode(M),t.addNode(u),t.addNode(x),t.addNode(o),t.addNode(_),t.addNode(h),t.addNode(s),t.addNode(m),t.addNode(r),t.addNode(N),t.addNode(O),t.addNode(I),t.addNode(c),t.addNode(w),t.addNode(y),t.addNode(l),t.addNode(q),t.addNode(D),t.addNode(P),t.addNode(T),t.addNode(G),t.addNode(i),t.addNode(g),t.addNode(f),t.addNode(v)}}};
