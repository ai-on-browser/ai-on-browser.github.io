import{onnx as a}from"../onnx_exporter.js";export default{export(l,e){const m=Array.isArray(e.input)?e.input[0]:e.input,p=new a.NodeProto;p.setOpType("Relu"),p.addInput(m),p.addOutput(e.name+"_base");const n=l.getGraph();n.addNode(p);const d=new a.NodeProto;d.setOpType("Sum"),d.addInput(e.name+"_base");const i=e.s??2,y=Array.isArray(e.a)?e.a:Array(i).fill(e.a??.1),T=Array.isArray(e.b)?e.b:Array(i).fill(e.b??0);for(let t=0;t<i;t++){const s=new a.TensorProto;s.setName(e.name+"_a_"+t),s.setDataType(a.TensorProto.DataType.FLOAT),s.setDimsList([1]),s.setFloatDataList([y[t]]);const r=new a.TensorProto;r.setName(e.name+"_b_"+t),r.setDataType(a.TensorProto.DataType.FLOAT),r.setDimsList([1]),r.setFloatDataList([T[t]]);const o=new a.NodeProto;o.setOpType("Sub"),o.addInput(e.name+"_b_"+t),o.addInput(m),o.addOutput(e.name+"_sub_"+t);const _=new a.NodeProto;_.setOpType("Relu"),_.addInput(e.name+"_sub_"+t),_.addOutput(e.name+"_relu_"+t);const u=new a.NodeProto;u.setOpType("Mul"),u.addInput(e.name+"_relu_"+t),u.addInput(e.name+"_a_"+t),u.addOutput(e.name+"_mul_"+t),d.addInput(e.name+"_mul_"+t),n.addInitializer(s),n.addInitializer(r),n.addNode(o),n.addNode(_),n.addNode(u)}d.addOutput(e.name),n.addNode(d)}};
