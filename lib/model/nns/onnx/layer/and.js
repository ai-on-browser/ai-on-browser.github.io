import{onnx as a}from"../onnx_exporter.js";export default{export(s,e,i){if(!Array.isArray(e.input))throw new Error(`Invalid attribute 'input' value ${e.input}.`);const p=s.getGraph(),d=new a.NodeProto;if(e.input.length===1){d.setOpType("Identity"),d.addInput(e.input[0]),d.addOutput(e.name),p.addNode(d);return}const o=[];for(const n of e.input)if(i[n].type===a.TensorProto.DataType.BOOL)o.push(n);else{const t=new a.NodeProto;t.setOpType("Cast"),t.addInput(n),t.addOutput(`${e.name}_${n}_cast`);const r=new a.AttributeProto;r.setName("to"),r.setType(a.AttributeProto.AttributeType.INT),r.setI(a.TensorProto.DataType.BOOL),t.addAttribute(r),p.addNode(t),o.push(`${e.name}_${n}_cast`)}let u=o[0];for(let n=1;n<o.length-1;n++){const t=new a.NodeProto;t.setOpType("And"),t.addInput(u),t.addInput(o[n]),t.addOutput(u=e.name+`_and_${n-1}`),p.addNode(t)}return d.setOpType("And"),d.addInput(u),d.addInput(o.at(-1)),d.addOutput(e.name),p.addNode(d),{type:a.TensorProto.DataType.BOOL}}};
