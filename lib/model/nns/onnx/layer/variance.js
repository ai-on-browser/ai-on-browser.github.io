import{onnx as t}from"../onnx_exporter.js";export default{export(l,e,I){const s=l.getGraph(),y=Array.isArray(e.input)?e.input[0]:e.input,n=new t.NodeProto;n.setOpType("ReduceMean"),n.addInput(y),n.addOutput(e.name+"_mean");const o=new t.AttributeProto;o.setName("keepdims"),o.setType(t.AttributeProto.AttributeType.INT),o.setI(1),n.addAttribute(o);const d=new t.NodeProto;d.setOpType("Sub"),d.addInput(y),d.addInput(e.name+"_mean"),d.addOutput(e.name+"_sub");const r=new t.NodeProto;r.setOpType("Mul"),r.addInput(e.name+"_sub"),r.addInput(e.name+"_sub"),r.addOutput(e.name+"_mul");const a=new t.NodeProto;a.setOpType("ReduceMean"),a.addInput(e.name+"_mul"),a.addOutput(e.name);const x=e.keepdims??!0?1:0,m=new t.AttributeProto;m.setName("keepdims"),m.setType(t.AttributeProto.AttributeType.INT),m.setI(x),a.addAttribute(m),s.addNode(n),s.addNode(d),s.addNode(r),s.addNode(a);const c=I[y].size.concat();if(typeof e.axis=="string")throw new Error("Unsupported axis type string");if(e.axis==null||typeof e.axis=="number"&&e.axis<0)return{size:x?Array(c.length).fill(1):[]};const i=Array.isArray(e.axis)?e.axis:[e.axis],p=new t.TensorProto;if(p.setName(e.name+"_axis"),p.setDataType(t.TensorProto.DataType.INT64),p.setDimsList([i.length]),p.setInt64DataList(i),s.addInitializer(p),n.addInput(e.name+"_axis"),a.addInput(e.name+"_axis"),i.sort((u,T)=>T-u),x)for(const u of i)c[u]=1;else for(const u of i)c.splice(u,1);return{size:c}}};
