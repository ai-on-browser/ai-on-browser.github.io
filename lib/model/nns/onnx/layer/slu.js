import{onnx as e}from"../onnx_exporter.js";import{getConstNodeName as N}from"../utils.js";export default{export(l,t){const T=N(l,0),d=new e.TensorProto;d.setName(t.name+"_alpha"),d.setDataType(e.TensorProto.DataType.FLOAT),d.setDimsList([1]),d.setFloatDataList([t.alpha??1]);const s=new e.TensorProto;s.setName(t.name+"_beta"),s.setDataType(e.TensorProto.DataType.FLOAT),s.setDimsList([1]),s.setFloatDataList([t.beta??1]);const o=new e.TensorProto;o.setName(t.name+"_gamma"),o.setDataType(e.TensorProto.DataType.FLOAT),o.setDimsList([1]),o.setFloatDataList([t.gamma??0]);const i=Array.isArray(t.input)?t.input[0]:t.input,_=new e.NodeProto;_.setOpType("Softplus"),_.addInput(i),_.addOutput(t.name+"_softplus");const p=new e.NodeProto;p.setOpType("Mul"),p.addInput(t.name+"_softplus"),p.addInput(t.name+"_beta"),p.addOutput(t.name+"_mul_beta");const r=new e.NodeProto;r.setOpType("Sub"),r.addInput(t.name+"_mul_beta"),r.addInput(t.name+"_gamma"),r.addOutput(t.name+"_sub");const u=new e.NodeProto;u.setOpType("Mul"),u.addInput(i),u.addInput(t.name+"_alpha"),u.addOutput(t.name+"_mul_alpha");const m=new e.NodeProto;m.setOpType("Greater"),m.addInput(i),m.addInput(T),m.addOutput(t.name+"_greater");const n=new e.NodeProto;n.setOpType("Where"),n.addInput(t.name+"_greater"),n.addInput(t.name+"_mul_alpha"),n.addInput(t.name+"_sub"),n.addOutput(t.name);const a=l.getGraph();a.addInitializer(d),a.addInitializer(s),a.addInitializer(o),a.addNode(_),a.addNode(p),a.addNode(r),a.addNode(u),a.addNode(m),a.addNode(n)}};
