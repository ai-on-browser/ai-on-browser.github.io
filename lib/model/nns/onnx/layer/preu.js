import{onnx as e}from"../onnx_exporter.js";import{getConstNodeName as l}from"../utils.js";export default{export(r,t){const i=l(r,0),n=new e.TensorProto;n.setName(t.name+"_alpha"),n.setDataType(e.TensorProto.DataType.FLOAT),n.setDimsList([1]),n.setFloatDataList([t.alpha??1]);const d=new e.TensorProto;d.setName(t.name+"_beta"),d.setDataType(e.TensorProto.DataType.FLOAT),d.setDimsList([1]),d.setFloatDataList([t.beta??1]);const _=Array.isArray(t.input)?t.input[0]:t.input,p=new e.NodeProto;p.setOpType("Min"),p.addInput(_),p.addInput(i),p.addOutput(t.name+"_min");const o=new e.NodeProto;o.setOpType("Mul"),o.addInput(t.name+"_min"),o.addInput(t.name+"_beta"),o.addOutput(t.name+"_mul_b");const m=new e.NodeProto;m.setOpType("Exp"),m.addInput(t.name+"_mul_b"),m.addOutput(t.name+"_exp");const s=new e.NodeProto;s.setOpType("Mul"),s.addInput(_),s.addInput(t.name+"_alpha"),s.addOutput(t.name+"_mul_a");const u=new e.NodeProto;u.setOpType("Mul"),u.addInput(t.name+"_mul_a"),u.addInput(t.name+"_exp"),u.addOutput(t.name);const a=r.getGraph();a.addInitializer(n),a.addInitializer(d),a.addNode(p),a.addNode(o),a.addNode(m),a.addNode(s),a.addNode(u)}};
