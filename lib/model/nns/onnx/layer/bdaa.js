import{onnx as d}from"../onnx_exporter.js";import{getConstNodeName as i}from"../utils.js";export default{export(O,e){const c=i(O,1),x=i(O,2),t=new d.TensorProto;t.setName(e.name+"_alpha"),t.setDataType(d.TensorProto.DataType.FLOAT),t.setDimsList([1]),t.setFloatDataList([e.alpha??1]);const I=Array.isArray(e.input)?e.input[0]:e.input,s=new d.NodeProto;s.setOpType("Neg"),s.addInput(I),s.addOutput(e.name+"_neg");const r=new d.NodeProto;r.setOpType("Exp"),r.addInput(e.name+"_neg"),r.addOutput(e.name+"_neg_exp");const a=new d.NodeProto;a.setOpType("Add"),a.addInput(c),a.addInput(e.name+"_neg_exp"),a.addOutput(e.name+"_neg_exp_add1");const m=new d.NodeProto;m.setOpType("Reciprocal"),m.addInput(e.name+"_neg_exp_add1"),m.addOutput(e.name+"_term1");const p=new d.NodeProto;p.setOpType("Sub"),p.addInput(e.name+"_neg"),p.addInput(e.name+"_alpha"),p.addOutput(e.name+"_neg_sub");const N=new d.NodeProto;N.setOpType("Exp"),N.addInput(e.name+"_neg_sub"),N.addOutput(e.name+"_neg_sub_exp");const o=new d.NodeProto;o.setOpType("Add"),o.addInput(c),o.addInput(e.name+"_neg_sub_exp"),o.addOutput(e.name+"_neg_sub_exp_add1");const g=new d.NodeProto;g.setOpType("Reciprocal"),g.addInput(e.name+"_neg_sub_exp_add1"),g.addOutput(e.name+"_term2");const _=new d.NodeProto;_.setOpType("Sub"),_.addInput(e.name+"_term1"),_.addInput(e.name+"_term2"),_.addOutput(e.name+"_sub");const u=new d.NodeProto;u.setOpType("Div"),u.addInput(e.name+"_sub"),u.addInput(x),u.addOutput(e.name);const n=O.getGraph();n.addInitializer(t),n.addNode(s),n.addNode(r),n.addNode(a),n.addNode(m),n.addNode(p),n.addNode(N),n.addNode(o),n.addNode(g),n.addNode(_),n.addNode(u)}};
