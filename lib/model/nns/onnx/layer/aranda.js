import{onnx as d}from"../onnx_exporter.js";import{getConstNodeName as l}from"../utils.js";export default{export(_,e){const i=Array.isArray(e.input)?e.input[0]:e.input,u=new d.NodeProto;u.setOpType("Exp"),u.addInput(i),u.addOutput(e.name+"_exp");const a=new d.TensorProto;a.setName(e.name+"_l"),a.setDataType(d.TensorProto.DataType.FLOAT),a.setDimsList([1]),a.setFloatDataList([e.l??2]);const m=l(_,1),n=new d.NodeProto;n.setOpType("Mul"),n.addInput(e.name+"_exp"),n.addInput(e.name+"_l"),n.addOutput(e.name+"_mult");const p=new d.NodeProto;p.setOpType("Add"),p.addInput(e.name+"_mult"),p.addInput(m),p.addOutput(e.name+"_add");const s=new d.NodeProto;s.setOpType("Reciprocal"),s.addInput(e.name+"_add"),s.addOutput(e.name+"_reciprocal");const c=new d.NodeProto;c.setOpType("Reciprocal"),c.addInput(e.name+"_l"),c.addOutput(e.name+"_reciprocal_pow");const o=new d.NodeProto;o.setOpType("Pow"),o.addInput(e.name+"_reciprocal"),o.addInput(e.name+"_reciprocal_pow"),o.addOutput(e.name+"_pow");const r=new d.NodeProto;r.setOpType("Sub"),r.addInput(m),r.addInput(e.name+"_pow"),r.addOutput(e.name);const t=_.getGraph();t.addInitializer(a),t.addNode(u),t.addNode(n),t.addNode(p),t.addNode(s),t.addNode(c),t.addNode(o),t.addNode(r)}};
