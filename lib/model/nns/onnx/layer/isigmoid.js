import{onnx as e}from"../onnx_exporter.js";import{getConstNodeName as O}from"../utils.js";export default{export(r,t){const y=O(r,t.a??1),T=O(r,t.alpha??1),N=t.a??1,h=1/(1+Math.exp(-N)),A=1/(1+Math.exp(N)),I=O(r,(h+A)/(2*(t.alpha??1))),c=Array.isArray(t.input)?t.input[0]:t.input,a=new e.NodeProto;a.setOpType("Shrink"),a.addInput(c),a.addOutput(t.name+"_shrink");const u=new e.AttributeProto;u.setName("bias"),u.setType(e.AttributeProto.AttributeType.FLOAT),u.setF(N+(A-h)/(2*(t.alpha??1))),a.addAttribute(u);const i=new e.AttributeProto;i.setName("lambd"),i.setType(e.AttributeProto.AttributeType.FLOAT),i.setF(t.a??1),a.addAttribute(i);const o=new e.NodeProto;o.setOpType("Add"),o.addInput(t.name+"_shrink"),o.addInput(I),o.addOutput(t.name+"_add");const p=new e.NodeProto;p.setOpType("Mul"),p.addInput(t.name+"_add"),p.addInput(T),p.addOutput(t.name+"_mul");const m=new e.NodeProto;m.setOpType("Abs"),m.addInput(c),m.addOutput(t.name+"_abs");const s=new e.NodeProto;s.setOpType("Greater"),s.addInput(t.name+"_abs"),s.addInput(y),s.addOutput(t.name+"_ot_a");const _=new e.NodeProto;_.setOpType("Sigmoid"),_.addInput(c),_.addOutput(t.name+"_sigmoid");const n=new e.NodeProto;n.setOpType("Where"),n.addInput(t.name+"_ot_a"),n.addInput(t.name+"_mul"),n.addInput(t.name+"_sigmoid"),n.addOutput(t.name);const d=r.getGraph();d.addNode(a),d.addNode(o),d.addNode(p),d.addNode(m),d.addNode(s),d.addNode(_),d.addNode(n)}};
