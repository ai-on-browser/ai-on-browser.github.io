import{onnx as t}from"../onnx_exporter.js";import{getConstNodeName as w}from"../utils.js";export default{export(O,e){const I=w(O,0),o=new t.TensorProto;o.setName(e.name+"_a"),o.setDataType(t.TensorProto.DataType.FLOAT),o.setDimsList([1]),o.setFloatDataList([e.a??1]);const s=new t.TensorProto;s.setName(e.name+"_b"),s.setDataType(t.TensorProto.DataType.FLOAT),s.setDimsList([1]),s.setFloatDataList([e.b??1]);const p=new t.TensorProto;p.setName(e.name+"_c"),p.setDataType(t.TensorProto.DataType.FLOAT),p.setDimsList([1]),p.setFloatDataList([e.c??1]);const r=new t.TensorProto;r.setName(e.name+"_d"),r.setDataType(t.TensorProto.DataType.FLOAT),r.setDimsList([1]),r.setFloatDataList([e.d??1]);const _=new t.NodeProto;_.setOpType("Neg"),_.addInput(e.name+"_a"),_.addOutput(e.name+"_-a");const T=new t.NodeProto;T.setOpType("Neg"),T.addInput(e.name+"_b"),T.addOutput(e.name+"_-b");const c=Array.isArray(e.input)?e.input[0]:e.input,u=new t.NodeProto;u.setOpType("GreaterOrEqual"),u.addInput(c),u.addInput(I),u.addOutput(e.name+"_posneg");const n=new t.NodeProto;n.setOpType("Where"),n.addInput(e.name+"_posneg"),n.addInput(e.name+"_-b"),n.addInput(e.name+"_d"),n.addOutput(e.name+"_where1");const m=new t.NodeProto;m.setOpType("Div"),m.addInput(c),m.addInput(e.name+"_where1"),m.addOutput(e.name+"_div");const N=new t.NodeProto;N.setOpType("Elu"),N.addInput(e.name+"_div"),N.addOutput(e.name+"_elu");const d=new t.NodeProto;d.setOpType("Where"),d.addInput(e.name+"_posneg"),d.addInput(e.name+"_-a"),d.addInput(e.name+"_c"),d.addOutput(e.name+"_where2");const i=new t.NodeProto;i.setOpType("Mul"),i.addInput(e.name+"_elu"),i.addInput(e.name+"_where2"),i.addOutput(e.name);const a=O.getGraph();a.addInitializer(o),a.addInitializer(s),a.addInitializer(p),a.addInitializer(r),a.addNode(_),a.addNode(T),a.addNode(u),a.addNode(n),a.addNode(m),a.addNode(N),a.addNode(d),a.addNode(i)}};
