import onnx from"./onnx_pb.js";export{default as onnx}from"./onnx_pb.js";import input from"./operators/input.js";import output from"./operators/output.js";const operators={};export default class ONNXImporter{static async load(o){globalThis.File&&o instanceof File&&(o=new Uint8Array(await o.arrayBuffer())),o instanceof ArrayBuffer&&(o=new Uint8Array(o));const t=onnx.ModelProto.deserializeBinary(o).toObject(),r=[];for(const o of t.graph.inputList)r.push(...input.import(t,o));for(const o of t.graph.nodeList){const s=o.opType;if(!operators[s])try{const o=await import(`./operators/${s.toLowerCase()}.js`);operators[s]=o.default}catch(o){console.error(s,o.name,o.message);continue}const n=operators[s];r.push(...n.import(t,o))}for(const o of t.graph.outputList)r.push(...output.import(t,o));return r}}