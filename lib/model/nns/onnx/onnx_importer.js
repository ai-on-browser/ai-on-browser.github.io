import onnx from"./onnx_pb.js";export{default as onnx}from"./onnx_pb.js";import NeuralNetwork from"../../neuralnetwork.js";import input from"./operators/input.js";import output from"./operators/output.js";const operators={};export default class ONNXImporter{static async load(o){globalThis.File&&o instanceof File&&(o=new Uint8Array(await o.arrayBuffer())),o instanceof ArrayBuffer&&(o=new Uint8Array(o));const r=onnx.ModelProto.deserializeBinary(o).toObject(),t=[];for(const o of r.graph.inputList)t.push(...input.import(r,o));for(const o of r.graph.nodeList){const e=o.opType;if(!operators[e])try{const o=await import(`./operators/${e.toLowerCase()}.js`);operators[e]=o.default}catch(o){console.error(e,o.name,o.message);continue}const n=operators[e];t.push(...n.import(r,o))}for(const o of r.graph.outputList)t.push(...output.import(r,o));return NeuralNetwork.fromObject(t)}}