import onnx from"./onnx_pb.js";export{default as onnx}from"./onnx_pb.js";import input from"./operators/input.js";import output from"./operators/output.js";const operators={};export default class ONNXImporter{static async load(o){o.arrayBuffer&&"function"==typeof o.arrayBuffer&&(o=new Uint8Array(await o.arrayBuffer())),o instanceof ArrayBuffer&&(o=new Uint8Array(o));const t=onnx.ModelProto.deserializeBinary(o),r=t.getGraph(),e=[];for(const o of r.getInputList())e.push(...input.import(t,o));for(const o of r.getNodeList()){const r=o.getOpType();if(!operators[r])try{const o=await import(`./operators/${r.toLowerCase()}.js`);operators[r]=o.default}catch(o){console.error(r,o.name,o.message);continue}const n=operators[r];e.push(...n.import(t,o))}for(const o of r.getOutputList())e.push(...output.import(t,o));return e}}