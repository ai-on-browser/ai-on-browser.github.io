var z=Object.defineProperty;var x=(w,n)=>z(w,"name",{value:n,configurable:!0});import p from"./onnx_pb.js";export{default as onnx}from"./onnx_pb.js";import*as b from"./layer/index.js";export default class c{static{x(this,"ONNXExporter")}static createONNXModel(){const n=new p.ModelProto;n.setProducerName("ai-on-browser/data-analysis-models"),n.setProducerVersion("0.23.0"),n.setIrVersion(9);const a=new p.OperatorSetIdProto;a.setDomain(""),a.setVersion(19),n.addOpsetImport(a);const t=new p.GraphProto;return t.setName("graph"),n.setGraph(t),n}static getLayerExporter(n){return n=n.toLowerCase(),b[n]?b[n]:(console.error(`Unimplemented layer ${n}.`),null)}static dump(n){const a=c.createONNXModel(),t=[],m=new Set;for(const e of n)t.push({...e}),e.name&&m.add(e.name);const f=new Set;for(let e=0;e<t.length;e++){if(!t[e].name){const o=`_${t[e].type}`;let r=o,s=1;for(;m.has(r);)r=o+"_"+s,s++;t[e].name=r,m.add(r)}if(e>0&&!t[e].input&&(t[e].input=t[e-1].name),Array.isArray(t[e].input))for(let o=0;o<t[e].input.length;o++)typeof t[e].input[o]=="number"&&(f.add(t[e].input[o]),t[e].input[o]=`__const_number_${t[e].input[o]}`);else typeof t[e].input=="number"&&(f.add(t[e].input),t[e].input=`__const_number_${t[e].input}`)}for(const e of f)t.unshift({type:"const",value:e,name:`__const_number_${e}`});const i={};for(const e of t){const o=c.getLayerExporter(e.type);if(o==null)continue;const r=o.export(a,e,i),s=Array.isArray(e.input)?e.input:[e.input];if(i[e.name]={type:p.TensorProto.DataType.Float,...i[s[0]],...r},!r?.size&&s.length>1){let u=i[e.name].size;for(let d=1;d<s.length;d++){const l=i[s[d]].size;if(!l)continue;const h=Math.max(l.length,u.length);u=Array.from({length:h},(N,y)=>{const g=u[u.length-h+y],_=l[l.length-h+y];return g==null||_==null?null:Math.max(g,_)})}i[e.name].size=u}}return a.serializeBinary()}}
