import{onnx}from"../onnx_importer.js";import{loadTensor,loadAttribute}from"../utils.js";import Tensor from"../../../../util/tensor.js";export default{import(t,r){const e={};for(const t of r.attributeList)e[t.name]=loadAttribute(t);const o={};let a=null;for(const e of t.graph.initializerList)e.name===r.inputList[1]?(o.w=Tensor.fromArray(loadTensor(e)),a=o.w.sizes,o.w=o.w.transpose(1,2,3,0).toArray()):e.name===r.inputList[2]&&(o.b=loadTensor(e));if(e.group&&1!==e.group)throw new Error(`Invalid attribute 'group' value ${e.group}.`);if(e.pads&&e.pads.some((t=>t!==e.pads[0])))throw new Error(`Invalid attribute 'pads' value ${e.pads}.`);if(e.strides&&e.strides.some((t=>t!==e.strides[0])))throw new Error(`Invalid attribute 'strides' value ${e.strides}.`);if("SAME_UPPER"===e.auto_pad)e.pads=e.kernel_shape.map((t=>Math.ceil((t-1)/2)));else if(e.auto_pad&&"NOTSET"!==e.auto_pad)throw new Error(`Invalid attribute 'auto_pad' value ${e.auto_pad}.`);return[{type:"conv",input:[r.inputList[0]],name:r.outputList[0],kernel:a.slice(2),channel:a[0],padding:e.pads?e.pads[0]:null,stride:e.strides?e.strides[0]:null,w:o.w,channel_dim:1}]}};