import{onnx}from"../onnx_importer.js";import{loadTensor,loadAttribute}from"../utils.js";import Matrix from"../../../../util/matrix.js";export default{import(t,r){const a={};for(const t of r.attributeList)a[t.name]=loadAttribute(t);a.alpha??=1,a.beta??=1;const i=[];let o=r.inputList[0];a.transA&&i.push({type:"transpose",input:[o],name:o+="_t",axis:[1,0]});const n={};for(const i of t.graph.initializerList)if(i.name===r.inputList[1])n.w=Matrix.fromArray(loadTensor(i)),a.transB&&(n.w=n.w.t),n.w.mult(a.alpha),n.w=n.w.toArray();else if(i.name===r.inputList[2]){const t=loadTensor(i);!Array.isArray(t)||Array.isArray(t[0])?n.b=Matrix.fromArray(t):n.b=new Matrix(1,t.length,t),n.b.mult(a.beta),n.b=n.b.toArray()}return i.push({type:"full",input:[o],name:r.outputList[0],w:n.w,b:n.b}),i}};