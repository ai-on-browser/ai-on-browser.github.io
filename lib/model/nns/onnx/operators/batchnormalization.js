import"../onnx_importer.js";import{loadTensor as o,loadAttribute as p}from"../utils.js";export default{import(m,r){const a={epsilon:1e-5,momentum:.9,training_mode:0};for(const t of r.getAttributeList())a[t.getName()]=p(t);const e=r.getInputList(),i={};for(const t of m.getGraph().getInitializerList())t.getName()===e[1]?i.scale=o(t):t.getName()===e[2]?i.b=o(t):t.getName()===e[3]?i.inputMean=o(t):t.getName()===e[4]&&(i.inputVar=o(t));if(a.training_mode)throw new Error(`Invalid attribute 'training_mode' value ${a.training_mode}.`);const n=r.getOutputList(),s=[{type:"batch_normalization",input:[e[0]],name:n[0],scale:i.scale??e[1],offset:i.b??e[2],epsilon:a.epsilon??1e-5,input_mean:i.b??e[3],input_var:i.b??e[4],channel_dim:1}];return n.length>=2&&s.push({type:"identity",input:[`${n[0]}[mean]`],name:n[1]}),n.length>=3&&s.push({type:"identity",input:[`${n[0]}[var]`],name:n[2]}),s}};
