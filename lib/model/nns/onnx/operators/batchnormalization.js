import{onnx}from"../onnx_importer.js";import{loadTensor,loadAttribute}from"../utils.js";export default{import(t,e){const n={epsilon:1e-5,momentum:.9,training_mode:0};for(const t of e.getAttributeList())n[t.getName()]=loadAttribute(t);const i=e.getInputList(),o={};for(const e of t.getGraph().getInitializerList())e.getName()===i[1]?o.scale=loadTensor(e):e.getName()===i[2]?o.b=loadTensor(e):e.getName()===i[3]?o.inputMean=loadTensor(e):e.getName()===i[4]&&(o.inputVar=loadTensor(e));if(n.training_mode)throw new Error(`Invalid attribute 'training_mode' value ${n.training_mode}.`);const a=e.getOutputList(),r=[{type:"batch_normalization",input:[i[0]],name:a[0],scale:o.scale??i[1],offset:o.b??i[2],epsilon:n.epsilon??1e-5,input_mean:o.b??i[3],input_var:o.b??i[4],channel_dim:1}];return a.length>=2&&r.push({type:"identity",input:[`${a[0]}[mean]`],name:a[1]}),a.length>=3&&r.push({type:"identity",input:[`${a[0]}[var]`],name:a[2]}),r}};