var c=Object.defineProperty;var o=(r,e)=>c(r,"name",{value:e,configurable:!0});import _ from"./base.js";import p from"../../../util/matrix.js";import n from"../../../util/tensor.js";export default class a extends _{static{o(this,"ReduceMinLayer")}constructor({axis:e=-1,keepdims:t=!0,...i}){super(i),this._axis=typeof e=="number"?[e]:e,this._keepdims=t}calc(e){const t=typeof this._axis=="string"?this.graph.getNode(this._axis).outputValue.toArray():this._axis;if(t.includes(-1))this._size=Array(e.dimension).fill(1);else{this._size=e.sizes.concat();for(let i=0;i<t.length;i++)this._size[t[i]]=1}if(this._i=e,!this._keepdims&&t.includes(-1))return this._o=e.reduce((i,s)=>Math.min(i,s),1/0),new n([],this._o);if(!this._keepdims&&e instanceof p&&(e=n.fromArray(e)),this._o=e.reduce((i,s)=>Math.min(i,s),1/0,t,!0),!this._keepdims){const i=this._o.copy();return i.reshape(...i.sizes.filter((s,h)=>!t.includes(h))),i}return this._o}grad(e){e.reshape(...this._size);const t=this._i.copy();return t.broadcastOperate(this._o,(i,s)=>s===i?1:0),t.broadcastOperate(e,(i,s)=>i*s),t}toObject(){return{type:"reduce_min",axis:this._axis,keepdims:this._keepdims}}}a.registLayer();
