var o=Object.defineProperty;var h=(r,t)=>o(r,"name",{value:t,configurable:!0});import d from"./base.js";import a from"../../../util/tensor.js";export default class n extends d{static{h(this,"VariableLayer")}constructor({size:t,l2_decay:e=0,l1_decay:i=0,value:s=null,..._}){super(_),this._size=t,this._v=null,s?this._v=a.fromArray(s):typeof t!="string"&&(this._v=a.randn(t)),this._v&&this._v.dimension===2&&(this._v=this._v.toMatrix()),this._l2_decay=e,this._l1_decay=i,this._n=1}get dependentLayers(){const t=[];return typeof this._size=="string"&&t.push(this._size),t}bind({n:t}){this._n=t}calc(){if(!this._v){const t=this.graph.getNode(this._size).lastOutputSize;this._v=a.randn(t),this._v.dimension===2&&(this._v=this._v.toMatrix())}return this._v}grad(t){this._bo=t}update(t){const e=this._bo.copy();e.map(i=>i/this._n),(this._l2_decay>0||this._l1_decay>0)&&e.map((i,s)=>{const _=this._v.at(s);return i+_*this._l2_decay+Math.sign(_)*this._l1_decay}),this._v.broadcastOperate(t.delta("v",e),(i,s)=>i-s)}toObject(){return{type:"variable",size:this._size,l2_decay:this._l2_decay,l1_decay:this._l1_decay,value:this._v?.toArray()}}}n.registLayer();
