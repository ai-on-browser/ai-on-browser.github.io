import Layer from"./base.js";import Tensor from"../../../util/tensor.js";export default class VariableLayer extends Layer{constructor({size:t,l2_decay:s=0,l1_decay:i=0,value:e=null,...a}){super(a),this._size=t,this._v=null,e?this._v=Tensor.fromArray(e):"string"!=typeof t&&(this._v=Tensor.randn(t)),this._v&&2===this._v.dimension&&(this._v=this._v.toMatrix()),this._l2_decay=s,this._l1_decay=i,this._n=1}bind({n:t}){this._n=t}calc(){if(!this._v){const t=this.graph.getNode(this._size).lastOutputSize;this._v=Tensor.randn(t),2===this._v.dimension&&(this._v=this._v.toMatrix())}return this._v}grad(t){this._bo=t}update(t){const s=this._bo.copy();s.map((t=>t/this._n)),(this._l2_decay>0||this._l1_decay>0)&&s.map(((t,s)=>{const i=this._v.at(s);return t+i*this._l2_decay+Math.sign(i)*this._l1_decay})),this._v.broadcastOperate(t.delta("v",s),((t,s)=>t-s))}toObject(){return{type:"variable",size:this._size,l2_decay:this._l2_decay,l1_decay:this._l1_decay,value:this._v.toArray()}}}VariableLayer.registLayer();