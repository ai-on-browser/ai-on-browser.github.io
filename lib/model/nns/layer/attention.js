import Matrix from"../../../util/matrix.js";import Tensor from"../../../util/tensor.js";import Layer from"./base.js";export default class AttentionLayer extends Layer{constructor({dk:t=null,dv:s=null,wq:i=null,wk:e=null,wv:h=null,...a}){super(a),this._dk=t,this._dv=s,this._wq=null,"string"==typeof i?this._wqname=i:i&&(this._wq=Matrix.fromArray(i)),this._wk=null,"string"==typeof e?this._wkname=e:e&&(this._wk=Matrix.fromArray(e)),this._wv=null,"string"==typeof h?this._wvname=h:h&&(this._wv=Matrix.fromArray(h))}calc(t,s){this._selfattention=!s,s||(s=t),this._dk??=t.sizes.at(-1),this._wqname&&(this._wq=this.graph.getNode(this._wqname).outputValue),this._wq||(this._wq=Matrix.randn(t.sizes[2],this._dk)),this._wkname&&(this._wk=this.graph.getNode(this._wkname).outputValue),this._wk||(this._wk=Matrix.randn(s.sizes[2],this._dk)),this._dv??=t.sizes.at(-1),this._wvname&&(this._wv=this.graph.getNode(this._wvname).outputValue),this._wv||(this._wv=Matrix.randn(s.sizes[2],this._dv)),this._i=t,this._m=s,this._q=t.dot(this._wq),this._k=s.dot(this._wk),this._v=s.dot(this._wv);const i=this._matmul(this._q,this._k,!1,!0);this._atn=i.copy();for(let t=0;t<i.sizes[0];t++)for(let s=0;s<i.sizes[1];s++){let e=[];for(let h=0;h<i.sizes[2];h++)e[h]=i.at(t,s,h)/Math.sqrt(this._dk);const h=e.reduce(((t,s)=>Math.max(t,s)),-1/0);let a=0;for(let t=0;t<i.sizes[2];t++)e[t]=Math.exp(e[t]-h),a+=e[t];for(let h=0;h<i.sizes[2];h++)this._atn.set([t,s,h],e[h]/a)}return this._matmul(this._atn,this._v)}_matmul(t,s,i=!1,e=!1){const h=[t.sizes[0],i?t.sizes[2]:t.sizes[1],e?s.sizes[1]:s.sizes[2]],a=i?t.sizes[1]:t.sizes[2],_=new Tensor(h);for(let r=0;r<h[0];r++)for(let n=0;n<h[1];n++)for(let w=0;w<h[2];w++){let h=0;for(let _=0;_<a;_++)h+=(i?t.at(r,_,n):t.at(r,n,_))*(e?s.at(r,w,_):s.at(r,_,w));_.set([r,n,w],h)}return _}grad(t){const s=t.sizes[0],i=this._matmul(this._atn,t,!0),e=this._matmul(this._m,i,!0);this._dwv=e.reduce(((t,s)=>t+s),0,0).toMatrix(),this._dwv.map((t=>t/s));const h=this._matmul(t,this._v,!1,!0),a=h.copy();for(let t=0;t<h.sizes[0];t++)for(let s=0;s<h.sizes[1];s++)for(let i=0;i<h.sizes[2];i++){const e=h.at(t,s,i);let _=0;for(let a=0;a<h.sizes[2];a++){const r=i===a?1-e:-e;_+=this._atn.at(t,s,a)*r*h.at(t,s,a)}a.set([t,s,i],_/Math.sqrt(this._dk))}const _=this._matmul(a,this._k),r=this._matmul(this._i,_,!0);this._dwq=r.reduce(((t,s)=>t+s),0,0).toMatrix(),this._dwq.map((t=>t/s));const n=_.dot(this._wq.t),w=this._matmul(a,this._q,!0),o=this._matmul(this._m,w,!0);this._dwk=o.reduce(((t,s)=>t+s),0,0).toMatrix(),this._dwk.map((t=>t/s));const m=w.dot(this._wk.t);if(m.broadcastOperate(i.dot(this._wv.t),((t,s)=>t+s)),this._selfattention&&n.broadcastOperate(m,((t,s)=>t+s)),this._wqname||this._wkname||this._wvname){const t={};return this._wqname&&(t[this._wqname]=this._dwq),this._wkname&&(t[this._wkname]=this._dwk),this._wvname&&(t[this._wvname]=this._dwv),this._selfattention?[n,t]:[n,m,t]}return this._selfattention?n:[n,m]}update(t){this._wqname||this._wq.sub(t.delta("wq",this._dwq)),this._wkname||this._wk.sub(t.delta("wk",this._dwk)),this._wvname||this._wv.sub(t.delta("wv",this._dwv))}toObject(){return{type:"attention",dk:this._dk,dv:this._dv,wq:this._wqname||this._wq?.toArray(),wk:this._wkname||this._wk?.toArray(),wv:this._wvname||this._wv?.toArray()}}}AttentionLayer.registLayer();