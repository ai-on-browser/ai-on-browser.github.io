var f=Object.defineProperty;var c=(r,i)=>f(r,"name",{value:i,configurable:!0});import z,{NeuralnetworkLayerException as p}from"./base.js";import d from"../../../util/tensor.js";export default class m extends z{static{c(this,"GlobalAveragePoolLayer")}constructor({channel_dim:i=-1,...s}){if(super(s),this._channel_dim=i,this._channel_dim!==-1&&this._channel_dim!==1)throw new p("Invalid channel dimension.")}_index(i,s,n){return this._channel_dim===-1?[i,...n,s]:[i,s,...n]}calc(i){this._i=i;const s=i.sizes.slice(1),n=Array(i.sizes.length).fill(1);n[0]=i.sizes[0],this._channel_dim===-1?(n[i.dimension-1]=i.sizes[i.dimension-1],s.pop()):this._channel_dim===1&&(n[1]=i.sizes[1],s.splice(0,1));const _=this._channel_dim===-1?i.sizes[i.dimension-1]:i.sizes[1];this._o=new d(n);const o=this._i.length/this._o.length;for(let h=0;h<i.sizes[0];h++)for(let t=0;t<_;t++){const e=Array(i.dimension-2).fill(0);let a=0;do{a+=i.at(this._index(h,t,e));for(let l=0;l<e.length&&(e[l]++,!(e[l]<s[l]));l++)e[l]=0}while(e.some(l=>l>0));this._o.set(this._index(h,t,Array(i.dimension-2).fill(0)),a/o)}return this._o}grad(i){this._bo=i,this._bi=new d(this._i.sizes);const s=this._i.sizes.slice(1);this._channel_dim===-1?s.pop():this._channel_dim===1&&s.splice(0,1);const n=this._channel_dim===-1?this._i.sizes[this._i.dimension-1]:this._i.sizes[1],_=this._i.length/this._o.length;for(let o=0;o<this._i.sizes[0];o++)for(let h=0;h<n;h++){const t=Array(this._i.dimension-2).fill(0);do{this._bi.set(this._index(o,h,t),this._bo.at(this._index(o,h,Array(this._i.dimension-2).fill(0)))/_);for(let e=0;e<t.length&&(t[e]++,!(t[e]<s[e]));e++)t[e]=0}while(t.some(e=>e>0))}return this._bi}toObject(){return{type:"global_average_pool",channel_dim:this._channel_dim}}}m.registLayer();
