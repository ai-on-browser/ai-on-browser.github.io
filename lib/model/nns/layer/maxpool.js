var y=Object.defineProperty;var c=(m,i)=>y(m,"name",{value:i,configurable:!0});import k,{NeuralnetworkLayerException as f}from"./base.js";import p from"../../../util/tensor.js";export default class g extends k{static{c(this,"MaxPoolLayer")}constructor({kernel:i,stride:r=null,padding:d=null,channel_dim:_=-1,...t}){if(super(t),this._kernel=i,this._stride=r||i,this._padding=d||0,this._channel_dim=_,this._channel_dim!==-1&&this._channel_dim!==1)throw new f("Invalid channel dimension.")}_index(i,r,d){return this._channel_dim===-1?[i,...d,r]:[i,r,...d]}calc(i){if(Array.isArray(this._kernel)||(this._kernel=Array(i.dimension-2).fill(this._kernel)),i.dimension!==this._kernel.length+2)throw new f("Invalid kernel size",[this,i]);if(Array.isArray(this._stride)||(this._stride=Array(i.dimension-2).fill(this._stride)),i.dimension!==this._stride.length+2)throw new f("Invalid stride size",[this,i]);if(Array.isArray(this._padding)?Array.isArray(this._padding[0])||(this._padding=this._padding.map(t=>[t,t])):this._padding=Array.from({length:i.dimension-2},()=>[this._padding,this._padding]),i.dimension!==this._padding.length+2)throw new f("Invalid padding size",[this,i]);this._i=i;const r=this._channel_dim===-1?1:2,d=[i.sizes[0],...this._kernel.map((t,n)=>Math.ceil(Math.max(0,i.sizes[n+r]+this._padding[n][0]+this._padding[n][1]-t)/this._stride[n])+1)];this._channel_dim===-1?d.push(i.sizes[i.dimension-1]):this._channel_dim===1&&d.splice(1,0,i.sizes[1]);const _=this._channel_dim===-1?i.sizes[i.dimension-1]:i.sizes[1];this._o=new p(d);for(let t=0;t<i.sizes[0];t++)for(let n=0;n<_;n++){const h=Array(i.dimension-2).fill(0);do{const l=Array(i.dimension-2).fill(0);let o=-1/0;do{const e=h.map((s,a)=>s*this._stride[a]-this._padding[a][0]+l[a]);if(e.every((s,a)=>0<=s&&s<i.sizes[a+r])){const s=i.at(this._index(t,n,e));o<s&&(o=s)}for(let s=0;s<l.length&&(l[s]++,!(l[s]<this._kernel[s]));s++)l[s]=0}while(l.some(e=>e>0));this._o.set(this._index(t,n,h),o);for(let e=0;e<h.length&&(h[e]++,!(h[e]<d[e+r]));e++)h[e]=0}while(h.some(l=>l>0))}return this._o}grad(i){this._bo=i,this._bi=new p(this._i.sizes);const r=this._channel_dim===-1?1:2,d=this._channel_dim===-1?this._i.sizes[this._i.dimension-1]:this._i.sizes[1];for(let _=0;_<this._i.sizes[0];_++)for(let t=0;t<d;t++){const n=Array(this._i.dimension-2).fill(0);do{const h=Array(this._i.dimension-2).fill(0);let l=-1/0,o=null;do{const e=n.map((s,a)=>s*this._stride[a]-this._padding[a][0]+h[a]);if(e.every((s,a)=>0<=s&&s<this._i.sizes[a+r])){const s=this._i.at(this._index(_,t,e));l<s&&(l=s,o=e)}for(let s=0;s<h.length&&(h[s]++,!(h[s]<this._kernel[s]));s++)h[s]=0}while(h.some(e=>e>0));this._bi.operateAt(this._index(_,t,o),e=>e+this._bo.at(this._index(_,t,n)));for(let e=0;e<n.length&&(n[e]++,!(n[e]<this._o.sizes[e+r]));e++)n[e]=0}while(n.some(h=>h>0))}return this._bi}toObject(){return{type:"max_pool",kernel:this._kernel,stride:this._stride,padding:this._padding,channel_dim:this._channel_dim}}}g.registLayer();
