import Layer from"./base.js";export default class TrainableAFLayer extends Layer{constructor({a:t=0,b:a=0,...s}){super(s),this._a=t,this._b=a}calc(t){this._i=t;const a=t.copy();return a.map((t=>Math.sqrt((t-this._a)**2+this._b**2))),a}grad(t){this._bo=t;const a=t.copy();return a.broadcastOperate(this._i,((t,a)=>t*(a-this._a)/Math.sqrt((a-this._a)**2+this._b**2))),a}update(t){let a=0,s=0;for(let t=0;t<this._i.length;t++)a+=this._bo.value[t]*((this._a-this._i.value[t])/Math.sqrt((this._i.value[t]-this._a)**2+this._b**2)),s+=this._bo.value[t]*(this._b/Math.sqrt((this._i.value[t]-this._a)**2+this._b**2));this._a-=t.delta("a",a/this._i.length),this._b-=t.delta("b",s/this._i.length)}toObject(){return{type:"taf",a:this._a,b:this._b}}}TrainableAFLayer.registLayer("taf");