var f=Object.defineProperty;var c=(r,i)=>f(r,"name",{value:i,configurable:!0});import z,{NeuralnetworkLayerException as p}from"./base.js";import d from"../../../util/tensor.js";export default class m extends z{static{c(this,"GlobalMaxPoolLayer")}constructor({channel_dim:i=-1,...n}){if(super(n),this._channel_dim=i,this._channel_dim!==-1&&this._channel_dim!==1)throw new p("Invalid channel dimension.")}_index(i,n,l){return this._channel_dim===-1?[i,...l,n]:[i,n,...l]}calc(i){this._i=i;const n=i.sizes.slice(1),l=Array(i.sizes.length).fill(1);l[0]=i.sizes[0],this._channel_dim===-1?(l[i.dimension-1]=i.sizes[i.dimension-1],n.pop()):this._channel_dim===1&&(l[1]=i.sizes[1],n.splice(0,1));const _=this._channel_dim===-1?i.sizes[i.dimension-1]:i.sizes[1];this._o=new d(l);for(let t=0;t<i.sizes[0];t++)for(let e=0;e<_;e++){const h=Array(i.dimension-2).fill(0);let a=-1/0;do{const o=i.at(this._index(t,e,h));a<o&&(a=o);for(let s=0;s<h.length&&(h[s]++,!(h[s]<n[s]));s++)h[s]=0}while(h.some(o=>o>0));this._o.set(this._index(t,e,Array(i.dimension-2).fill(0)),a)}return this._o}grad(i){this._bo=i,this._bi=new d(this._i.sizes);const n=this._i.sizes.slice(1);this._channel_dim===-1?n.pop():this._channel_dim===1&&n.splice(0,1);const l=this._channel_dim===-1?this._i.sizes[this._i.dimension-1]:this._i.sizes[1];for(let _=0;_<this._i.sizes[0];_++)for(let t=0;t<l;t++){const e=Array(this._i.dimension-2).fill(0);let h=-1/0,a=null;do{const o=this._i.at(this._index(_,t,e));h<o&&(h=o,a=e.concat());for(let s=0;s<e.length&&(e[s]++,!(e[s]<n[s]));s++)e[s]=0}while(e.some(o=>o>0));this._bi.set(this._index(_,t,a),this._bo.at(this._index(_,t,e)))}return this._bi}toObject(){return{type:"global_max_pool",channel_dim:this._channel_dim}}}m.registLayer();
