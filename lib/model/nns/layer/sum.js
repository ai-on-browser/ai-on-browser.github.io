import Layer from"./base.js";import Matrix from"../../../util/matrix.js";import Tensor from"../../../util/tensor.js";export default class SumLayer extends Layer{constructor({axis:e=-1,keepdims:s=!0,...i}){super(i),this._axis="number"==typeof e?[e]:e,this._keepdims=s}calc(e){const s="string"==typeof this._axis?this.graph.getNode(this._axis).outputValue.toArray():this._axis;if(s.includes(-1))this._size=Array(e.dimension).fill(1);else{this._size=e.sizes.concat();for(let e=0;e<s.length;e++)this._size[s[e]]=1}return this._i=e,!this._keepdims&&s.includes(-1)?new Tensor([],e.reduce(((e,s)=>e+s),0)):(!this._keepdims&&e instanceof Matrix&&(e=Tensor.fromArray(e)),e.reduce(((e,s)=>e+s),0,s,this._keepdims))}grad(e){e.reshape(...this._size);const s=this._i.copy();return s.broadcastOperate(e,((e,s)=>s)),s}toObject(){return{type:"sum",axis:this._axis,keepdims:this._keepdims}}}SumLayer.registLayer();