var n=Object.defineProperty;var a=(r,e)=>n(r,"name",{value:e,configurable:!0});import p from"./base.js";import u from"../../../util/matrix.js";import o from"../../../util/tensor.js";export default class h extends p{static{a(this,"SumLayer")}constructor({axis:e=-1,keepdims:s=!0,...i}){super(i),this._axis=typeof e=="number"?[e]:e,this._keepdims=s}calc(e){const s=typeof this._axis=="string"?this.graph.getNode(this._axis).outputValue.toArray():this._axis;if(s.includes(-1))this._size=Array(e.dimension).fill(1);else{this._size=e.sizes.concat();for(let i=0;i<s.length;i++)this._size[s[i]]=1}return this._i=e,!this._keepdims&&s.includes(-1)?new o([],e.reduce((i,t)=>i+t,0)):(!this._keepdims&&e instanceof u&&(e=o.fromArray(e)),e.reduce((i,t)=>i+t,0,s,this._keepdims))}grad(e){e.reshape(...this._size);const s=this._i.copy();return s.broadcastOperate(e,(i,t)=>t),s}toObject(){return{type:"sum",axis:this._axis,keepdims:this._keepdims}}}h.registLayer();
