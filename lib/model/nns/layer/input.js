var _=Object.defineProperty;var a=(o,e)=>_(o,"name",{value:e,configurable:!0});import f,{NeuralnetworkLayerException as l}from"./base.js";import r from"../../../util/matrix.js";import t from"../../../util/tensor.js";export default class n extends f{static{a(this,"InputLayer")}constructor({name:e=null,size:s=null,...i}){super(i),this._name=e,this._size=s}bind({input:e}){if(e&&!Array.isArray(e)&&!(e instanceof r)&&!(e instanceof t)&&e[this._name]&&(e=e[this._name]),Array.isArray(e)?(this._o=t.fromArray(e),this._o.dimension===2&&(this._o=this._o.toMatrix())):e instanceof r||e instanceof t?this._o=e:this._o=new r(1,1,e),this._size){const s=this._o.sizes;if(s.length!==this._size.length||this._size.some((i,h)=>i!=null&&i!==s[h]))throw new l("Invalid input size",[this])}}calc(){return this._o}grad(){}toObject(){return{type:"input",name:this._name,size:this._size?.concat()}}}n.registLayer();
