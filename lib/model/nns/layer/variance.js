import Layer from"./base.js";import Matrix from"../../../util/matrix.js";export default class VarLayer extends Layer{constructor({axis:s=-1,...t}){super(t),this._axis=s}calc(s){if(this._i=s,this._axis<0)return this._m=s.reduce(((s,t)=>s+t),0,this._axis)/s.length,new Matrix(1,1,s.reduce(((s,t)=>s+(t-this._m)**2),0)/s.length);this._m=s.reduce(((s,t)=>s+t),0,this._axis,!0),this._m.map((t=>t/s.sizes[this._axis]));const t=s.copy();t.broadcastOperate(this._m,((s,t)=>s-t));const i=t.reduce(((s,t)=>s+t**2),0,this._axis,!0);return i.map((t=>t/s.sizes[this._axis])),i}grad(s){if(this._axis<0){const t=this._i.copy();return t.map((t=>s.toScaler()*(2*(t-this._m))/this._i.length)),t}const t=this._i.copy();return t.broadcastOperate(this._m,((s,t)=>2*(s-t)/this._i.sizes[this._axis])),t.broadcastOperate(s,((s,t)=>s*t)),t}toObject(){return{type:"variance",axis:this._axis}}}VarLayer.registLayer("variance");