import Layer from"./base.js";export default class SelfLearnableAFLayer extends Layer{constructor({n:t=3,a:e=1,...a}){super(a),this._n=t,Array.isArray(e)?this._a=e:this._a=Array(t).fill(e)}calc(t){this._i=t;const e=t.copy();return e.map((t=>this._a.reduce(((e,a,r)=>e+a*t**r),0))),e}grad(t){this._bo=t;const e=t.copy();return e.broadcastOperate(this._i,((t,e)=>t*this._a.reduce(((t,a,r)=>t+r*a*e**(r-1)),0))),e}update(t){const e=Array(this._n).fill(0);for(let t=0;t<this._i.length;t++)for(let a=0;a<this._n;a++)e[a]+=this._bo.value[t]*this._i.value[t]**a;for(let a=0;a<this._n;a++)this._a[a]-=t.delta(`a${a}`,e[a]/this._i.length)}toObject(){return{type:"slaf",n:this._n,a:this._a}}}SelfLearnableAFLayer.registLayer("slaf");