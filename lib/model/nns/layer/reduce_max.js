var p=Object.defineProperty;var a=(r,e)=>p(r,"name",{value:e,configurable:!0});import _ from"./base.js";import c from"../../../util/matrix.js";import o from"../../../util/tensor.js";export default class h extends _{static{a(this,"ReduceMaxLayer")}constructor({axis:e=-1,keepdims:s=!0,...t}){super(t),this._axis=typeof e=="number"?[e]:e,this._keepdims=s}get dependentLayers(){const e=[];return typeof this._axis=="string"&&e.push(this._axis),e}calc(e){const s=typeof this._axis=="string"?this.graph.getNode(this._axis).outputValue.toArray():this._axis;if(s.includes(-1))this._size=Array(e.dimension).fill(1);else{this._size=e.sizes.concat();for(let t=0;t<s.length;t++)this._size[s[t]]=1}if(this._i=e,!this._keepdims&&s.includes(-1))return this._o=e.reduce((t,i)=>Math.max(t,i),-1/0),new o([],this._o);if(!this._keepdims&&e instanceof c&&(e=o.fromArray(e)),this._o=e.reduce((t,i)=>Math.max(t,i),-1/0,s,!0),!this._keepdims){const t=this._o.copy();return t.reshape(...t.sizes.filter((i,n)=>!s.includes(n))),t}return this._o}grad(e){e.reshape(...this._size);const s=this._i.copy();return s.broadcastOperate(this._o,(t,i)=>i===t?1:0),s.broadcastOperate(e,(t,i)=>t*i),s}toObject(){return{type:"reduce_max",axis:this._axis,keepdims:this._keepdims}}}h.registLayer();
