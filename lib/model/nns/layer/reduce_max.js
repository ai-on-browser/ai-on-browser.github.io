var c=Object.defineProperty;var a=(r,e)=>c(r,"name",{value:e,configurable:!0});import _ from"./base.js";import p from"../../../util/matrix.js";import o from"../../../util/tensor.js";export default class h extends _{static{a(this,"ReduceMaxLayer")}constructor({axis:e=-1,keepdims:i=!0,...t}){super(t),this._axis=typeof e=="number"?[e]:e,this._keepdims=i}calc(e){const i=typeof this._axis=="string"?this.graph.getNode(this._axis).outputValue.toArray():this._axis;if(i.includes(-1))this._size=Array(e.dimension).fill(1);else{this._size=e.sizes.concat();for(let t=0;t<i.length;t++)this._size[i[t]]=1}if(this._i=e,!this._keepdims&&i.includes(-1))return this._o=e.reduce((t,s)=>Math.max(t,s),-1/0),new o([],this._o);if(!this._keepdims&&e instanceof p&&(e=o.fromArray(e)),this._o=e.reduce((t,s)=>Math.max(t,s),-1/0,i,!0),!this._keepdims){const t=this._o.copy();return t.reshape(...t.sizes.filter((s,n)=>!i.includes(n))),t}return this._o}grad(e){e.reshape(...this._size);const i=this._i.copy();return i.broadcastOperate(this._o,(t,s)=>s===t?1:0),i.broadcastOperate(e,(t,s)=>t*s),i}toObject(){return{type:"reduce_max",axis:this._axis,keepdims:this._keepdims}}}h.registLayer();
