var p=Object.defineProperty;var g=(f,e)=>p(f,"name",{value:e,configurable:!0});import u from"./base.js";import d from"../../../util/matrix.js";export default class b extends u{static{g(this,"GraphSAGELayer")}constructor({out_size:e,aggregate:a="mean",w:t=null,b:i=null,activation:s=null,l2_decay:h=0,l1_decay:_=0,...l}){super(l),this._out_size=e,this._w=null,typeof t=="string"?this._wname=t:t&&(this._w=d.fromArray(t)),this._b=null,typeof i=="string"?this._bname=i:i&&(this._b=d.fromArray(i)),typeof s=="string"?this._activation=u.fromObject({type:s}):s&&(this._activation=u.fromObject(s)),this._l2_decay=h,this._l1_decay=_,this._aggregate=a}calc(e){this._wname&&(this._w=this.graph.getNode(this._wname).outputValue,this._out_size||(this._out_size=this._w.sizes.at(-1))),this._bname&&(this._b=this.graph.getNode(this._bname).outputValue),this._w||(this._w=d.randn(e.value[0].nodes[0].sizes.at(-1)*2,this._out_size)),this._b||(this._b=d.zeros(1,this._out_size)),this._i=e,this._cum=[],this._o=e.copy();for(let a=0;a<e.length;a++){const t=e.value[a].copy(),i=e.value[a].copy();for(let s=0;s<t.order;s++){const h=e.value[a].getNode(s).copy(),_=h.copy();_.fill(0);const l=e.value[a].adjacencies(s,!0,"in");for(let o=0;o<l.length;o++)_.add(e.value[a].getNode(l[o]));this._aggregate==="mean"&&_.div(l.length),h.concat(_,1),i.nodes[s]=h;let n=h.dot(this._w);n.broadcastOperate(this._b,(o,r)=>o+r),this._activation&&(n=this._activation.calc(n)),t.nodes[s]=n}this._cum[a]=i,this._o.value[a]=t}return this._o}grad(e){if(this._activation)for(let t=0;t<e.length;t++)for(let i=0;i<e.value[t].order;i++)e.value[t].nodes[i]=this._activation.grad(e.value[t].nodes[i]);this._dw=null,this._db=null,this._bi=this._i.copy();for(let t=0;t<this._bi.length;t++){const i=this._i.value[t].copy();for(let s=0;s<this._bi.value[t].order;s++)i.nodes[s]=this._i.value[t].nodes[s].copy(),i.nodes[s].fill(0);this._bi.value[t]=i}let a=0;for(let t=0;t<e.length;t++)for(let i=0;i<e.value[t].order;i++){const s=this._cum[t].nodes[i].tDot(e.value[t].nodes[i]),h=e.value[t].nodes[i].sum(0);this._dw?(this._dw.add(s),this._db.add(h)):(this._dw=s,this._db=h),a++;const _=e.value[t].nodes[i].dot(this._w.t),l=_.slice(0,this._i.value[t].nodes[i].sizes[1],1),n=_.slice(this._i.value[t].nodes[i].sizes[1],_.sizes[1],1),o=this._bi.value[t].adjacencies(i,!0,"in");this._aggregate==="mean"&&n.div(o.length),this._bi.value[t].nodes[i].broadcastOperate(l,(r,c)=>r+c);for(let r=0;r<o.length;r++)this._bi.value[t].nodes[o[r]].broadcastOperate(n,(c,v)=>c+v)}if(this._dw.div(a),this._l2_decay>0||this._l1_decay>0)for(let t=0;t<this._dw.rows;t++)for(let i=0;i<this._dw.cols;i++){const s=this._w.at(t,i);this._dw.addAt(t,i,s*this._l2_decay+Math.sign(s)*this._l1_decay)}if(this._db.div(a),this._wname||this._bname){const t={};return this._wname&&(t[this._wname]=this._dw),this._bname&&(t[this._bname]=this._db),[this._bi,t]}return this._bi}update(e){this._wname||this._w.sub(e.delta("w",this._dw)),this._bname||this._b.sub(e.delta("b",this._db))}toObject(){return{type:"graph_sage",out_size:this._out_size,aggregate:this._aggregate,w:this._wname||this._w?.toArray(),b:this._bname||this._b?.toArray(),activation:this._activation?.toObject(),l2_decay:this._l2_decay,l1_decay:this._l1_decay}}}b.registLayer("graph_sage");
