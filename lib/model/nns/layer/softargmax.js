var m=Object.defineProperty;var c=(h,o)=>m(h,"name",{value:o,configurable:!0});import u from"./base.js";import i from"../../../util/matrix.js";export default class l extends u{static{c(this,"SoftargmaxLayer")}constructor({beta:o=1e4,...s}){super(s),this._beta=o}calc(o){this._i=o,this._o=i.map(this._i,t=>this._beta*t),this._o.sub(this._o.max(1)),this._o.map(Math.exp),this._o.div(this._o.sum(1));const s=i.zeros(1,this._o.cols);for(let t=0;t<s.cols;t++)s.set(0,t,t);return i.mult(this._o,s).sum(1)}grad(o){this._bo=new i(this._o.rows,this._o.cols);for(let t=0;t<this._o.cols;t++)this._bo.set(0,t,i.mult(o,t));const s=this._i.copy();s.sub(s.max(1)),s.map(Math.exp),s.div(s.sum(1)),this._bi=new i(this._o.rows,this._o.cols);for(let t=0;t<this._bo.rows;t++)for(let e=0;e<this._bo.cols;e++){const _=s.at(t,e);let a=0;for(let r=0;r<this._bo.cols;r++){const b=e===r?1-_:-_;a+=s.at(t,r)*b*this._bo.at(t,r)}this._bi.set(t,e,a)}return this._bi}toObject(){return{type:"softargmax",beta:this._beta}}}l.registLayer();
