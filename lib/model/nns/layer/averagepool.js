var k=Object.defineProperty;var p=(c,i)=>k(c,"name",{value:i,configurable:!0});import z,{NeuralnetworkLayerException as m}from"./base.js";import g from"../../../util/tensor.js";export default class y extends z{static{p(this,"AveragePoolLayer")}constructor({kernel:i,stride:l=null,padding:_=null,channel_dim:a=-1,...t}){if(super(t),this._kernel=i,this._stride=l||i,this._padding=_||0,this._channel_dim=a,this._channel_dim!==-1&&this._channel_dim!==1)throw new m("Invalid channel dimension.")}_index(i,l,_){return this._channel_dim===-1?[i,..._,l]:[i,l,..._]}calc(i){if(Array.isArray(this._kernel)||(this._kernel=Array(i.dimension-2).fill(this._kernel)),i.dimension!==this._kernel.length+2)throw new m("Invalid kernel size",[this,i]);if(Array.isArray(this._stride)||(this._stride=Array(i.dimension-2).fill(this._stride)),i.dimension!==this._stride.length+2)throw new m("Invalid stride size",[this,i]);if(Array.isArray(this._padding)?Array.isArray(this._padding[0])||(this._padding=this._padding.map(t=>[t,t])):this._padding=Array.from({length:i.dimension-2},()=>[this._padding,this._padding]),i.dimension!==this._padding.length+2)throw new m("Invalid padding size",[this,i]);this._i=i;const l=this._channel_dim===-1?1:2,_=[i.sizes[0],...this._kernel.map((t,s)=>Math.ceil(Math.max(0,i.sizes[s+l]+this._padding[s][0]+this._padding[s][1]-t)/this._stride[s])+1)];this._channel_dim===-1?_.push(i.sizes[i.dimension-1]):this._channel_dim===1&&_.splice(1,0,i.sizes[1]);const a=this._channel_dim===-1?i.sizes[i.dimension-1]:i.sizes[1];this._o=new g(_);for(let t=0;t<i.sizes[0];t++)for(let s=0;s<a;s++){const n=Array(i.dimension-2).fill(0);do{const d=Array(i.dimension-2).fill(0);let h=0,r=0;do{const e=n.map((o,f)=>o*this._stride[f]-this._padding[f][0]+d[f]);e.every((o,f)=>0<=o&&o<i.sizes[f+l])&&(h+=i.at(this._index(t,s,e)),r++);for(let o=0;o<d.length&&(d[o]++,!(d[o]<this._kernel[o]));o++)d[o]=0}while(d.some(e=>e>0));this._o.set(this._index(t,s,n),h/r);for(let e=0;e<n.length&&(n[e]++,!(n[e]<_[e+l]));e++)n[e]=0}while(n.some(d=>d>0))}return this._o}grad(i){this._bo=i,this._bi=new g(this._i.sizes);const l=this._channel_dim===-1?1:2,_=this._channel_dim===-1?this._i.sizes[this._i.dimension-1]:this._i.sizes[1];for(let a=0;a<this._i.sizes[0];a++)for(let t=0;t<_;t++){const s=Array(this._i.dimension-2).fill(0);do{const n=Array(this._i.dimension-2).fill(0),d=[];do{const h=s.map((r,e)=>r*this._stride[e]-this._padding[e][0]+n[e]);h.every((r,e)=>0<=r&&r<this._i.sizes[e+l])&&d.push(h);for(let r=0;r<n.length&&(n[r]++,!(n[r]<this._kernel[r]));r++)n[r]=0}while(n.some(h=>h>0));for(const h of d)this._bi.operateAt(this._index(a,t,h),r=>r+this._bo.at(this._index(a,t,s))/d.length);for(let h=0;h<s.length&&(s[h]++,!(s[h]<this._o.sizes[h+l]));h++)s[h]=0}while(s.some(n=>n>0))}return this._bi}toObject(){return{type:"average_pool",kernel:this._kernel,stride:this._stride,padding:this._padding,channel_dim:this._channel_dim}}}y.registLayer();
