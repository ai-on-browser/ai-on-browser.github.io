var n=Object.defineProperty;var _=(r,t)=>n(r,"name",{value:t,configurable:!0});import d from"./base.js";import l from"../../../util/tensor.js";export default class o extends d{static{_(this,"ParametricReLULayer")}constructor({a:t=.25,...a}){super(a),this._a=null,this._da=0,typeof t=="string"?this._aname=t:Array.isArray(t)?(this._a=l.fromArray(t),this._da=this._a.copy(),this._da.fill(0)):this._a=t}calc(t){return this._i=t,this._o=t.copy(),this._aname&&(this._a=this.graph.getNode(this._aname).outputValue),this._o.broadcastOperate(this._a,(a,i)=>a>0?a:i*a),this._o}grad(t){const a=this._i.copy();if(a.broadcastOperate(this._a,(i,s)=>i>0?1:s),a.broadcastOperate(t,(i,s)=>i*s),typeof this._a=="number"){this._da0=0;for(let i=0;i<this._i.length;i++)this._i.value[i]<0&&(this._da0+=t.value[i]*this._i.value[i])}else{this._da0=this._a.copy(),this._da0.fill(0);const i=this._i.dimension-this._a.dimension,s=Array(this._i.dimension).fill(0);do{const h=this._i.at(s);h>0&&this._da0.operateAt(s.slice(i),e=>e+h*t.at(s));for(let e=0;e<s.length&&(s[e]++,!(s[e]<this._i.sizes[e]));e++)s[e]=0}while(s.some(h=>h>0))}return this._aname?[a,{[this._aname]:this._da0}]:a}update(t){this._aname||(typeof this._a=="number"?(this._da=.1*this._da+t.lr*this._da0/this._i.length,this._a-=this._da):(this._da.broadcastOperate(this._da0,(i,s)=>.1*i+t.lr*s/this._i.length),this._a.broadcastOperate(this._da,(i,s)=>i-s)))}toObject(){return{type:"prelu",a:this._aname||this._a}}}o.registLayer("prelu");
