import Layer from"./base.js";import Tensor from"../../../util/tensor.js";import Matrix from"../../../util/matrix.js";export default class LSTMLayer extends Layer{constructor({size:t,return_sequences:i=!1,w_z:_=null,w_in:s=null,w_for:r=null,w_out:h=null,r_z:o=null,r_in:d=null,r_for:a=null,r_out:e=null,p_in:n=null,p_for:u=null,p_out:l=null,b_z:z=null,b_in:c=null,b_for:y=null,b_out:f=null,...b}){super(b),this._size=t,this._unit=new LSTMUnitLayer({size:t,w_z:_,w_in:s,w_for:r,w_out:h,r_z:o,r_in:d,r_for:a,r_out:e,p_in:n,p_for:u,p_out:l,b_z:z,b_in:c,b_for:y,b_out:f}),this._return_sequences=i}calc(t){t=t.transpose(1,0,2),this._x=[];for(let i=0;i<t.sizes[0];i++)this._x[i]=t.at(i).toMatrix();this._y=[];for(let t=0;t<this._x.length;t++)this._y[t]=this._unit.calc(this._x[t],t);if(this._return_sequences){return Tensor.fromArray(this._y.map((t=>t.toArray()))).transpose(1,0,2)}return this._y[this._y.length-1]}grad(t){return this._grad_bptt(t)}_grad_bptt(t){const i=this._y.length;if(this._bo=Array(i),this._return_sequences){t=t.transpose(1,0,2);for(let _=0;_<i;_++)this._bo[_]=t.at(_).toMatrix()}else this._bo[i-1]=t;const _=[];for(let t=i-1;t>=0;t--)_[t]=this._unit.grad(this._bo[t],t);return Tensor.fromArray(_.map((t=>t.toArray()))).transpose(1,0,2)}update(t){this._unit.update(t)}toObject(){return{type:"lstm",size:this._size,return_sequences:this._return_sequences,...this._unit.toObject()}}}class LSTMUnitLayer extends Layer{constructor({size:t,w_z:i=null,w_in:_=null,w_for:s=null,w_out:r=null,r_z:h=null,r_in:o=null,r_for:d=null,r_out:a=null,p_in:e=null,p_for:n=null,p_out:u=null,b_z:l=null,b_in:z=null,b_for:c=null,b_out:y=null,...f}){super(f),this._size=t,this._w_z=i?Matrix.fromArray(i):null,this._w_in=_?Matrix.fromArray(_):null,this._w_for=s?Matrix.fromArray(s):null,this._w_out=r?Matrix.fromArray(r):null,this._r_z=h?Matrix.fromArray(h):Matrix.randn(this._size,this._size),this._r_in=o?Matrix.fromArray(o):Matrix.randn(this._size,this._size),this._r_for=d?Matrix.fromArray(d):Matrix.randn(this._size,this._size),this._r_out=a?Matrix.fromArray(a):Matrix.randn(this._size,this._size),this._p_in=e?Matrix.fromArray(e):Matrix.zeros(1,this._size),this._p_for=n?Matrix.fromArray(n):Matrix.zeros(1,this._size),this._p_out=u?Matrix.fromArray(u):Matrix.zeros(1,this._size),this._b_z=l?Matrix.fromArray(l):Matrix.zeros(1,this._size),this._b_in=z?Matrix.fromArray(z):Matrix.zeros(1,this._size),this._b_for=c?Matrix.fromArray(c):Matrix.zeros(1,this._size),this._b_out=y?Matrix.fromArray(y):Matrix.zeros(1,this._size),this._c0=Matrix.zeros(1,this._size),this._y0=Matrix.zeros(1,this._size),this._x=[],this._c=[],this._y=[],this._ob=[],this._o=[],this._fb=[],this._f=[],this._ib=[],this._i=[],this._zb=[],this._z=[],this._bo=[],this._dy=[],this._do=[],this._dc=[],this._df=[],this._di=[],this._dz=[]}_sigmoid(t){return t.copyMap((t=>1/(1+Math.exp(-t))))}_grad_sigmoid(t,i){return i.copyMap((t=>t*(1-t)))}_tanh(t){return t.copyMap(Math.tanh)}_grad_tanh(t){return t.copyMap((t=>1/Math.cosh(t)**2))}calc(t,i){this._w_z||(this._w_z=Matrix.randn(t.cols,this._size)),this._w_in||(this._w_in=Matrix.randn(t.cols,this._size)),this._w_for||(this._w_for=Matrix.randn(t.cols,this._size)),this._w_out||(this._w_out=Matrix.randn(t.cols,this._size)),0===i&&(this._y=[]),this._x[i]=t;const _=0===i?this._y0:this._y[i-1],s=0===i?this._c0:this._c[i-1],r=this._x[i].dot(this._w_z);r.add(_.dot(this._r_z)),r.add(this._b_z),this._zb[i]=r;const h=this._tanh(r);this._z[i]=h;const o=this._x[i].dot(this._w_in);o.add(_.dot(this._r_in)),o.add(this._p_in.copyMult(s)),o.add(this._b_in),this._ib[i]=o;const d=this._sigmoid(o);this._i[i]=d;const a=this._x[i].dot(this._w_for);a.add(_.dot(this._r_for)),a.add(this._p_for.copyMult(s)),a.add(this._b_for),this._fb[i]=a;const e=this._sigmoid(a);this._f[i]=e,this._c[i]=d.copyMult(h),this._c[i].add(e.copyMult(s));const n=this._x[i].dot(this._w_out);n.add(_.dot(this._r_out)),n.add(this._p_out.copyMult(this._c[i])),n.add(this._b_out),this._ob[i]=n;const u=this._sigmoid(n);return this._o[i]=u,this._y[i]=this._tanh(this._c[i]),this._y[i].mult(u),this._y[i]}grad(t,i){return this._grad_bptt(t,i)}_grad_bptt(t,i){const _=this._y.length;this._bo[i]=t,this._dy[i]=this._bo[i]||Matrix.zeros(1,1),i<_-1&&(this._dy[i].add(this._dz[i+1].dot(this._r_z.t)),this._dy[i].add(this._di[i+1].dot(this._r_in.t)),this._dy[i].add(this._df[i+1].dot(this._r_for.t)),this._dy[i].add(this._do[i+1].dot(this._r_out.t))),this._do[i]=this._dy[i].copy(),this._do[i].mult(this._tanh(this._c[i])),this._do[i].mult(this._grad_sigmoid(this._ob[i],this._o[i])),this._dc[i]=this._dy[i].copy(),this._dc[i].mult(this._o[i]),this._dc[i].mult(this._grad_tanh(this._c[i])),this._dc[i].add(this._p_out.copyMult(this._do[i])),i<_-1&&(this._dc[i].add(this._p_in.copyMult(this._di[i+1])),this._dc[i].add(this._p_for.copyMult(this._df[i+1])),this._dc[i].add(this._dc[i+1].copyMult(this._f[i+1]))),this._df[i]=this._dc[i].copy(),this._df[i].mult(0===i?this._c0:this._c[i-1]),this._df[i].mult(this._grad_sigmoid(this._fb[i],this._f[i])),this._di[i]=this._dc[i].copy(),this._di[i].mult(this._z[i]),this._di[i].mult(this._grad_sigmoid(this._ib[i],this._i[i])),this._dz[i]=this._dc[i].copy(),this._dz[i].mult(this._i[i]),this._dz[i].mult(this._grad_tanh(this._zb[i]));const s=this._dz[i].dot(this._w_z.t);return s.add(this._di[i].dot(this._w_in.t)),s.add(this._df[i].dot(this._w_for.t)),s.add(this._do[i].dot(this._w_out.t)),s}update(t){this._update_bptt(t)}_update_bptt(t){const i=this._y.length,_=this._x[0].rows,s=Matrix.zeros(...this._w_z.sizes),r=Matrix.zeros(...this._w_in.sizes),h=Matrix.zeros(...this._w_out.sizes),o=Matrix.zeros(...this._w_for.sizes),d=Matrix.zeros(1,this._size),a=Matrix.zeros(1,this._size),e=Matrix.zeros(1,this._size),n=Matrix.zeros(1,this._size),u=Matrix.zeros(1,this._size);for(let t=0;t<i;t++){const i=this._x[t].tDot(this._dz[t]);i.div(_),s.add(i);const l=this._x[t].tDot(this._di[t]);l.div(_),r.add(l);const z=this._x[t].tDot(this._do[t]);z.div(_),h.add(z);const c=this._x[t].tDot(this._df[t]);c.div(_),o.add(c),d.add(this._dz[t].mean(0)),a.add(this._di[t].mean(0)),e.add(this._do[t].mean(0)),n.add(this._df[t].mean(0));const y=this._dc[t].copyMult(this._do[t]);u.add(y.mean(0))}this._w_z.sub(t.delta("w_z",s)),this._w_in.sub(t.delta("w_i",r)),this._w_out.sub(t.delta("w_o",h)),this._w_for.sub(t.delta("w_f",o)),this._b_z.sub(t.delta("b_z",d)),this._b_in.sub(t.delta("b_i",a)),this._b_out.sub(t.delta("b_o",e)),this._b_for.sub(t.delta("b_f",n)),this._p_out.sub(t.delta("p_o",u));const l=Matrix.zeros(this._size,this._size),z=Matrix.zeros(this._size,this._size),c=Matrix.zeros(this._size,this._size),y=Matrix.zeros(this._size,this._size),f=Matrix.zeros(1,this._size),b=Matrix.zeros(1,this._size);for(let t=0;t<i-1;t++){const i=this._y[t].tDot(this._dz[t+1]);i.div(_),l.add(i);const s=this._y[t].tDot(this._di[t+1]);s.div(_),z.add(s);const r=this._y[t].tDot(this._do[t+1]);r.div(_),c.add(r);const h=this._y[t].tDot(this._df[t+1]);h.div(_),y.add(h);const o=this._dc[t].copyMult(this._di[t+1]);f.add(o.mean(0));const d=this._dc[t].copyMult(this._df[t+1]);b.add(d.mean(0))}this._r_z.sub(t.delta("r_z",l)),this._r_in.sub(t.delta("r_i",z)),this._r_out.sub(t.delta("r_o",c)),this._r_for.sub(t.delta("r_f",y)),this._p_in.sub(t.delta("p_i",f)),this._p_for.sub(t.delta("p_f",b))}toObject(){return{w_z:this._w_z?.toArray(),w_in:this._w_in?.toArray(),w_for:this._w_for?.toArray(),w_out:this._w_out?.toArray(),r_z:this._r_z.toArray(),r_in:this._r_in.toArray(),r_for:this._r_for.toArray(),r_out:this._r_out.toArray(),p_in:this._p_in.toArray(),p_for:this._p_for.toArray(),p_out:this._p_out.toArray(),b_z:this._b_z.toArray(),b_in:this._b_in.toArray(),b_for:this._b_for.toArray(),b_out:this._b_out.toArray()}}}LSTMLayer.registLayer("lstm");