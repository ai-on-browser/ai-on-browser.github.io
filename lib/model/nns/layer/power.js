import Layer from"./base.js";import Tensor from"../../../util/tensor.js";export default class PowerLayer extends Layer{constructor({n:t,...r}){super(r),this._n=null,"string"==typeof t?this._nname=t:Array.isArray(t)?this._n=Tensor.fromArray(t):this._n=t}calc(t){this._i=t;const r=t.copy();return this._nname&&(this._n=this.graph.getNode(this._nname).outputValue),r.broadcastOperate(this._n,((t,r)=>t**r)),r}grad(t){const r=this._i.copy();return r.broadcastOperate(this._n,((t,r)=>r*t**(r-1))),r.broadcastOperate(t,((t,r)=>t*r)),r}toObject(){return{type:"power",n:this._nname||this._n}}}PowerLayer.registLayer();