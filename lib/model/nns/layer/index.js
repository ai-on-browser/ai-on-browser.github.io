import Matrix from"../../../util/matrix.js";import Layer from"./base.js";export{default as Layer,LossLayer,FlowLayer}from"./base.js";const buildLayer=(r,a,t)=>{(class extends Layer{calc(r){return this._i=r,this._o=Matrix.map(r,a),this._o}grad(r){const a=t(this._i,this._o);return a.mult(r),a}}).registLayer(r)},simpleLayers={abs:{calc:Math.abs,grad:(r,a)=>Matrix.map(r,(r=>r<0?-1:1))},acos:{calc:Math.acos,grad:(r,a)=>Matrix.map(r,(r=>-1/(Math.sqrt(1-r**2)+1e-4)))},acosh:{calc:Math.acosh,grad:(r,a)=>Matrix.map(r,(r=>1/(Math.sqrt(r**2-1)+1e-4)))},asin:{calc:Math.asin,grad:(r,a)=>Matrix.map(r,(r=>1/(Math.sqrt(1-r**2)+1e-4)))},asinh:{calc:Math.asinh,grad:(r,a)=>Matrix.map(r,(r=>1/Math.sqrt(1+r**2)))},atan:{calc:Math.atan,grad:(r,a)=>Matrix.map(r,(r=>1/(1+r**2)))},atanh:{calc:Math.atanh,grad:(r,a)=>Matrix.map(r,(r=>1/(1-r**2)))},cos:{calc:Math.cos,grad:(r,a)=>Matrix.map(r,(r=>-Math.sin(r)))},cosh:{calc:Math.cosh,grad:(r,a)=>Matrix.map(r,Math.sinh)},exp:{calc:Math.exp,grad:(r,a)=>a.copy()},log:{calc:Math.log,grad:(r,a)=>Matrix.map(r,(r=>1/r))},negative:{calc:r=>-r,grad:(r,a)=>new Matrix(1,1,-1)},relu:{calc:r=>r>0?r:0,grad:(r,a)=>Matrix.map(a,(r=>r>0?1:0))},sin:{calc:Math.sin,grad:(r,a)=>Matrix.map(r,Math.cos)},sinh:{calc:Math.sinh,grad:(r,a)=>Matrix.map(r,Math.cosh)},softsign:{calc:r=>r/(1+Math.abs(r)),grad:(r,a)=>Matrix.map(r,(r=>1/(1+Math.abs(r))**2))},sqrt:{calc:Math.sqrt,grad:(r,a)=>Matrix.map(a,(r=>1/(2*r)))},square:{calc:r=>r**2,grad:(r,a)=>Matrix.mult(r,2)},tan:{calc:Math.tan,grad:(r,a)=>Matrix.map(r,(r=>1/Math.cos(r)**2))},tanh:{calc:Math.tanh,grad:(r,a)=>Matrix.map(a,(r=>1-r**2))}};for(const r of Object.keys(simpleLayers))buildLayer(r,simpleLayers[r].calc,simpleLayers[r].grad);export*from"./add.js";export*from"./additive_coupling.js";export*from"./argmax.js";export*from"./batch_normalization.js";export*from"./clip.js";export*from"./concat.js";export*from"./cond.js";export*from"./const.js";export*from"./conv.js";export*from"./detach.js";export*from"./div.js";export*from"./dropout.js";export*from"./elu.js";export*from"./flatten.js";export*from"./full.js";export*from"./gaussian.js";export*from"./gru.js";export*from"./huber.js";export*from"./include.js";export*from"./input.js";export*from"./leaky_relu.js";export*from"./less.js";export*from"./linear.js";export*from"./lstm.js";export*from"./matmul.js";export*from"./mean.js";export*from"./mse.js";export*from"./mult.js";export*from"./onehot.js";export*from"./output.js";export*from"./power.js";export*from"./prelu.js";export*from"./random.js";export*from"./reshape.js";export*from"./reverse.js";export*from"./rnn.js";export*from"./rrelu.js";export*from"./sigmoid.js";export*from"./softargmax.js";export*from"./softmax.js";export*from"./softplus.js";export*from"./sparse.js";export*from"./split.js";export*from"./std.js";export*from"./sub.js";export*from"./sum.js";export*from"./supervisor.js";export*from"./transpose.js";export*from"./variable.js";export*from"./variance.js";