var p=Object.defineProperty;var o=(r,e)=>p(r,"name",{value:e,configurable:!0});import _ from"./base.js";import c from"../../../util/matrix.js";import a from"../../../util/tensor.js";export default class h extends _{static{o(this,"ProdLayer")}constructor({axis:e=-1,keepdims:t=!0,...s}){super(s),this._axis=typeof e=="number"?[e]:e,this._keepdims=t}get dependentLayers(){const e=[];return typeof this._axis=="string"&&e.push(this._axis),e}calc(e){const t=typeof this._axis=="string"?this.graph.getNode(this._axis).outputValue.toArray():this._axis;if(t.includes(-1))this._size=Array(e.dimension).fill(1);else{this._size=e.sizes.concat();for(let s=0;s<t.length;s++)this._size[t[s]]=1}if(this._i=e,!this._keepdims&&t.includes(-1))return this._o=e.reduce((s,i)=>s*i,1),new a([],this._o);if(!this._keepdims&&e instanceof c&&(e=a.fromArray(e)),this._o=e.reduce((s,i)=>s*i,1,t,!0),!this._keepdims){const s=this._o.copy();return s.reshape(...s.sizes.filter((i,n)=>!t.includes(n))),s}return this._o}grad(e){e.reshape(...this._size);const t=this._i.copy();return t.broadcastOperate(this._o,(s,i)=>i/s),t.broadcastOperate(e,(s,i)=>s*i),t}toObject(){return{type:"prod",axis:this._axis,keepdims:this._keepdims}}}h.registLayer();
