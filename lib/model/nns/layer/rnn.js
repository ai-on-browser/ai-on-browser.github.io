import Layer from"./base.js";import Tensor from"../../../util/tensor.js";import Matrix from"../../../util/matrix.js";import ActivationLayer from"./activation.js";export default class RNNLayer extends Layer{constructor({size:t,out_size:i=null,activation:_="tanh",recurrent_activation:s="sigmoid",return_sequences:h=!1,w_xh:r=null,w_hh:a=null,w_hy:e=null,b_xh:o=null,b_hh:n=null,b_hy:c=null,activation_params:u={},recurrent_activation_params:b={},...d}){super(d),this._size=t,this._out_size=i||t,this._w_hy=e?Matrix.fromArray(e):Matrix.randn(t,this._out_size),this._b_hy=c?Matrix.fromArray(c):Matrix.zeros(1,this._out_size),this._unit=new RNNUnitLayer({size:t,recurrent_activation:s,w_xh:r,w_hh:a,b_xh:o,b_hh:n,recurrent_activation_params:b}),this._activation=_,_&&(this._activation_func=new ActivationLayer({activation:_,...u})),this._return_sequences=h}calc(t){t=t.transpose(1,0,2),this._i=[];for(let i=0;i<t.sizes[0];i++)this._i[i]=t.at(i).toMatrix();this._o=[],this._z=[],this._v=[];for(let t=0;t<this._i.length;t++)this._z[t]=this._unit.calc(this._i[t],t),this._o[t]=this._z[t].dot(this._w_hy),this._o[t].add(this._b_hy),this._activation_func&&(this._v[t]=this._o[t],this._o[t]=this._activation_func.calc(this._o[t]));if(this._return_sequences){return Tensor.fromArray(this._o.map((t=>t.toArray()))).transpose(1,0,2)}return this._o[this._o.length-1]}grad(t){return this._grad_bptt(t)}_grad_bptt(t){const i=this._o.length;if(this._bo=Array(i),this._return_sequences){t=t.transpose(1,0,2);for(let _=0;_<i;_++)this._bo[_]=t.at(_).toMatrix()}else this._bo[i-1]=t;this._activation_func&&(this._bo=this._bo.map(((t,i)=>t?(this._activation_func.calc(this._v[i]),this._activation_func.grad(t)):t)));const _=[];for(let t=i-1;t>=0;t--)_[t]=this._unit.grad(this._bo[t]?.dot(this._w_hy.t),t);return Tensor.fromArray(_.map((t=>t.toArray()))).transpose(1,0,2)}update(t){this._update_bptt(t)}_update_bptt(t){const i=this._o.length,_=Matrix.zeros(this._size,this._out_size),s=Matrix.zeros(1,this._out_size);for(let t=0;t<i;t++)if(this._bo[t]){const i=this._z[t].tDot(this._bo[t]);i.div(this._z[t].rows),_.add(i),s.add(this._bo[t].mean(0))}_.div(i),s.div(i),this._w_hy.sub(t.delta("w_hy",_)),this._b_hy.sub(t.delta("b_hy",s)),this._unit.update(t)}toObject(){return{type:"rnn",size:this._size,out_size:this._out_size,return_sequences:this._return_sequences,w_hy:this._w_hy.toArray(),b_hy:this._b_hy.toArray(),activation:this._activation,activation_params:this._activation_func?.toObject(),...this._unit.toObject()}}}class RNNUnitLayer extends Layer{constructor({size:t,recurrent_activation:i="sigmoid",w_xh:_=null,w_hh:s=null,b_xh:h=null,b_hh:r=null,recurrent_activation_params:a={},...e}){super(e),this._size=t,this._w_xh=_?Matrix.fromArray(_):null,this._w_hh=s?Matrix.fromArray(s):Matrix.randn(t,t),this._b_xh=h?Matrix.fromArray(h):Matrix.zeros(1,t),this._b_hh=r?Matrix.fromArray(r):Matrix.zeros(1,t),this._z0=Matrix.zeros(1,t),this._i=[],this._z=[],this._u=[],this._bo=[],this._bh=[],this._recurrent_activation=i,i&&(this._recurrent_activation_func=new ActivationLayer({activation:i,...a}))}calc(t,i){this._w_xh||(this._w_xh=Matrix.randn(t.cols,this._size)),0===i&&(this._z=[]),this._i[i]=t,this._z[i]=t.dot(this._w_xh);const _=0===i?this._z0:this._z[i-1];return this._z[i].add(_.dot(this._w_hh)),this._z[i].add(this._b_xh),this._z[i].add(this._b_hh),this._recurrent_activation_func&&(this._u[i]=this._z[i],this._z[i]=this._recurrent_activation_func.calc(this._z[i])),this._z[i]}grad(t,i){return this._grad_bptt(t,i)}_grad_bptt(t,i){const _=this._z.length;return this._bo[i]=t,this._bh[i]=this._bo[i]||Matrix.zeros(1,1),i<_-1&&this._bh[i].add(this._bh[i+1].dot(this._w_hh.t)),this._recurrent_activation_func&&(this._recurrent_activation_func.calc(this._u[i]),this._bh[i]=this._recurrent_activation_func.grad(this._bh[i])),this._bh[i].dot(this._w_xh.t)}update(t){this._update_bptt(t)}_update_bptt(t){const i=this._z.length,_=Matrix.zeros(...this._w_xh.sizes),s=Matrix.zeros(1,this._size);for(let t=0;t<i;t++){const i=this._i[t].tDot(this._bh[t]);i.div(this._i[t].rows),_.add(i),s.add(this._bh[t].mean(0))}_.div(i),s.div(i),this._w_xh.sub(t.delta("w_xh",_)),this._b_xh.sub(t.delta("b_xh",s));const h=Matrix.zeros(this._size,this._size),r=Matrix.zeros(1,this._size);for(let t=0;t<i-1;t++){const i=this._z[t].tDot(this._bh[t+1]);i.div(this._z[t].rows),h.add(i),r.add(this._bh[t+1].mean(0))}h.div(i-1),r.div(i-1),this._w_hh.sub(t.delta("w_hh",h)),this._b_hh.sub(t.delta("b_hh",r))}toObject(){return{w_xh:this._w_xh?.toArray(),w_hh:this._w_hh.toArray(),b_xh:this._b_xh.toArray(),b_hh:this._b_hh.toArray(),recurrent_activation:this._recurrent_activation,recurrent_activation_params:this._recurrent_activation_func?.toObject()}}}RNNLayer.registLayer("rnn");