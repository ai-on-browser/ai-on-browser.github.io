var w=Object.defineProperty;var o=(a,i)=>w(a,"name",{value:i,configurable:!0});import d,{NeuralnetworkLayerException as m}from"./base.js";import l from"../../../util/tensor.js";import r from"../../../util/matrix.js";export default class c extends d{static{o(this,"RNNLayer")}constructor({size:i,activation:t="tanh",return_sequences:s=!1,w_x:e=null,w_h:h=null,b_x:_=null,b_h:n=null,sequence_dim:b=1,...f}){if(super(f),this._size=i,this._unit=new x({layer:this,size:i,activation:t,w_x:e,w_h:h,b_x:_,b_h:n}),this._return_sequences=s,this._sequence_dim=b,this._sequence_dim!==0&&this._sequence_dim!==1)throw new m("Invalid sequence dimension.")}calc(i){this._sequence_dim===1&&(i=i.transpose(1,0,2)),this._i=[];for(let t=0;t<i.sizes[0];t++)this._i[t]=i.index(t).toMatrix();this._o=[];for(let t=0;t<this._i.length;t++)this._o[t]=this._unit.calc(this._i[t],t);if(this._return_sequences){const t=l.fromArray(this._o.map(s=>s.toArray()));return this._sequence_dim===1?t.transpose(1,0,2):t}return this._o[this._o.length-1]}grad(i){return this._grad_bptt(i)}_grad_bptt(i){const t=this._o.length;if(this._bo=Array(t),this._return_sequences){this._sequence_dim===1&&(i=i.transpose(1,0,2));for(let _=0;_<t;_++)this._bo[_]=i.index(_).toMatrix()}else this._bo[t-1]=i;const s=[];let e=null;for(let _=t-1;_>=0;_--){const n=this._unit.grad(this._bo[_],_);_===0&&Array.isArray(n)?(s[_]=n[0],e=n[1]):s[_]=n}let h=l.fromArray(s.map(_=>_.toArray()));return this._sequence_dim===1&&(h=h.transpose(1,0,2)),e?[h,e]:h}update(i){this._unit.update(i)}toObject(){return{type:"rnn",size:this._size,return_sequences:this._return_sequences,sequence_dim:this._sequence_dim,...this._unit.toObject()}}}class x extends d{static{o(this,"RNNUnitLayer")}constructor({layer:i,size:t,activation:s="sigmoid",w_x:e=null,w_h:h=null,b_x:_=null,b_h:n=null,...b}){super(b),this._size=t,this._w_x=new u(i,e),this._w_h=new u(i,h,[t,t]),this._b_x=new u(i,_,[1,t]),this._b_h=new u(i,n,[1,t]),this._z0=r.zeros(1,t),this._i=[],this._z=[],this._u=[],this._bo=[],this._bh=[],typeof s=="string"?this._activation=d.fromObject({type:s}):s&&(this._activation=d.fromObject(s))}calc(i,t){t===0&&(this._z=[]),this._i[t]=i,this._z[t]=i.dot(this._w_x.get(i.cols,this._size));const s=t===0?this._z0:this._z[t-1];return this._z[t].add(s.dot(this._w_h.get())),this._z[t].add(this._b_x.get()),this._z[t].add(this._b_h.get()),this._activation&&(this._u[t]=this._z[t],this._z[t]=this._activation.calc(this._z[t])),this._z[t]}grad(i,t){return this._grad_bptt(i,t)}_grad_bptt(i,t){const s=this._z.length;this._bo[t]=i,this._bh[t]=this._bo[t]||r.zeros(1,1),t<s-1&&this._bh[t].add(this._bh[t+1].dot(this._w_h.value.t)),this._activation&&(this._activation.calc(this._u[t]),this._bh[t]=this._activation.grad(this._bh[t]));const e=this._bh[t].dot(this._w_x.value.t);if(t===0){this._diff_bptt();const h={};if(this._w_x.name&&(h[this._w_x.name]=this._dw_x),this._w_h.name&&(h[this._w_h.name]=this._dw_h),this._b_x.name&&(h[this._b_x.name]=this._db_x),this._b_h.name&&(h[this._b_h.name]=this._db_h),Object.keys(h).length>0)return[e,h]}return e}_diff_bptt(){const i=this._z.length;this._dw_x=r.zeros(...this._w_x.sizes),this._db_x=r.zeros(1,this._size);for(let t=0;t<i;t++){const s=this._i[t].tDot(this._bh[t]);s.div(this._i[t].rows),this._dw_x.add(s),this._db_x.add(this._bh[t].mean(0))}this._dw_x.div(i),this._db_x.div(i),this._dw_h=r.zeros(this._size,this._size),this._db_h=r.zeros(1,this._size);for(let t=0;t<i-1;t++){const s=this._z[t].tDot(this._bh[t+1]);s.div(this._z[t].rows),this._dw_h.add(s),this._db_h.add(this._bh[t+1].mean(0))}this._dw_h.div(i-1),this._db_h.div(i-1)}update(i){this._update_bptt(i)}_update_bptt(i){this._w_x.name||this._w_x.value.sub(i.delta("w_x",this._dw_x)),this._b_x.name||this._b_x.value.sub(i.delta("b_x",this._db_x)),this._w_h.name||this._w_h.value.sub(i.delta("w_h",this._dw_h)),this._b_h.name||this._b_h.value.sub(i.delta("b_h",this._db_h))}toObject(){return{w_x:this._w_x?.toObject(),w_h:this._w_h?.toObject(),b_x:this._b_x?.toObject(),b_h:this._b_h?.toObject(),activation:this._activation?.toObject()}}}class u{static{o(this,"Variable")}constructor(i,t,s){this._layer=i,this._sizes=s,typeof t=="string"?this._name=t:t&&(this._value=r.fromArray(t))}get name(){return this._name}get value(){return this._value}get sizes(){return this._value.sizes}get(...i){return i.length===0&&(i=this._sizes),this._name?this._value=this._layer.graph.getNode(this._name).outputValue:this._value?this._value:this._value=r.randn(...i)}toObject(){return this._name?this._name:this._value?.toArray()}}c.registLayer("rnn");
