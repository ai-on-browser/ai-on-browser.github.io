var d=Object.defineProperty;var c=(h,s)=>d(h,"name",{value:s,configurable:!0});import f from"./base.js";export default class _ extends f{static{c(this,"SoftmaxLayer")}constructor({axis:s=-1,...e}){super(e),this._axis=s}calc(s){const e=this._axis<0?this._axis+s.dimension:this._axis;this._o=s.copy();const i=this._o.reduce((a,o)=>Math.max(a,o),-1/0,e,!0);this._o.broadcastOperate(i,(a,o)=>a-o),this._o.map(Math.exp);const t=this._o.reduce((a,o)=>a+o,0,e,!0);return this._o.broadcastOperate(t,(a,o)=>a/o),this._o}grad(s){this._bi=s.copy();const e=this._axis<0?this._axis+s.dimension:this._axis,i=Array(s.dimension).fill(0);do{for(let t=0;t<s.sizes[e];t++){i[e]=t;const a=this._o.at(i);let o=0;const n=i.concat();for(let r=0;r<s.sizes[e];r++){n[e]=r;const x=t===r?1-a:-a;o+=this._o.at(n)*x*s.at(n)}this._bi.set(i,o)}for(let t=0;t<i.length;t++){if(t===e){i[t]=0;continue}if(i[t]++,i[t]<s.sizes[t])break;i[t]=0}}while(i.some(t=>t>0));return this._bi}toObject(){return{type:"softmax",axis:this._axis}}}_.registLayer();
