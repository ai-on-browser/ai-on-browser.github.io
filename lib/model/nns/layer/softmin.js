import Layer from"./base.js";export default class SoftminLayer extends Layer{constructor({axis:s=-1,...t}){super(t),this._axis=s}calc(s){const t=this._axis<0?this._axis+s.dimension:this._axis;this._o=s.copy();const i=this._o.reduce(((s,t)=>Math.min(s,t)),1/0,t,!0);this._o.broadcastOperate(i,((s,t)=>t-s)),this._o.map(Math.exp);const e=this._o.reduce(((s,t)=>s+t),0,t,!0);return this._o.broadcastOperate(e,((s,t)=>s/t)),this._o}grad(s){this._bi=s.copy();const t=this._axis<0?this._axis+s.dimension:this._axis,i=Array(s.dimension).fill(0);do{for(let e=0;e<s.sizes[t];e++){i[t]=e;const o=this._o.at(i);let a=0;const r=i.concat();for(let i=0;i<s.sizes[t];i++){r[t]=i;const h=e===i?o-1:o;a+=this._o.at(r)*h*s.at(r)}this._bi.set(i,a)}for(let e=0;e<i.length;e++)if(e!==t){if(i[e]++,i[e]<s.sizes[e])break;i[e]=0}else i[e]=0}while(i.some((s=>s>0)));return this._bi}toObject(){return{type:"softmin",axis:this._axis}}}SoftminLayer.registLayer();