var d=Object.defineProperty;var c=(h,i)=>d(h,"name",{value:i,configurable:!0});import f from"./base.js";export default class _ extends f{static{c(this,"SoftminLayer")}constructor({axis:i=-1,...e}){super(e),this._axis=i}calc(i){const e=this._axis<0?this._axis+i.dimension:this._axis;this._o=i.copy();const s=this._o.reduce((o,a)=>Math.min(o,a),1/0,e,!0);this._o.broadcastOperate(s,(o,a)=>a-o),this._o.map(Math.exp);const t=this._o.reduce((o,a)=>o+a,0,e,!0);return this._o.broadcastOperate(t,(o,a)=>o/a),this._o}grad(i){this._bi=i.copy();const e=this._axis<0?this._axis+i.dimension:this._axis,s=Array(i.dimension).fill(0);do{for(let t=0;t<i.sizes[e];t++){s[e]=t;const o=this._o.at(s);let a=0;const n=s.concat();for(let r=0;r<i.sizes[e];r++){n[e]=r;const x=t===r?o-1:o;a+=this._o.at(n)*x*i.at(n)}this._bi.set(s,a)}for(let t=0;t<s.length;t++){if(t===e){s[t]=0;continue}if(s[t]++,s[t]<i.sizes[t])break;s[t]=0}}while(s.some(t=>t>0));return this._bi}toObject(){return{type:"softmin",axis:this._axis}}}_.registLayer();
