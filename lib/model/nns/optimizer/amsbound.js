var c=Object.defineProperty;var m=(p,t)=>c(p,"name",{value:t,configurable:!0});import b from"../../../util/matrix.js";export class AMSBoundOptimizer{static{m(this,"AMSBoundOptimizer")}constructor(t=.001,a=.003,r=.9,h=.999){this._learningrate=t,this._alpha=a,this._beta1=r,this._beta2=h,this._eta_lbound=n=>this._learningrate*(1-1/((1-h)*n+1)),this._eta_ubound=n=>this._learningrate*(1+1/((1-h)*n+1))}set learningRate(t){this._learningrate=t}manager(){const t=this;return{get lr(){return t._learningrate},params:{},delta(a,r){const h=typeof r=="number";if(h&&(r=new b(1,1,r)),!this.params[a]){const s=r.copy();s.fill(0),this.params[a]={m:s.copy(),v:s.copy(),vh:s,t:1}}this.params[a].m.broadcastOperate(r,(s,i)=>s*t._beta1+i*(1-t._beta1)),this.params[a].v.broadcastOperate(r,(s,i)=>s*t._beta2+(1-t._beta2)*i*i),this.params[a].vh.broadcastOperate(this.params[a].v,(s,i)=>Math.max(s,i));const n=t._eta_lbound(this.params[a].t),_=t._eta_ubound(this.params[a].t),o=this.params[a].vh.copy();o.map(s=>Math.min(_,Math.max(n,t._alpha/Math.sqrt(s))));const e=this.params[a].m.copy();return e.broadcastOperate(o,(s,i)=>s*i/Math.sqrt(this.params[a].t)),this.params[a].t++,h?e.toScaler():e}}}}
