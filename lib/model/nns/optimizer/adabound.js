var c=Object.defineProperty;var _=(o,t)=>c(o,"name",{value:t,configurable:!0});import b from"../../../util/matrix.js";export class AdaBoundOptimizer{static{_(this,"AdaBoundOptimizer")}constructor(t=.001,a=.003,s=.9,i=.999){this._learningrate=t,this._alpha=a,this._beta1=s,this._beta2=i,this._eta_lbound=e=>this._learningrate*(1-1/((1-i)*e+1)),this._eta_ubound=e=>this._learningrate*(1+1/((1-i)*e+1))}set learningRate(t){this._learningrate=t}manager(){const t=this;return{get lr(){return t._learningrate},params:{},delta(a,s){const i=typeof s=="number";if(i&&(s=new b(1,1,s)),!this.params[a]){const r=s.copy();r.fill(0),this.params[a]={m:r.copy(),v:r,t:1}}this.params[a].m.broadcastOperate(s,(r,n)=>r*t._beta1+n*(1-t._beta1)),this.params[a].v.broadcastOperate(s,(r,n)=>r*t._beta2+(1-t._beta2)*n*n);const e=t._eta_lbound(this.params[a].t),m=t._eta_ubound(this.params[a].t),p=this.params[a].v.copy();p.map(r=>Math.min(m,Math.max(e,t._alpha/Math.sqrt(r))));const h=this.params[a].m.copy();return h.broadcastOperate(p,(r,n)=>r*n/Math.sqrt(this.params[a].t)),this.params[a].t++,i?h.toScaler():h}}}}
