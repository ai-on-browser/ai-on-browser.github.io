var m=Object.defineProperty;var p=(n,t)=>m(n,"name",{value:t,configurable:!0});import b from"../../../util/matrix.js";export class AdamOptimizer{static{p(this,"AdamOptimizer")}constructor(t=.001,a=.9,r=.999){this._learningrate=t,this._beta1=a,this._beta2=r}set learningRate(t){this._learningrate=t}manager(){const t=this;return{get lr(){return t._learningrate},params:{},delta(a,r){const c=typeof r=="number";if(c&&(r=new b(1,1,r)),!this.params[a]){const s=r.copy();s.fill(0),this.params[a]={v:s.copy(),s,c:1}}this.params[a].v.broadcastOperate(r,(s,i)=>s*t._beta1+i*(1-t._beta1)),this.params[a].s.broadcastOperate(r,(s,i)=>s*t._beta2+(1-t._beta2)*i*i);const o=1-t._beta1**this.params[a].c,h=1-t._beta2**this.params[a].c,e=this.params[a].v.copy();return e.broadcastOperate(this.params[a].s,(s,i)=>s/o*(this.lr/Math.sqrt(i/h+1e-12))),this.params[a].c++,c?e.toScaler():e}}}}
