import{NeuralnetworkException}from"../neuralnetwork.js";import{Layer}from"./layer/index.js";export default class Graph{constructor(){this._nodes=[]}get nodes(){return this._nodes}get size(){return this._nodes.length}static fromObject(t){const n=new Graph;for(const e of t){const t=Layer.fromObject(e);"string"==typeof e.input&&(e.input=[e.input]),n.add(t,e.name,e.input)}return n}toObject(){const t=[];for(let n=0;n<this._nodes.length;n++){const e=this._nodes[n],s=e.layer.toObject();e.name&&(s.name=e.name),e.input&&(s.input=e.input),t.push(s)}return t}add(t,n,e){let s=[];e?("string"==typeof e&&(e=[e]),s=e.map((t=>{const n=t&&t.match(/\[([0-9]+)\]$/),e=n?+n[1]:null,s=n?t.slice(0,-n[0].length):t;for(let t=0;t<this._nodes.length;t++)if(this._nodes[t].name===s)return{index:t,subscript:e};throw new NeuralnetworkException(`Unknown input name '${t}'.`)}))):this._nodes.length>0&&s.push({index:this._nodes.length-1,subscript:null}),this._nodes.push({layer:t,name:n,input:e,parents:s})}}