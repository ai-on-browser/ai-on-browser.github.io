var u=Object.defineProperty;var g=(l,a)=>u(l,"name",{value:a,configurable:!0});import d from"../../util/matrix.js";class f{static{g(this,"SGDOptimizer")}constructor(a){this._learningrate=a}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},delta(t,s){if(typeof s=="number")return s*this.lr;const h=s.copy();return h.map(e=>e*this.lr),h}}}}class M{static{g(this,"MomentumOptimizer")}constructor(a,t=.9){this._learningrate=a,this._beta=t}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){return typeof s=="number"?(this.params[t]=s*this.lr-(this.params[t]??0)*a._beta,this.params[t]):(this.params[t]||(this.params[t]=s.copy(),this.params[t].fill(0)),this.params[t].broadcastOperate(s,(e,p)=>p*this.lr-e*a._beta),this.params[t].copy())}}}}class z{static{g(this,"AdaGradOptimizer")}constructor(a){this._learningrate=a}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){if(typeof s=="number")return this.params[t]=(this.params[t]??0)+s**2,this.lr*s/Math.sqrt(this.params[t]+1e-12);this.params[t]||(this.params[t]=s.copy(),this.params[t].fill(0)),this.params[t].broadcastOperate(s,(e,p)=>e+p*p);const h=s.copy();return h.broadcastOperate(this.params[t],(e,p)=>e*(this.lr/Math.sqrt(p+1e-12))),h}}}}class q{static{g(this,"RMSPropOptimizer")}constructor(a,t=.999){this._learningrate=a,this._beta=t}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){if(typeof s=="number")return this.params[t]=(this.params[t]??0)*a._beta+(1-a._beta)*s**2,this.lr*s/Math.sqrt(this.params[t]+1e-12);this.params[t]||(this.params[t]=s.copy(),this.params[t].fill(0)),this.params[t].broadcastOperate(s,(e,p)=>e*a._beta+(1-a._beta)*p*p);const h=s.copy();return h.broadcastOperate(this.params[t],(e,p)=>e*(this.lr/Math.sqrt(p+1e-12))),h}}}}class S{static{g(this,"AdaDeltaOptimizer")}constructor(a,t=.95){this._learningrate=a,this._beta=t}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const p=s.copy();p.fill(0),this.params[t]={v:p.copy(),u:p}}this.params[t].v.broadcastOperate(s,(p,n)=>p*a._beta+(1-a._beta)*n**2);const e=this.params[t].v.copy();return e.broadcastOperate(this.params[t].u,(p,n)=>Math.sqrt(n+1e-12)/Math.sqrt(p+1e-12)),e.broadcastOperate(s,(p,n)=>p*n),this.params[t].u.broadcastOperate(e,(p,n)=>p*a._beta+(1-a._beta)*n**2),e.map(p=>this.lr*p),h?e.toScaler():e}}}}class R{static{g(this,"AdamOptimizer")}constructor(a=.001,t=.9,s=.999){this._learningrate=a,this._beta1=t,this._beta2=s}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const o=s.copy();o.fill(0),this.params[t]={v:o.copy(),s:o,c:1}}this.params[t].v.broadcastOperate(s,(o,i)=>o*a._beta1+i*(1-a._beta1)),this.params[t].s.broadcastOperate(s,(o,i)=>o*a._beta2+(1-a._beta2)*i*i);const e=1-a._beta1**this.params[t].c,p=1-a._beta2**this.params[t].c,n=this.params[t].v.copy();return n.broadcastOperate(this.params[t].s,(o,i)=>o/e*(this.lr/Math.sqrt(i/p+1e-12))),this.params[t].c++,h?n.toScaler():n}}}}class x{static{g(this,"RMSPropGravesOptimizer")}constructor(a=1e-4,t=.95){this._learningrate=a,this._beta=t}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const p=s.copy();p.fill(0),this.params[t]={m:p.copy(),v:p}}this.params[t].m.broadcastOperate(s,(p,n)=>p*a._beta+n*(1-a._beta)),this.params[t].v.broadcastOperate(s,(p,n)=>p*a._beta+n**2*(1-a._beta));const e=this.params[t].m.copy();return e.broadcastOperate(this.params[t].v,(p,n)=>n-p**2),e.broadcastOperate(s,(p,n)=>n*this.lr/Math.sqrt(p+1e-12)),h?e.toScaler():e}}}}class I{static{g(this,"SMORMS3Optimizer")}constructor(a=.001){this._learningrate=a}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const r=s.copy();r.fill(0);const m=s.copy();m.fill(1),this.params[t]={s:m,m:r.copy(),v:r.copy()}}const e=this.params[t].s.copy();e.map(r=>1/(r+1)),this.params[t].m.broadcastOperate(e,(r,m)=>r*(1-m));const p=e.copy();p.broadcastOperate(s,(r,m)=>r*m),this.params[t].m.broadcastOperate(p,(r,m)=>r+m),this.params[t].v.broadcastOperate(e,(r,m)=>r*(1-m));const n=e.copy();n.broadcastOperate(s,(r,m)=>r*m**2),this.params[t].v.broadcastOperate(n,(r,m)=>r+m);const o=this.params[t].m.copy();o.broadcastOperate(this.params[t].v,(r,m)=>r**2/(m+1e-12)),this.params[t].s.broadcastOperate(o,(r,m)=>1+(1-m)*r);const i=o.copy();return i.broadcastOperate(this.params[t].v,(r,m)=>Math.min(this.lr,r)/Math.sqrt(m+1e-12)),i.broadcastOperate(s,(r,m)=>r*m),h?i.toScaler():i}}}}class N{static{g(this,"AdaMaxOptimizer")}constructor(a=.002,t=.9,s=.999){this._learningrate=a,this._beta1=t,this._beta2=s}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const n=s.copy();n.fill(0),this.params[t]={v:n.copy(),s:n,c:1}}this.params[t].v.broadcastOperate(s,(n,o)=>n*a._beta1+o*(1-a._beta1)),this.params[t].s.broadcastOperate(s,(n,o)=>Math.max(n*a._beta2,Math.abs(o)));const e=1-a._beta1**this.params[t].c,p=this.params[t].v.copy();return p.broadcastOperate(this.params[t].s,(n,o)=>n/e*(this.lr/o)),this.params[t].c++,h?p.toScaler():p}}}}class w{static{g(this,"NadamOptimizer")}constructor(a=.002,t=.975,s=.999){this._learningrate=a,this._mu=t,this._nu=s}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const i=s.copy();i.fill(0),this.params[t]={m:i.copy(),v:i,t:1}}this.params[t].m.broadcastOperate(s,(i,r)=>i*a._mu+r*(1-a._mu)),this.params[t].v.broadcastOperate(s,(i,r)=>i*a._nu+r**2*(1-a._nu));const e=this.params[t].t,p=this.params[t].m.copy();p.broadcastOperate(s,(i,r)=>i*a._mu/(1-a._mu**(e+1))+r*(1-a._mu)/(1-a._mu**e));const n=a._nu/(1-a._nu**e),o=this.params[t].v.copy();return o.broadcastOperate(p,(i,r)=>this.lr*r/Math.sqrt(n*i+1e-12)),this.params[t].t++,h?o.toScaler():o}}}}class A{static{g(this,"SantaEOptimizer")}constructor(a=.01,t=.95,s=100,h=5,e=16,p=.01){this._learningrate=a,this._sigma=t,this._beta=n=>n**.5,this._burnin=s,this._c=h,this._n=e,this._lambda=p,this._z=()=>{const n=Math.random(),o=Math.random();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*o)}}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const i=s.copy();i.fill(0);const r=s.copy();r.fill(Math.sqrt(this.lr)*a._c);const m=s.copy();m.map(()=>Math.sqrt(this.lr)*a._z()),this.params[t]={v:i.copy(),g:i,a:r,u:m,t:1}}this.params[t].v.broadcastOperate(s,(i,r)=>i*a._sigma+r**2*(1-a._sigma)/a._n**2);const e=this.params[t].g.copy(),p=this.params[t].u.copy();if(this.params[t].g=this.params[t].v.copy(),this.params[t].g.map(i=>1/Math.sqrt(a._lambda+Math.sqrt(i))),this.params[t].t<a._burnin){const i=a._beta(this.params[t].t),r=this.lr/i;this.params[t].a.broadcastOperate(this.params[t].u,(c,O)=>c+(O**2-r));const m=e.copy();m.broadcastOperate(this.params[t].g,(c,O)=>c/O),this.params[t].u.broadcastOperate(m,(c,O)=>r*(1-O)/c),this.params[t].u.broadcastOperate(e,(c,O)=>c+Math.sqrt(2*r*O)*a._z())}else this.params[t].u.fill(0);p.broadcastOperate(this.params[t].a,(i,r)=>i*(1-r)),this.params[t].u.broadcastOperate(p,(i,r)=>i+r);const n=this.params[t].g.copy();n.broadcastOperate(s,(i,r)=>i*r),this.params[t].u.broadcastOperate(n,(i,r)=>i-this.lr*r);const o=this.params[t].u.copy();return o.broadcastOperate(this.params[t].g,(i,r)=>-i*r),this.params[t].t++,h?o.toScaler():o}}}}class G{static{g(this,"SantaSSSOptimizer")}constructor(a=.01,t=.95,s=100,h=5,e=16,p=.01){this._learningrate=a,this._sigma=t,this._beta=n=>n**.5,this._burnin=s,this._c=h,this._n=e,this._lambda=p,this._z=()=>{const n=Math.random(),o=Math.random();return Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*o)}}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const r=s.copy();r.fill(0);const m=s.copy();m.fill(Math.sqrt(this.lr)*a._c);const c=s.copy();c.map(()=>Math.sqrt(this.lr)*a._z()),this.params[t]={v:r.copy(),g:r,a:m,u:c,t:1}}this.params[t].v.broadcastOperate(s,(r,m)=>r*a._sigma+m**2*(1-a._sigma)/a._n**2);const e=this.params[t].g.copy(),p=this.params[t].u.copy();if(this.params[t].g=this.params[t].v.copy(),this.params[t].g.map(r=>1/Math.sqrt(a._lambda+Math.sqrt(r))),this.params[t].t<a._burnin){const r=a._beta(this.params[t].t),m=this.lr/r;this.params[t].a.broadcastOperate(this.params[t].u,(_,b)=>_+(b**2-m)/2),this.params[t].u.broadcastOperate(this.params[t].a,(_,b)=>Math.exp(-b/2)*_);const c=e.copy();c.broadcastOperate(this.params[t].g,(_,b)=>_/b),c.broadcastOperate(p,(_,b)=>m*(1-_)/b),this.params[t].u.broadcastOperate(c,(_,b)=>_+b),this.params[t].u.broadcastOperate(e,(_,b)=>_+Math.sqrt(2*m*b)*a._z());const O=this.params[t].g.copy();O.broadcastOperate(s,(_,b)=>_*b),this.params[t].u.broadcastOperate(O,(_,b)=>_-this.lr*b),this.params[t].u.broadcastOperate(this.params[t].a,(_,b)=>Math.exp(-b/2)*_),this.params[t].a.broadcastOperate(this.params[t].u,(_,b)=>_+(b**2-m)/2)}else{this.params[t].u.broadcastOperate(this.params[t].a,(m,c)=>Math.exp(-c/2)*m);const r=this.params[t].g.copy();r.broadcastOperate(s,(m,c)=>m*c),this.params[t].u.broadcastOperate(r,(m,c)=>m-this.lr*c),this.params[t].u.broadcastOperate(this.params[t].a,(m,c)=>Math.exp(-c/2)*m)}const n=this.params[t].g.copy();n.broadcastOperate(p,(r,m)=>r*m/2);const o=this.params[t].g.copy();o.broadcastOperate(this.params[t].u,(r,m)=>r*m/2);const i=n.copy();return i.broadcastOperate(o,(r,m)=>-r-m),this.params[t].t++,h?i.toScaler():i}}}}class P{static{g(this,"AMSGradOptimizer")}constructor(a=.001,t=.9,s=.999){this._learningrate=a,this._beta1=t,this._beta2=s,this._a=h=>this._learningrate/Math.sqrt(h)}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const n=s.copy();n.fill(0),this.params[t]={m:n.copy(),v:n.copy(),vh:n,t:1}}this.params[t].m.broadcastOperate(s,(n,o)=>n*a._beta1+o*(1-a._beta1)),this.params[t].v.broadcastOperate(s,(n,o)=>n*a._beta2+o**2*(1-a._beta2)),this.params[t].vh.broadcastOperate(this.params[t].v,(n,o)=>Math.max(n,o));const e=this.params[t].m.copy(),p=a._a(this.params[t].t);return e.broadcastOperate(this.params[t].vh,(n,o)=>p*n/Math.sqrt(o+1e-12)),this.params[t].t++,h?e.toScaler():e}}}}class B{static{g(this,"AdaBoundOptimizer")}constructor(a=.001,t=.003,s=.9,h=.999){this._learningrate=a,this._alpha=t,this._beta1=s,this._beta2=h,this._eta_lbound=e=>this._learningrate*(1-1/((1-h)*e+1)),this._eta_ubound=e=>this._learningrate*(1+1/((1-h)*e+1))}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const i=s.copy();i.fill(0),this.params[t]={m:i.copy(),v:i,t:1}}this.params[t].m.broadcastOperate(s,(i,r)=>i*a._beta1+r*(1-a._beta1)),this.params[t].v.broadcastOperate(s,(i,r)=>i*a._beta2+(1-a._beta2)*r*r);const e=a._eta_lbound(this.params[t].t),p=a._eta_ubound(this.params[t].t),n=this.params[t].v.copy();n.map(i=>Math.min(p,Math.max(e,a._alpha/Math.sqrt(i))));const o=this.params[t].m.copy();return o.broadcastOperate(n,(i,r)=>i*r/Math.sqrt(this.params[t].t)),this.params[t].t++,h?o.toScaler():o}}}}class D{static{g(this,"AMSBoundOptimizer")}constructor(a=.001,t=.003,s=.9,h=.999){this._learningrate=a,this._alpha=t,this._beta1=s,this._beta2=h,this._eta_lbound=e=>this._learningrate*(1-1/((1-h)*e+1)),this._eta_ubound=e=>this._learningrate*(1+1/((1-h)*e+1))}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const i=s.copy();i.fill(0),this.params[t]={m:i.copy(),v:i.copy(),vh:i,t:1}}this.params[t].m.broadcastOperate(s,(i,r)=>i*a._beta1+r*(1-a._beta1)),this.params[t].v.broadcastOperate(s,(i,r)=>i*a._beta2+(1-a._beta2)*r*r),this.params[t].vh.broadcastOperate(this.params[t].v,(i,r)=>Math.max(i,r));const e=a._eta_lbound(this.params[t].t),p=a._eta_ubound(this.params[t].t),n=this.params[t].vh.copy();n.map(i=>Math.min(p,Math.max(e,a._alpha/Math.sqrt(i))));const o=this.params[t].m.copy();return o.broadcastOperate(n,(i,r)=>i*r/Math.sqrt(this.params[t].t)),this.params[t].t++,h?o.toScaler():o}}}}class E{static{g(this,"AdaBeliefOptimizer")}constructor(a=.001,t=.9,s=.999){this._learningrate=a,this._beta1=t,this._beta2=s}set learningRate(a){this._learningrate=a}manager(){const a=this;return{get lr(){return a._learningrate},params:{},delta(t,s){const h=typeof s=="number";if(h&&(s=new d(1,1,s)),!this.params[t]){const i=s.copy();i.fill(0),this.params[t]={m:i.copy(),v:i,t:1}}this.params[t].m.broadcastOperate(s,(i,r)=>i*a._beta1+r*(1-a._beta1));const e=this.params[t].m.copy();e.broadcastOperate(s,(i,r)=>r-i),this.params[t].v.broadcastOperate(e,(i,r)=>i*a._beta2+(1-a._beta2)*r*r);const p=1-a._beta1**this.params[t].t,n=1-a._beta2**this.params[t].t,o=this.params[t].m.copy();return o.broadcastOperate(this.params[t].v,(i,r)=>i/p*(this.lr/Math.sqrt(r/n+1e-12))),this.params[t].t++,h?o.toScaler():o}}}}export{E as adabelief,B as adabound,S as adadelta,z as adagrad,R as adam,N as adamax,D as amsbound,P as amsgrad,M as momentum,w as nadam,q as rmsprop,x as rmspropgraves,A as santae,G as santasss,f as sgd,I as smorms3};
