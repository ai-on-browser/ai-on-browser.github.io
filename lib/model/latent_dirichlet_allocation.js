import{Matrix}from"../util/math.js";export default class LatentDirichletAllocation{constructor(t=2){this._k=t,this._alpha=.1,this._beta=.1}init(t,i=20){this._x=Matrix.fromArray(t);const h=this._x.max(0).value,s=this._x.min(0).value;this._w=t.map((t=>t.map(((t,_)=>Math.floor((t-s[_])/(h[_]-s[_])*(i-1))+_*i)))),this._zmn=[],this._nmz=new Matrix(this._w.length,this._k,this._alpha),this._nzt=new Matrix(this._k,i*this._x.cols,this._beta),this._nz=this._nzt.sum(1),this._n=0;for(let t=0;t<this._w.length;t++){this._n+=this._w[t].length,this._zmn[t]=[];for(let i=0;i<this._w[t].length;i++){const h=Math.floor(Math.random()*this._k);this._zmn[t][i]=h,this._nmz.addAt(t,h,1),this._nzt.addAt(h,this._w[t][i],1),this._nz.addAt(h,0,1)}}}fit(){for(let t=0;t<this._w.length;t++)for(let i=0;i<this._w[t].length;i++){const h=this._zmn[t][i];this._nmz.subAt(t,h,1),this._nzt.subAt(h,this._w[t][i],1),this._nz.subAt(h,0,1);const s=this._nzt.col(this._w[t][i]);s.mult(this._nmz.row(t).t),s.div(this._nz),s.div(s.sum());let _=Math.random(),n=0;for(;n<this._k&&(_-=s.at(n,0),!(_<0));n++);this._zmn[t][i]=n,this._nmz.addAt(t,n,1),this._nzt.addAt(n,this._w[t][i],1),this._nz.addAt(n,0,1)}}predict(){return this._nmz.argmax(1).value}}