import Matrix from"../util/matrix.js";export default class LatentDirichletAllocation{constructor(t=2){this._k=t,this._alpha=.1,this._beta=.1}init(t){const i=new Set;for(let h=0;h<t.length;h++)for(let s=0;s<t[h].length;s++)i.add(t[h][s]);this._x_cand=[...i],this._w=t.map((t=>t.map((t=>this._x_cand.indexOf(t))))),this._zmn=[],this._nmz=new Matrix(this._w.length,this._k,this._alpha),this._nzt=new Matrix(this._k,this._x_cand.length,this._beta),this._nz=this._nzt.sum(1),this._n=0;for(let t=0;t<this._w.length;t++){this._n+=this._w[t].length,this._zmn[t]=[];for(let i=0;i<this._w[t].length;i++){const h=Math.floor(Math.random()*this._k);this._zmn[t][i]=h,this._nmz.addAt(t,h,1),this._nzt.addAt(h,this._w[t][i],1),this._nz.addAt(h,0,1)}}}fit(){for(let t=0;t<this._w.length;t++)for(let i=0;i<this._w[t].length;i++){const h=this._zmn[t][i];this._nmz.subAt(t,h,1),this._nzt.subAt(h,this._w[t][i],1),this._nz.subAt(h,0,1);const s=this._nzt.col(this._w[t][i]);s.mult(this._nmz.row(t).t),s.div(this._nz),s.div(s.sum());let n=Math.random(),_=0;for(;_<this._k&&(n-=s.at(_,0),!(n<0));_++);this._zmn[t][i]=_,this._nmz.addAt(t,_,1),this._nzt.addAt(_,this._w[t][i],1),this._nz.addAt(_,0,1)}}predict(){return this._nmz.argmax(1).value}}