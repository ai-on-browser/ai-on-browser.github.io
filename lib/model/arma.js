var q=Object.defineProperty;var M=(u,r)=>q(u,"name",{value:r,configurable:!0});import c from"../util/matrix.js";export default class d{static{M(this,"ARMA")}constructor(r,e){this._p=r,this._q=e,this._rate=.1,this._beta=1e-5,this._phi=Array(this._p).fill(0),this._the=Array(this._q).fill(.3)}fit(r){const e=r,o=e.length,l=Math.max(this._p,this._q);for(let a=0;a<1;a++){this._u=[e[0]];for(let t=1;t<o;t++){let s=e[t];for(let _=0;_<Math.min(t,this._p);_++)s-=this._phi[_]*e[t-_-1];for(let _=0;_<Math.min(t,this._q);_++)s+=this._the[_]*this._u[t-_-1];this._u[t]=s}let i=c.zeros(o,this._p+this._q);for(let t=0;t<o;t++){for(let s=0;s<Math.min(t,this._p);s++)i.set(t,s,-e[t-s-1]);for(let s=0;s<Math.min(t,this._q);s++)i.set(t,s+this._p,this._u[t-s-1])}i=i.slice(l);const h=new c(o-l,1,this._u.slice(l)),p=i.tDot(i);p.add(c.eye(p.rows,p.cols,this._beta));const n=p.solve(i.tDot(h)).value;let f=n.reduce((t,s)=>t+Math.abs(s),0);if(f/=this._phi.reduce((t,s)=>t+Math.abs(s),0)+this._the.reduce((t,s)=>t+Math.abs(s),0),isNaN(f)||f<1e-12)break;for(let t=0;t<this._p;t++)this._phi[t]-=this._rate*n[t];for(let t=0;t<this._q;t++)this._the[t]-=this._rate*n[t+this._p]}}predict(r,e){const o=[],l=r.slice(r.length-Math.max(this._p,this._q));l.reverse();for(let a=0;a<e;a++){let i=0;for(let h=0;h<this._p;h++)i+=this._phi[h]*l[h];i+=this._u[this._u.length-1];for(let h=0;h<this._q;h++)i-=this._u[this._u.length-h-2]*this._the[h];o.push(i),l.unshift(i),l.pop()}return o}}
