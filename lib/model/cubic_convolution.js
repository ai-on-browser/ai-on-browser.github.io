export default class CubicConvolutionInterpolation{constructor(t){this._a=t}fit(t){this._v=t}predict(t){const i=this._v.length;return t.map((t=>{let s=0;for(let a=Math.max(0,Math.floor(t-2));a<Math.min(i,Math.ceil(t+2));a++){const i=Math.abs(a-t);if(i<1){const t=(this._a+2)*i**3-(this._a+3)*i**2+1;s+=this._v[a]*t}else if(i<2){const t=this._a*i**3-5*this._a*i**2+8*this._a*i-4*this._a;s+=this._v[a]*t}}return s}))}}