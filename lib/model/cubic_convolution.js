var _=Object.defineProperty;var e=(n,t)=>_(n,"name",{value:t,configurable:!0});export default class c{static{e(this,"CubicConvolutionInterpolation")}constructor(t){this._a=t}fit(t){this._v=t}predict(t){const r=this._v.length;return t.map(h=>{let a=0;for(let s=Math.max(0,Math.floor(h-2));s<Math.min(r,Math.ceil(h+2));s++){const i=Math.abs(s-h);if(i<1){const o=(this._a+2)*i**3-(this._a+3)*i**2+1;a+=this._v[s]*o}else if(i<2){const o=this._a*i**3-5*this._a*i**2+8*this._a*i-4*this._a;a+=this._v[s]*o}}return a})}}
