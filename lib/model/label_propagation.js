var c=Object.defineProperty;var _=(h,t)=>c(h,"name",{value:t,configurable:!0});import f from"../util/matrix.js";export default class y{static{_(this,"LabelPropagation")}constructor(t="rbf"){typeof t=="string"?this._affinity={name:t}:this._affinity=t}_affinity_matrix(t){const s=t.rows,a=f.zeros(s,s);for(let i=0;i<s;i++)for(let n=i+1;n<s;n++){let r=f.sub(t.row(i),t.row(n)).norm();a.set(i,n,r),a.set(n,i,r)}const o=f.zeros(s,s),e=this._affinity.k??1/0;if(e>=s)o.fill(1);else if(e>0){for(let i=0;i<s;i++){const n=a.row(i).value.map((r,l)=>[r,l]);n.sort((r,l)=>r[0]-l[0]);for(let r=1;r<Math.min(e+1,n.length);r++)o.set(i,n[r][1],1)}o.add(o.t),o.div(2)}if(this._affinity.name==="rbf"){const i=this._affinity.sigma??.1;return f.map(a,(n,r)=>o.at(r)>0?Math.exp(-(n**2)/i**2):0)}else if(this._affinity.name==="knn")return f.map(o,i=>i>0?1:0)}init(t,s){t=f.fromArray(t);const a=t.rows;this._y=s;const o=new Set;for(let e=0;e<a;e++)this._y[e]!=null&&o.add(this._y[e]);this._classes=[...o],this._w=this._affinity_matrix(t),this._probs=f.zeros(a,this._classes.length);for(let e=0;e<a;e++)this._y[e]!=null&&this._probs.set(e,this._classes.indexOf(this._y[e]),1)}fit(){const t=this._w.dot(this._probs);t.div(t.sum(1));for(let s=0;s<this._y.length;s++)this._y[s]==null&&this._probs.set(s,0,t.row(s))}predict(){return this._probs.argmax(1).value.map(t=>this._classes[t])}}
