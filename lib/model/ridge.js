var u=Object.defineProperty;var h=(l,t)=>u(l,"name",{value:t,configurable:!0});import o from"../util/matrix.js";export class Ridge{static{h(this,"Ridge")}constructor(t=.1){this._w=null,this._lambda=t}fit(t,r){t=o.fromArray(t),r=o.fromArray(r);const i=t.tDot(t);for(let s=0;s<i.rows;s++)i.addAt(s,s,this._lambda);this._w=i.solve(t.t).dot(r)}predict(t){return t=o.fromArray(t),t.dot(this._w).toArray()}importance(){return this._w.value}}export class MulticlassRidge{static{h(this,"MulticlassRidge")}constructor(t=.1){this._w=null,this._lambda=t,this._classes=[]}get categories(){return this._classes}fit(t,r){t=o.fromArray(t),this._classes=[...new Set(r)];const i=new o(r.length,this._classes.length,-1);for(let e=0;e<r.length;e++)i.set(e,this._classes.indexOf(r[e]),1);const s=t.tDot(t);for(let e=0;e<s.rows;e++)s.addAt(e,e,this._lambda);this._w=s.solve(t.t).dot(i)}predict(t){return t=o.fromArray(t),t.dot(this._w).argmax(1).value.map(r=>this._classes[r])}importance(){return this._w.toArray()}}export class KernelRidge{static{h(this,"KernelRidge")}constructor(t=.1,r="gaussian"){if(this._w=null,this._x=null,this._lambda=t,this._kernel=null,typeof r=="function")this._kernel=(i,s)=>r(i.value,s.value);else{typeof r=="string"&&(r={name:r});const i=r.s??1;this._kernel=(s,e,a=i)=>{const _=o.sub(s,e).reduce((c,n)=>c+n*n,0);return Math.exp(-_/a**2)}}}fit(t,r){t=o.fromArray(t),r=o.fromArray(r);const i=new o(t.rows,t.rows);this._x=[];for(let s=0;s<t.rows;s++){this._x.push(t.row(s)),i.set(s,s,this._kernel(this._x[s],this._x[s])+this._lambda);for(let e=0;e<s;e++){const a=this._kernel(this._x[s],this._x[e]);i.set(s,e,a),i.set(e,s,a)}}this._w=i.solve(r)}predict(t){t=o.fromArray(t);const r=new o(t.rows,this._x.length);for(let i=0;i<t.rows;i++){const s=t.row(i);for(let e=0;e<this._x.length;e++){const a=this._kernel(s,this._x[e]);r.set(i,e,a)}}return r.dot(this._w).toArray()}importance(){return this._w.value}}
