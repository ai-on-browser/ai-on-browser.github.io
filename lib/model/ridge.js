var c=Object.defineProperty;var h=(l,t)=>c(l,"name",{value:t,configurable:!0});import o from"../util/matrix.js";export class Ridge{static{h(this,"Ridge")}constructor(t=.1){this._w=null,this._lambda=t}fit(t,e){t=o.fromArray(t),e=o.fromArray(e);const i=t.tDot(t);for(let s=0;s<i.rows;s++)i.addAt(s,s,this._lambda);this._w=i.solve(t.t).dot(e)}predict(t){return t=o.fromArray(t),t.dot(this._w).toArray()}importance(){return this._w.value}}export class MulticlassRidge{static{h(this,"MulticlassRidge")}constructor(t=.1){this._w=null,this._lambda=t,this._classes=[]}get categories(){return this._classes}fit(t,e){t=o.fromArray(t),this._classes=[...new Set(e)];const i=new o(e.length,this._classes.length,-1);for(let r=0;r<e.length;r++)i.set(r,this._classes.indexOf(e[r]),1);const s=t.tDot(t);for(let r=0;r<s.rows;r++)s.addAt(r,r,this._lambda);this._w=s.solve(t.t).dot(i)}predict(t){return t=o.fromArray(t),t.dot(this._w).argmax(1).value.map(e=>this._classes[e])}importance(){return this._w.toArray()}}export class KernelRidge{static{h(this,"KernelRidge")}constructor(t=.1,e="gaussian"){this._w=null,this._x=null,this._lambda=t,this._kernel=null,typeof e=="function"?this._kernel=(i,s)=>e(i.value,s.value):e==="gaussian"&&(this._kernel=(i,s,r=1)=>{const a=o.sub(i,s).reduce((_,n)=>_+n*n,0);return Math.exp(-a/r**2)})}fit(t,e){t=o.fromArray(t),e=o.fromArray(e);const i=new o(t.rows,t.rows);this._x=[];for(let s=0;s<t.rows;s++){this._x.push(t.row(s)),i.set(s,s,this._kernel(this._x[s],this._x[s])+this._lambda);for(let r=0;r<s;r++){const a=this._kernel(this._x[s],this._x[r]);i.set(s,r,a),i.set(r,s,a)}}this._w=i.solve(e)}predict(t){t=o.fromArray(t);const e=new o(t.rows,this._x.length);for(let i=0;i<t.rows;i++){const s=t.row(i);for(let r=0;r<this._x.length;r++){const a=this._kernel(s,this._x[r]);e.set(i,r,a)}}return e.dot(this._w).toArray()}importance(){return this._w.value}}
