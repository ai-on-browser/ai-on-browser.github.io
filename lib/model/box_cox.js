var o=Object.defineProperty;var f=(_,t)=>o(_,"name",{value:t,configurable:!0});export default class m{static{f(this,"BoxCox")}constructor(t=null){this._lambda=t,this._lambda_cand=[];for(let r=0;r<=200;r++)this._lambda_cand.push((r-100)/10)}_cdf(t){return 1/(1+Math.exp(-1.7*t))}_ppf(t){if(t>=1)return 1/0;if(t===.5)return 0;if(t<.5)return-this._ppf(1-t);let r=0,a=null,i=1;const l=1e-8;let n=1e4;for(;n-- >0;){const e=this._cdf(i);if(Math.abs(e-t)<l)return i;t<e?(a=i,i=(i+r)/2):(r=i,i=a===null?i*2:(i+a)/2)}throw"loop converged"}_j(t,r){const a=t.length,i=t.map(s=>this._t(s,r));i.sort((s,h)=>s-h);const l=i.reduce((s,h)=>s+h,0)/a,n=Math.sqrt(i.reduce((s,h)=>s+(h-l)**2,0)/a);let e=0;for(let s=0;s<a;s++)e+=(this._ppf((s+.5)/a)-(i[s]-l)/n)**2;return e}_t(t,r){return r===0?Math.log(t):(t**r-1)/r}fit(t){const r=[];if(Array.isArray(t[0]))for(let a=0;a<t[0].length;a++)r[a]=t.map(i=>i[a]);else r[0]=t;this._lambda=[];for(let a=0;a<r.length;a++){let i=1/0,l=0;for(const n of this._lambda_cand){const e=this._j(r[a],n);e<i&&(i=e,l=n)}this._lambda.push(l)}Array.isArray(t[0])||(this._lambda=this._lambda[0])}predict(t){return t.map(r=>Array.isArray(r)?Array.isArray(this._lambda)?r.map((a,i)=>this._t(a,this._lambda[i])):r.map(a=>this._t(a,this._lambda)):Array.isArray(this._lambda)?this._t(r,this._lambda[0]):this._t(r,this._lambda))}}
