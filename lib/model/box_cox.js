var f=Object.defineProperty;var m=(_,r)=>f(_,"name",{value:r,configurable:!0});export default class d{static{m(this,"BoxCox")}constructor(r=null){this._lambda=r,this._lambda_cand=[];for(let t=0;t<=200;t++)this._lambda_cand.push((t-100)/10)}_cdf(r){return 1/(1+Math.exp(-1.7*r))}_ppf(r){if(r>=1)return 1/0;if(r===.5)return 0;if(r<.5)return-this._ppf(1-r);let t=0,a=null,i=1;const l=1e-8;let n=1e4;for(;n-- >0;){const e=this._cdf(i);if(Math.abs(e-r)<l)return i;r<e?(a=i,i=(i+t)/2):(t=i,i=a===null?i*2:(i+a)/2)}throw"loop converged"}_j(r,t){const a=r.length,i=r.map(s=>this._t(s,t));i.sort((s,h)=>s-h);const l=i.reduce((s,h)=>s+h,0)/a,n=Math.sqrt(i.reduce((s,h)=>s+(h-l)**2,0)/a);let e=0;for(let s=0;s<a;s++)e+=(this._ppf((s+.5)/a)-(i[s]-l)/n)**2;return e}_t(r,t){return t===0?Math.log(r):(r**t-1)/t}_it(r,t){return t===0?Math.exp(r):(r*t+1)**(1/t)}fit(r){const t=[];if(Array.isArray(r[0]))for(let a=0;a<r[0].length;a++)t[a]=r.map(i=>i[a]);else t[0]=r;this._lambda=[];for(let a=0;a<t.length;a++){let i=1/0,l=0;for(const n of this._lambda_cand){const e=this._j(t[a],n);e<i&&(i=e,l=n)}this._lambda.push(l)}Array.isArray(r[0])||(this._lambda=this._lambda[0])}predict(r){return r.map(t=>Array.isArray(t)?Array.isArray(this._lambda)?t.map((a,i)=>this._t(a,this._lambda[i])):t.map(a=>this._t(a,this._lambda)):Array.isArray(this._lambda)?this._t(t,this._lambda[0]):this._t(t,this._lambda))}inverse(r){return r.map(t=>Array.isArray(t)?Array.isArray(this._lambda)?t.map((a,i)=>this._it(a,this._lambda[i])):t.map(a=>this._it(a,this._lambda)):Array.isArray(this._lambda)?this._it(t,this._lambda[0]):this._it(t,this._lambda))}}
