export default class Slerp{constructor(t=1){this._o=t,this._sino=Math.sin(this._o)}fit(t,s){const i=t.map(((t,i)=>[t,s[i]]));i.sort(((t,s)=>t[0]-s[0])),this._x=i.map((t=>t[0])),this._y=i.map((t=>t[1]))}predict(t){const s=this._x.length;return t.map((t=>{if(t<=this._x[0])return this._y[0];if(t>=this._x[s-1])return this._y[s-1];for(let i=1;i<s;i++)if(t<=this._x[i]){const s=(t-this._x[i-1])/(this._x[i]-this._x[i-1]);return 0===this._o?(1-s)*this._y[i-1]+s*this._y[i]:(Math.sin((1-s)*this._o)*this._y[i-1]+Math.sin(s*this._o)*this._y[i])/this._sino}return this._y[s-1]}))}}