import NeuralNetwork from"./neuralnetwork.js";export default class Autoencoder{constructor(e,t,r,s,i){this._input_size=e,this._layers=[{type:"input",name:"in"}],this._layers.push(...r),this._layers.push({type:"full",out_size:t,name:"reduce"},{type:"sparsity",rho:.02,beta:1}),this._layers.push(...s),this._layers.push({type:"full",out_size:"in"}),this._model=NeuralNetwork.fromObject(this._layers,"mse",i),this._epoch=0}get epoch(){return this._epoch}fit(e,t,r,s,i){const o=this._model.fit(e,e,t,r,s,{rho:i});return this._epoch+=t,o[0]}predict(e){return this._model.calc(e).toArray()}reduce(e){return this._model.calc(e,null,["reduce"]).reduce.toArray()}}