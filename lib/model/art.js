var l=Object.defineProperty;var n=(r,t)=>l(r,"name",{value:t,configurable:!0});class _{static{n(this,"L2")}constructor(t=.5){this._beta=t}similarity(t,i){return 1/(Math.sqrt(i.reduce((s,e,h)=>s+(e-t[h])**2,0))+1e-12)}update(t,i){return i?i.map((s,e)=>this._beta*s+(1-this._beta)*t[e]):t.concat()}}export default class p{static{n(this,"ART")}constructor(t=1,i="l2"){i==="l2"&&(this._method=new _),this._t=t,this._protos=[]}get size(){return this._protos.length}fit(t){const i=[];for(let s=0;s<t.length;s++)if(this._protos.length===0)this._protos[0]=this._method.update(t[s],null),i[s]=0;else{const e=this._protos.map(o=>this._method.similarity(o,t[s])),h=Math.max(...e);if(h>=this._t){const o=e.indexOf(h);this._protos[o]=this._method.update(t[s],this._protos[o]),i[s]=o}else i[s]=this.size,this._protos[this.size]=this._method.update(t[s],null)}return i}predict(t){const i=[];for(let s=0;s<t.length;s++){const e=this._protos.map(o=>this._method.similarity(o,t[s])),h=Math.max(...e);if(h>=this._t){const o=e.indexOf(h);i[s]=o}else i[s]=-1}return i}}
