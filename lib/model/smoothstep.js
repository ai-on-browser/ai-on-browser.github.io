export default class SmoothstepInterpolation{constructor(t=1){this._n=t}_c(t,s){let i=1;for(let h=0;h<s;h++)i*=t-h,i/=h+1;return i}_s(t){let s=0;for(let i=0;i<=this._n;i++)s+=this._c(-this._n-1,i)*this._c(2*this._n+1,this._n-i)*t**(this._n+i+1);return s}fit(t,s){const i=t.map(((t,i)=>[t,s[i]]));i.sort(((t,s)=>t[0]-s[0])),this._x=i.map((t=>t[0])),this._y=i.map((t=>t[1]))}predict(t){const s=this._x.length;return t.map((t=>{if(t<=this._x[0])return this._y[0];if(t>=this._x[s-1])return this._y[s-1];for(let i=1;i<s;i++)if(t<=this._x[i]){const s=(t-this._x[i-1])/(this._x[i]-this._x[i-1]),h=this._s(s);return(1-h)*this._y[i-1]+h*this._y[i]}return this._y[s-1]}))}}