import{Matrix}from"../util/math.js";export default class TietjenMoore{constructor(t){this._k=t,this._mode="both"}_test_static(t){if(t=t.copy(),"both"===this._mode){t.sub(t.mean(0)),t.abs();const e=t.max(1).value.map(((t,e)=>[t,e]));e.sort(((t,e)=>e[0]-t[0]));let s=0,r=0;for(let t=0;t<e.length;t++)s+=e[t][0],t>=this._k&&(r+=e[t][0]);s/=e.length,r/=e.length-this._k;let i=0,o=0;for(let t=0;t<e.length;t++)i+=(e[t][0]-s)**2,t>=this._k&&(o+=(e[t][0]-r)**2);return[o/i,e.slice(0,this._k).map((t=>t[1]))]}}predict(t,e){const s=Matrix.fromArray(t),[r,i]=this._test_static(s),o=Matrix.randn(1e4,s.cols);o.mult(s.variance(0));const[a]=this._test_static(o),l=Array(s.rows).fill(!1);if(r<e)for(let t=0;t<i.length;t++)l[i[t]]=!0;return l}}