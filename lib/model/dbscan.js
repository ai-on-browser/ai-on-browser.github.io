var d=Object.defineProperty;var u=(f,o)=>d(f,"name",{value:o,configurable:!0});export default class b{static{u(this,"DBSCAN")}constructor(o=.5,l=5,i="euclid"){switch(this._eps=o,this._minPts=l,this._metric=i,this._metric){case"euclid":this._d=(r,e)=>Math.sqrt(r.reduce((c,h,t)=>c+(h-e[t])**2,0));break;case"manhattan":this._d=(r,e)=>r.reduce((c,h,t)=>c+Math.abs(h-e[t]),0);break;case"chebyshev":this._d=(r,e)=>Math.max(...r.map((c,h)=>Math.abs(c-e[h])));break}}predict(o){let l=0;const i=o.length,r=Array(i).fill(!1),e=Array(i),c=Array(i);for(let t=0;t<i;c[t++]=Array(i));for(let t=0;t<i;t++)for(let s=0;s<t;s++){const n=this._d(o[t],o[s]);c[t][s]=c[s][t]=n}const h=u(t=>{const s=[];for(let n=0;n<i;n++)c[t][n]<this._eps&&s.push(n);return s},"getNeighbors");for(let t=0;t<i;t++){if(r[t])continue;r[t]=!0;const s=h(t);if(s.length<this._minPts){e[t]=-1;continue}const n=l++;for(e[t]=n;s.length>0;){const a=s.pop();if(!r[a]){r[a]=!0;const _=h(a);_.length>=this._minPts&&s.push(..._)}e[a]||(e[a]=n)}}return e}}
