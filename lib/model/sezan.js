var I=Object.defineProperty;var y=(g,e)=>I(g,"name",{value:e,configurable:!0});export default class b{static{y(this,"SezanThresholding")}constructor(e=.5,h=5){this._gamma=e,this._sigma=h,this._count=256}predict(e){const h=e.reduce((t,i)=>Math.max(t,i),-1/0),c=e.reduce((t,i)=>Math.min(t,i),1/0),o=Array(this._count).fill(0);for(let t=0;t<e.length;t++)e[t]===h?o[this._count-1]++:o[Math.floor((e[t]-c)/(h-c)*this._count)]++;const l=[],u=55,r=Math.floor(u/2);let _=0;for(let t=0;t<u;t++)l[t]=Math.exp(-((t-r)**2)/(2*this._sigma**2)),_+=l[t];for(let t=0;t<l.length;t++)l[t]/=_;const f=[];for(let t=0;t<o.length;t++){f[t]=0;for(let i=t-r;i<=t+r;i++)i>=0&&i<o.length&&(f[t]+=o[i]*l[i-t+r])}const n=[0];for(let t=1;t<f.length;t++)n[t]=f[t-1]-f[t];n.push(0);const a=[],s=[];for(let t=0;t<n.length-1;t++)n[t+1]>=0&&n[t]<=0&&a.push(t),n[t+1]<=0&&n[t]>=0&&s.push(t);const p=a[0],d=a[a.length-1];let z=0,m=0,k=0,M=0;for(let t=0;t<s.length;t++)s[t]<p?z=s[t]:s[t]>p&&m===0&&(m=s[t]),s[t]<d?k=s[t]:s[t]>d&&M===0&&(M=s[t]);return this._th=((1-this._gamma)*m+this._gamma*k+.5)*(h-c)/this._count+c,e.map(t=>t<this._th?0:1)}}
