import{KMeanspp}from"./kmeans.js";import LaplacianEigenmaps from"./laplacian_eigenmaps.js";export default class SpectralClustering{constructor(i="rbf",s={}){this._size=0,this._epoch=0,this._clustering=new KMeanspp,this._affinity=i,this._sigma=s.sigma||1,this._k=s.k||10}get size(){return this._size}get epoch(){return this._epoch}init(i){const s=i.length;this._n=s;const t=new LaplacianEigenmaps(this._affinity,this._k,this._sigma,"normalized");this.ready=!1,t.predict(i,0),this._ev=t._ev,this._ev.flip(1)}add(){this._size++,this._clustering.clear();const i=this._ev.slice(this._n-this._size,this._n,1);this._s_ev=i.toArray();for(let i=0;i<this._size;i++)this._clustering.add(this._s_ev)}clear(){this._size=0,this._epoch=0,this._clustering.clear()}predict(){return this._clustering.predict(this._s_ev)}fit(){return this._epoch++,this._clustering.fit(this._s_ev)}}