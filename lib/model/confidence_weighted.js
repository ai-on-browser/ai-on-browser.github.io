var l=Object.defineProperty;var n=(r,t)=>l(r,"name",{value:t,configurable:!0});import o from"../util/matrix.js";export class ConfidenceWeighted{static{n(this,"ConfidenceWeighted")}constructor(t){this._eta=t,this._phi=this._ppf(this._eta),this._psi=1+this._phi**2/2,this._xi=1+this._phi**2}init(t,s){this._x=o.fromArray(t),this._c=this._x.mean(0),this._x.sub(this._c),this._y=s,this._d=this._x.cols,this._m=o.zeros(this._d,1),this._s=o.eye(this._d,this._d)}_cdf(t){return 1/(1+Math.exp(-1.7*t))}_ppf(t){if(t>=1)return 1/0;if(t===.5)return 0;if(t<.5)return-this._ppf(1-t);let s=0,i=null,h=1;const _=1e-8;let a=1e4;for(;a-- >0;){const e=this._cdf(h);if(Math.abs(e-t)<_)return h;t<e?(i=h,h=(h+s)/2):(s=h,h=i===null?h*2:(h+i)/2)}throw"loop converged"}_alpha(t,s){return Math.max(0,(-s*this._psi+Math.sqrt((s*this._phi**2/2)**2+t*this._phi**2*this._xi))/(t*this._xi))}update(t,s){const i=t.tDot(this._s).dot(t).toScaler(),h=this._m.tDot(t).toScaler(),_=this._alpha(i,h),a=(_*i*this._phi+Math.sqrt((_*i*this._phi)**2+4*i))/2,e=_*this._phi/(a+i*_*this._phi),p=this._s.dot(t);p.mult(_*s),this._m.add(p);const c=this._s.dot(t).dot(t.tDot(this._s));c.mult(e),this._s.sub(c)}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){const s=o.fromArray(t);return s.sub(this._c),s.dot(this._m).value.map(h=>h<=0?-1:1)}}export class SoftConfidenceWeighted extends ConfidenceWeighted{static{n(this,"SoftConfidenceWeighted")}constructor(t,s,i){super(t),this._cost=s,this._v=i}_alpha(t,s){if(this._v===1)return Math.min(this._cost,super._alpha(t,s));{const i=t+1/(2*this._cost),h=this._phi*Math.sqrt((this._phi*s*t)**2+4*i*t*(i+t*this._phi**2));return Math.max(0,(h-2*s*i-this._phi**2*s*t)/(2*(i**2+i*t*this._phi**2)))}}}
