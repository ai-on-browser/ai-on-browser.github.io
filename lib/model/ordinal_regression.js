import Matrix from"../util/matrix.js";export default class OrdinalRegression{constructor(t=.001){this._w=null,this._s=1,this._a=t}_gaussian(t){return t===1/0||t===-1/0?0:Math.exp(-(t**2)/(2*this._s**2))/Math.sqrt(2*Math.PI*this._s**2)}_cdf(t){if(t===1/0)return 1;if(t===-1/0)return 0;const s=t<0?-1:1,i=Math.abs(t)/Math.sqrt(2*this._s**2),r=1/(1+.3275911*i);return.5*(1+s*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-i*i)))}fit(t,s){t=Matrix.fromArray(t),this._response||(this._response=[...new Set(s)],this._response.sort(((t,s)=>t-s)),this._t=Array.from(this._response,((t,s)=>s-1)),this._t[0]=-1/0,this._t.push(1/0),this._w=Matrix.randn(t.cols,1,0,.1));const i=t.dot(this._w).value,r=Array(this._t.length).fill(0),h=Matrix.zeros(this._w.rows,this._w.cols);for(let _=0;_<s.length;_++){const e=this._response.indexOf(s[_]),a=this._cdf(this._t[e]-i[_]),n=this._cdf(this._t[e+1]-i[_]);if(a===n)continue;r[e]+=this._gaussian(this._t[e]-i[_])/(a-n),r[e+1]-=this._gaussian(this._t[e+1]-i[_])/(a-n);const o=t.row(_).t;o.mult((this._gaussian(this._t[e+1]-i[_])-this._gaussian(this._t[e]-i[_]))/(a-n)),h.add(o)}h.mult(this._a),this._w.add(h);for(let t=1;t<this._t.length-1;t++)this._t[t]+=this._a*r[t];this._t.sort(((t,s)=>t-s))}predict(t){const s=(t=Matrix.fromArray(t)).dot(this._w).value,i=[];for(let t=0;t<s.length;t++){i[t]=null;for(let r=0;r<this._response.length;r++)if(this._t[r]<s[t]&&s[t]<=this._t[r+1]){i[t]=this._response[r];break}}return i}}