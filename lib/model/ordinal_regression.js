var p=Object.defineProperty;var l=(f,t)=>p(f,"name",{value:t,configurable:!0});import c from"../util/matrix.js";export default class d{static{l(this,"OrdinalRegression")}constructor(t=.001){this._w=null,this._s=1,this._a=t}_gaussian(t){return t===1/0||t===-1/0?0:Math.exp(-(t**2)/(2*this._s**2))/Math.sqrt(2*Math.PI*this._s**2)}_cdf(t){if(t===1/0)return 1;if(t===-1/0)return 0;const o=.3275911,n=.254829592,r=-.284496736,h=1.421413741,s=-1.453152027,i=1.061405429,a=t<0?-1:1,e=Math.abs(t)/Math.sqrt(2*this._s**2),_=1/(1+o*e),u=1-((((i*_+s)*_+h)*_+r)*_+n)*_*Math.exp(-e*e);return .5*(1+a*u)}fit(t,o){t=c.fromArray(t),this._response||(this._response=[...new Set(o)],this._response.sort((s,i)=>s-i),this._t=Array.from(this._response,(s,i)=>i-1),this._t[0]=-1/0,this._t.push(1/0),this._w=c.randn(t.cols,1,0,.1));const n=t.dot(this._w).value,r=Array(this._t.length).fill(0),h=c.zeros(this._w.rows,this._w.cols);for(let s=0;s<o.length;s++){const i=this._response.indexOf(o[s]),a=this._cdf(this._t[i]-n[s]),e=this._cdf(this._t[i+1]-n[s]);if(a===e)continue;r[i]+=this._gaussian(this._t[i]-n[s])/(a-e),r[i+1]-=this._gaussian(this._t[i+1]-n[s])/(a-e);const _=t.row(s).t;_.mult((this._gaussian(this._t[i+1]-n[s])-this._gaussian(this._t[i]-n[s]))/(a-e)),h.add(_)}h.mult(this._a),this._w.add(h);for(let s=1;s<this._t.length-1;s++)this._t[s]+=this._a*r[s];this._t.sort((s,i)=>s-i)}predict(t){t=c.fromArray(t);const o=t.dot(this._w).value,n=[];for(let r=0;r<o.length;r++){n[r]=null;for(let h=0;h<this._response.length;h++)if(this._t[h]<o[r]&&o[r]<=this._t[h+1]){n[r]=this._response[h];break}}return n}}
