export default class ALMA{constructor(t=2,s=1,h=1,i=1){this._p=t,this._alpha=s,this._b=h,this._c=i,this._w=null,this._w0=0,this._k=1}update(t,s){const h=this._b*Math.sqrt((this._p-1)/this._k),i=this._w.reduce(((s,h,i)=>s+h*t[i]),this._w0);if(i*s>(1-this._alpha)*h)return;const _=this._c/Math.sqrt((this._p-1)*this._k),e=this._w.map(((h,i)=>t[i]*_*s+h)),r=_*s+this._w0,a=e.reduce(((t,s)=>t+s**this._p),r**this._p)**(1/this._p),p=Math.max(1,a);this._w=e.map((t=>t/p)),this._w0=r/p,this._k++}fit(t,s){this._w||(this._w=Array(t[0].length).fill(0));for(let h=0;h<t.length;h++)this.update(t[h],s[h])}predict(t){const s=[];for(let h=0;h<t.length;h++){const i=t[h].reduce(((t,s,h)=>t+s*this._w[h]),this._w0);s[h]=i<=0?-1:1}return s}}