import Matrix from"../util/matrix.js";export default class ALMA{constructor(t=2,i=1,s=1,h=1){this._p=t,this._alpha=i,this._b=s,this._c=h,this._w=null,this._k=1}init(t,i){this._x=Matrix.fromArray(t),this._y=i,this._w=Matrix.zeros(this._x.cols,1),this._w0=0,this._k=1}update(t,i){const s=this._b*Math.sqrt((this._p-1)/this._k);if((this._w.tDot(t).toScaler()+this._w0)*i>(1-this._alpha)*s)return;const h=this._c/Math.sqrt((this._p-1)*this._k),_=Matrix.mult(t,h*i);_.add(this._w);const r=h*i+this._w0,a=_.value.reduce(((t,i)=>t+i**this._p),r**this._p)**(1/this._p);_.div(Math.max(1,a)),this._w=_,this._w0=r/Math.max(1,a),this._k++}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){return Matrix.fromArray(t).dot(this._w).value.map((t=>t+this._w0<=0?-1:1))}}