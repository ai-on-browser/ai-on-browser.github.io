import NeuralNetwork from"./neuralnetwork.js";export default class RNN{constructor(t="lstm",e=10,s=10,i=1,h="adam"){this._window=e,this._method=t,this._layers=[{type:"input"}],this._layers.push({type:t,size:s}),this._layers.push({type:"full",out_size:i}),this._model=NeuralNetwork.fromObject(this._layers,"mse",h),this._epoch=0}get method(){return this._method}get epoch(){return this._epoch}fit(t,e,s,i,h){const o=[];for(let e=0;e<t.length-this._window;e++)o.push(t.slice(e,e+this._window));const r=e.slice(this._window);this._model.fit(o,r,s,i,h),this._epoch+=s}predict(t,e){const s=[],i=t.slice(t.length-this._window);for(let t=0;t<e;t++){const t=[i],e=this._model.calc(t).toArray()[0];s.push(e),i.push(e),i.shift()}return s}}