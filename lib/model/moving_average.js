var l=Object.defineProperty;var c=(i,e)=>l(i,"name",{value:e,configurable:!0});export class SimpleMovingAverage{static{c(this,"SimpleMovingAverage")}constructor(e){this._n=e}predict(e){const r=[];for(let t=0;t<e.length;t++){const n=Math.min(this._n,t+1);r[t]=0;for(let o=t-n+1;o<=t;o++)r[t]+=e[o];r[t]/=n}return r}}export class LinearWeightedMovingAverage{static{c(this,"LinearWeightedMovingAverage")}constructor(e){this._n=e}predict(e){const r=[];for(let t=0;t<e.length;t++){const n=Math.max(0,t-this._n+1);r[t]=0;let o=0;for(let s=n;s<=t;s++)r[t]+=(s-n+1)*e[s],o+=s-n+1;r[t]/=o}return r}}export class TriangularMovingAverage{static{c(this,"TriangularMovingAverage")}constructor(e){this._k=e}predict(e){const r=new SimpleMovingAverage(this._k),t=r.predict(e);return r.predict(t)}}
