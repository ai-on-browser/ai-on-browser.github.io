var _=Object.defineProperty;var h=(o,i)=>_(o,"name",{value:i,configurable:!0});export default class g{static{h(this,"CAST")}constructor(i){this._t=i}get size(){return this._clusters.length}_similarity(i,s){return Math.exp(-i.reduce((l,n,r)=>l+(n-s[r])**2,0))}_add(i,s,l,n){for(;;){let r=-1/0,t=-1;for(let e=0;e<i.length;e++)s[i[e]]>r&&(r=s[i[e]],t=e);if(r<this._t*l.length)return;for(const e of l)s[e]+=n[e][i[t]];for(const e of i)s[e]+=n[e][i[t]];l.push(i[t]),i.splice(t,1)}}_remove(i,s,l,n){for(;;){let r=1/0,t=-1;for(let e=0;e<l.length;e++)s[l[e]]<r&&(r=s[l[e]],t=e);if(r>=this._t*l.length)return;for(const e of l)s[e]+=n[e][i[t]];for(const e of i)s[e]+=n[e][i[t]];i.push(l[t]),l.splice(t,1)}}fit(i){const s=i.length,l=[],n=Array.from({length:s},(r,t)=>t);for(let r=0;r<s;r++)l[r]=[];for(let r=0;r<s;r++)for(let t=r;t<s;t++)l[r][t]=l[t][r]=this._similarity(i[r],i[t]);for(this._clusters=[];n.length>0;){const r=Array(s).fill(0),t=[];let e;do e=t.concat(),this._add(n,r,t,l),this._remove(n,r,t,l),t.sort();while(e.length!==t.length||e.some((f,c)=>f!==t[c]));this._clusters.push(t)}}predict(){const i=[];for(let s=0;s<this._clusters.length;s++)for(const l of this._clusters[s])i[l]=s;return i}}
