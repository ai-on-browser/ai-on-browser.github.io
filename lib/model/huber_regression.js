import{Matrix}from"../util/math.js";export default class HuberRegression{constructor(t=1.35){this._e=t,this._s=1,this._w=null}fit(t,s){const r=(t=Matrix.fromArray(t)).resize(t.rows,t.cols+1,1);s=Matrix.fromArray(s),this._w||(this._w=Matrix.randn(r.cols,s.cols)),this._ls(r,s)}_ls(t,s){const r=t.dot(this._w);r.sub(s),r.map((t=>Math.abs(t/this._s)<=this._e?1:this._e/Math.abs(t/this._s)));for(let o=0;o<this._w.cols;o++){const i=t.copyMult(r.col(o)),a=i.tDot(t).solve(i.tDot(s.col(o)));this._w.set(0,o,a)}}predict(t){return(t=Matrix.fromArray(t)).resize(t.rows,t.cols+1,1).dot(this._w).toArray()}}