export default class NLMeans{constructor(t,e){this._h=e,this._neighbor=t}_d(t,e){return t.reduce(((t,h,n)=>t+(h-e[n])**2),0)}predict(t){const e=[];for(let h=0;h<t.length;h++)for(let n=0;n<t[h].length;n++){const l=[];for(let e=h-this._neighbor;e<=h+this._neighbor;e++)for(let o=n-this._neighbor;o<=n+this._neighbor;o++){const n=Math.max(0,Math.min(t.length-1,e)),r=Math.max(0,Math.min(t[h].length-1,o));l.push(...t[n][r])}e.push(l)}const h=[];for(let t=0;t<e.length;t++){h[t]=[];for(let n=0;n<=t;n++){const l=Math.exp(-this._d(e[t],e[n])/this._h**2);h[t][n]=h[n][t]=l}}const n=[];for(let e=0,l=0;e<t.length;e++){n[e]=[];for(let o=0;o<t[e].length;o++,l++){const r=Array(t[e][o].length).fill(0);let s=0;for(let e=0,n=0;e<t.length;e++)for(let o=0;o<t[e].length;o++,n++){const i=h[l][n];s+=i;for(let h=0;h<r.length;h++)r[h]+=i*t[e][o][h]}n[e][o]=r.map((t=>t/s))}}return n}}