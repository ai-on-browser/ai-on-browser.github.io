var d=Object.defineProperty;var i=(l,s)=>d(l,"name",{value:s,configurable:!0});import"../rl/base.js";import{QTableBase as a}from"./q_learning.js";class u{static{i(this,"GeneticAlgorithm")}constructor(s,e){this._size=s,this._models=[];for(let t=0;t<s;t++)this._models.push(new e)}get models(){return this._models}get bestModel(){return this._models[0]}run(...s){for(let t=0;t<this._models.length;t++)this._models[t].run(...s);const e=this._models.map(t=>[t,t.score()]);e.sort((t,o)=>o[1]-t[1]),this._models=e.map(t=>t[0])}next(s=.001){const e=[];for(let t=0;t<this._size;t++)if(Math.random()<(this._size-t*2)/this._size)e.push(this._models[t]);else{const o=Math.floor(Math.random()*t);let r=Math.floor(Math.random()*(t-1));r>=o&&r++,e[t]=this._models[o].mix(this._models[r])}for(let t=0;t<e.length;t++)Math.random()<s&&(e[t]=e[t].mutation());this._models=e}}class n extends a{static{i(this,"GeneticPTable")}constructor(s,e=20){super(s,e),this._s=this._action_sizes.reduce((t,o)=>t*o,1);for(let t=0;t<this._table.length;t+=this._s){const o=Math.floor(Math.random()*this._s);this._table[t+o]=1}}copy(s){const e=s||new n(this._env,this.resolution);for(let t=0;t<this._tensor.length;t++)e._table[t]=this._table[t];return e}mutation(s){for(let e=0;e<this._table.length;e+=this._s)if(Math.random()<s){for(let o=0;o<this._s;o++)this._table[e+o]=0;const t=Math.floor(Math.random()*this._s);this._table[e+t]=1}}mix(s,e){for(let t=0;t<this._table.length;t+=this._s)if(Math.random()<e)for(let o=0;o<this._s;o++)this._table[t+o]=s._table[t+o]}}class _ extends a{static{i(this,"GeneticQTable")}constructor(s,e=20){super(s,e);for(let t=0;t<this._tensor.length;t++)this._tensor.value[t]=Math.random()*2-1}copy(s){const e=s||new _(this._env,this.resolution);for(let t=0;t<this._tensor.length;t++)e._table[t]=this._table[t];return e}mutation(s){for(let e=0;e<this._table.length;e++)Math.random()<s&&(this._table[e]=Math.random()*2-1)}mix(s,e){for(let t=0;t<this._table.length;t++)Math.random()<e&&(this._table[t]=s._table[t])}}class h{static{i(this,"GeneticAlgorithmAgent")}constructor(s,e=20,t=null){this._env=s,this._resolution=e,this._table=t||new n(s,e),this._total_reward=0,this._max_epoch=1e3}get total_reward(){return this._total_reward}reset(){this._total_reward=0}get_score(){return this._table.toArray()}get_action(s){return this._table.best_action(s)}run(s){let e=s.reset(this),t=0;for(;t++<this._max_epoch;){const o=this.get_action(e),{state:r,reward:m,done:c}=s.step(o,this);if(e=r,this._total_reward+=m,c)break}}mutation(){const s=this._table.copy();return s.mutation(.005),new h(this._env,this._resolution,s)}mix(s){const e=this._table.copy();return e.mix(s._table,.5),new h(this._env,this._resolution,e)}score(){return this._total_reward}}export default class b{static{i(this,"GeneticAlgorithmGeneration")}constructor(s,e=100,t=20){this._env=s,this._resolution=t,this._model=new u(e,function(){return new h(s,t)})}reset(){this._model.models.forEach(s=>s.reset())}get_score(){return this._model.bestModel.get_score()}top_agent(){return this._model.bestModel}run(){this.reset(),this._model.run(this._env)}next(s=.001){this._model.next(s)}}
