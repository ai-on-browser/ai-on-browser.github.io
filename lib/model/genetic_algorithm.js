import{QTableBase}from"./q_learning.js";class GeneticAlgorithm{constructor(t,e){this._size=t,this._models=[];for(let s=0;s<t;s++)this._models.push(new e)}get models(){return this._models}get bestModel(){return this._models[0]}run(...t){for(let e=0;e<this._models.length;e++)this._models[e].run(...t);const e=this._models.map((t=>[t,t.score()]));e.sort(((t,e)=>e[1]-t[1])),this._models=e.map((t=>t[0]))}next(t=.001){const e=[];for(let t=0;t<this._size;t++)if(Math.random()<(this._size-2*t)/this._size)e.push(this._models[t]);else{const s=Math.floor(Math.random()*t);let o=Math.floor(Math.random()*(t-1));o>=s&&o++,e[t]=this._models[s].mix(this._models[o])}for(let s=0;s<e.length;s++)Math.random()<t&&(e[s]=e[s].mutation());this._models=e}}class GeneticPTable extends QTableBase{constructor(t,e=20){super(t,e),this._s=this._action_sizes.reduce(((t,e)=>t*e),1);for(let t=0;t<this._table.length;t+=this._s){const e=Math.floor(Math.random()*this._s);this._table[t+e]=1}}copy(t){const e=t||new GeneticPTable(this._env,this.resolution);for(let t=0;t<this._tensor.length;t++)e._table[t]=this._table[t];return e}mutation(t){for(let e=0;e<this._table.length;e+=this._s)if(Math.random()<t){for(let t=0;t<this._s;t++)this._table[e+t]=0;const t=Math.floor(Math.random()*this._s);this._table[e+t]=1}}mix(t,e){for(let s=0;s<this._table.length;s+=this._s)if(Math.random()<e)for(let e=0;e<this._s;e++)this._table[s+e]=t._table[s+e]}}class GeneticQTable extends QTableBase{constructor(t,e=20){super(t,e);for(let t=0;t<this._tensor.length;t++)this._tensor.value[t]=2*Math.random()-1}copy(t){const e=t||new GeneticQTable(this._env,this.resolution);for(let t=0;t<this._tensor.length;t++)e._table[t]=this._table[t];return e}mutation(t){for(let e=0;e<this._table.length;e++)Math.random()<t&&(this._table[e]=2*Math.random()-1)}mix(t,e){for(let s=0;s<this._table.length;s++)Math.random()<e&&(this._table[s]=t._table[s])}}class GeneticAlgorithmAgent{constructor(t,e=20,s=null){this._env=t,this._resolution=e,this._table=s||new GeneticPTable(t,e),this._total_reward=0,this._max_epoch=1e3}get total_reward(){return this._total_reward}reset(){this._total_reward=0}get_score(){return this._table.toArray()}get_action(t){return this._table.best_action(t)}run(t){let e=t.reset(this),s=0;for(;s++<this._max_epoch;){const s=this.get_action(e),{state:o,reward:i,done:r}=t.step(s,this);if(e=o,this._total_reward+=i,r)break}}mutation(){const t=this._table.copy();return t.mutation(.005),new GeneticAlgorithmAgent(this._env,this._resolution,t)}mix(t){const e=this._table.copy();return e.mix(t._table,.5),new GeneticAlgorithmAgent(this._env,this._resolution,e)}score(){return this._total_reward}}export default class GeneticAlgorithmGeneration{constructor(t,e=100,s=20){this._env=t,this._resolution=s,this._model=new GeneticAlgorithm(e,(function(){return new GeneticAlgorithmAgent(t,s)}))}reset(){this._model.models.forEach((t=>t.reset()))}get_score(){return this._model.bestModel.get_score()}top_agent(){return this._model.bestModel}run(){this.reset(),this._model.run(this._env)}next(t=.001){this._model.next(t)}}