import Matrix from"../util/matrix.js";import{qt}from"./smirnov_grubbs.js";export default class GeneralizedESD{constructor(t,r){this._alpha=t,this._r=r}predict(t){const r=Matrix.fromArray(t),s=[],a=[],o=r.rows;for(let t=1;t<=this._r;t++){const t=Matrix.sub(r,r.mean(0));t.abs(),t.div(r.std(0));const o=t.max(1),e=o.argmax(0).toScaler();a.push(o.at(e,0)),r.remove(e),s.push(e)}for(let t=s.length-1;t>=0;t--)for(let r=t+1;r<s.length;r++)s[t]<=s[r]&&s[r]++;for(let t=1;t<=this._r;t++){const r=this._alpha/(2*(o-t+1)),e=qt(o-t-1,r),i=(o-t)*e/Math.sqrt((o-t-1+e**2)*(o-t+1));if(a[t-1]<=i){s.splice(t-1,this._r);break}}const e=Array(o).fill(!1);for(let t=0;t<s.length;t++)e[s[t]]=!0;return e}}