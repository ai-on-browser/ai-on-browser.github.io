import{Matrix}from"../util/math.js";export class LogisticRegression{constructor(){this._W=null,this._b=0}_output(t){let s=t.dot(this._W);return s.add(this._b),s}fit(t,s,i=1,r=.1,a=0,e=0){t=Matrix.fromArray(t),s=Matrix.fromArray(s),this._W||(this._W=Matrix.randn(t.cols,1));const h=t.rows;for(let o=0;o<i;o++){const i=this._output(t);i.sub(s);let o=t.tDot(i);o.div(h),(a>0||e>0)&&o.map((t=>t+t*e+Math.sign(t)*a)),o.mult(r),this._W.sub(o);let l=i.mean();(a>0||e>0)&&(l+=l*e+Math.sign(l)*a),this._b-=l*r}}predict(t){let s=Matrix.fromArray(t).dot(this._W);return s.add(this._b),s.value.map((t=>t>=0?1:-1))}}export class MultinomialLogisticRegression{constructor(t){this._classes=t,this._W=null,this._b=null}_output(t){let s=t.dot(this._W);return s.add(this._b),s.map(Math.exp),s.div(s.sum(1)),s}fit(t,s,i=1,r=.1,a=0,e=0){const h=t.length;this._classes||(this._classes=[...new Set(s)]);const o=Matrix.fromArray(t),l=new Matrix(h,this._classes.length);s.forEach(((t,s)=>l.set(s,this._classes.indexOf(t),1))),this._W||(this._W=Matrix.randn(o.cols,this._classes.length),this._b=Matrix.randn(1,this._classes.length));for(let t=0;t<i;t++){let t=this._output(o);t.sub(l);const s=o.tDot(t);s.div(h),(a>0||e>0)&&s.map((t=>t+t*e+Math.sign(t)*a)),s.mult(r),this._W.sub(s);const i=t.mean(0);(a>0||e>0)&&s.map((t=>t+t*e+Math.sign(t)*a)),i.mult(r),this._b.sub(i)}}predict(t){let s=Matrix.fromArray(t).dot(this._W);return s.add(this._b),s.argmax(1).value.map((t=>this._classes[t]))}}