export default class RDF{constructor(t=1){this._r=t}_distance(t,r){return Math.sqrt(t.reduce(((t,e,s)=>t+(e-r[s])**2),0))}predict(t){const r=t.length,e=[];for(let s=0;s<r;s++){e[s]=[],e[s][s]={d:0,i:s};for(let r=0;r<s;r++){const o=this._distance(t[s],t[r]);e[s][r]={d:o,i:r},e[r][s]={d:o,i:s}}}const s=[];for(let t=0;t<r;t++){e[t].sort(((t,r)=>t.d-r.d)),s[t]=0;for(let o=0;o<r;o++)e[t][o].d<this._r&&s[t]++}const o=[];for(let t=0;t<r;t++){o[t]=0;for(let d=0;d<r;d++)e[t][d].d<this._r&&(o[t]+=s[e[t][d].i]);o[t]/=s[t]**2}return o}}