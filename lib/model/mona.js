export default class MONA{constructor(){}get size(){return this._tree.leafs.length}init(t){this._x=t,this._tree={idx:this._x.map(((t,e)=>e)),children:[],get leafs(){return 0===this.children.length?[this]:this.children.reduce(((t,e)=>t.concat(e.leafs)),[])}}}fit(){const t=this._tree.leafs,e=this._x[0].length;for(const i of t){let t=-1/0,s=-1;for(let h=0;h<e;h++){if(i.idx.every((t=>this._x[t][h]===this._x[i.idx[0]][h])))continue;let r=0;for(let t=0;t<e;t++){if(h===t)continue;let e=0,s=0,n=0,l=0;for(const r of i.idx)1===this._x[r][h]&&1===this._x[r][t]?e++:1===this._x[r][h]&&0===this._x[r][t]?s++:0===this._x[r][h]&&1===this._x[r][t]?n++:0===this._x[r][h]&&0===this._x[r][t]&&l++;r+=e*l-s*n}t<r&&(t=r,s=h)}if(s<0)continue;const h=i.idx.filter((t=>0===this._x[t][s])),r=i.idx.filter((t=>1===this._x[t][s]));0!==h.length&&0!==r.length&&(i.feature=s,i.children.push({idx:h,children:[],get leafs(){return 0===this.children.length?[this]:this.children.reduce(((t,e)=>t.concat(e.leafs)),[])}},{idx:r,children:[],get leafs(){return 0===this.children.length?[this]:this.children.reduce(((t,e)=>t.concat(e.leafs)),[])}}))}}predict(){const t=[],e=this._tree.leafs;for(let i=0;i<e.length;i++)for(const s of e[i].idx)t[s]=i;return t}}