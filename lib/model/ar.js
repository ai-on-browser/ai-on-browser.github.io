var f=Object.defineProperty;var c=(r,e)=>f(r,"name",{value:e,configurable:!0});import p from"../util/matrix.js";export default class m{static{c(this,"AR")}constructor(e,o="lsm"){this._p=e,this._method=o}fit(e){this._method==="lsm"?this._lsm(e):this._method==="yuleWalker"?this._yuleWalker(e):this._method==="levinson"?this._levinson(e):this._method==="householder"&&this._householder(e)}_lsm(e){const o=e.length,l=new p(o-this._p,1,e.slice(this._p)),h=new p(o-this._p,this._p);for(let i=0;i<o-this._p;i++)for(let t=0;t<this._p;t++)h.set(i,t,e[i+this._p-1-t]);const _=h.tDot(h);this._phi=_.solve(h.t).dot(l)}_yuleWalker(e){const o=e.length,l=new p(this._p,1),h=new p(this._p,this._p),_=e.reduce((i,t)=>i+t,0)/o;for(let i=0;i<=this._p;i++){let t=0;for(let s=0;s<o-i;s++)t+=(e[s]-_)*(e[s+i]-_);if(t/=o-i,i>0&&l.set(i-1,0,t),i<this._p)for(let s=0;s<this._p-i;s++)h.set(s,i+s,t),h.set(i+s,s,t)}this._phi=h.solve(l),this._variance=h.at(0,0)-this._phi.tDot(l).toScaler()}_levinson(e){const o=e.length,l=[],h=e.reduce((t,s)=>t+s,0)/o;for(let t=0;t<=this._p;t++){let s=0;for(let n=0;n<o-t;n++)s+=(e[n]-h)*(e[n+t]-h);s/=o-t,l[t]=s}const _=[];_[0]=l[0];let i=[];for(let t=0;t<this._p;t++){const s=[];s[t]=l[t+1];for(let n=0;n<t;n++)s[t]-=i[n]*l[t-n];s[t]/=_[t];for(let n=0;n<t;n++)s[n]=i[n]-s[t]*i[t-n-1];_[t+1]=_[t]*(1-s[t]**2),i=s}this._phi=p.fromArray(i)}_householder(e){const o=e.length,l=new p(o-this._p,this._p+1);for(let t=0;t<o-this._p;t++){for(let s=0;s<this._p;s++)l.set(t,s,e[t+this._p-1-s]);l.set(t,this._p,e[t+this._p])}const[,h]=l.qr(),_=h.block(0,0,this._p,this._p),i=h.block(0,this._p,this._p,this._p+1);this._phi=_.solveUpperTriangular(i)}predict(e,o){const l=[],h=e.slice(e.length-this._p);h.reverse();for(let _=0;_<o;_++){const t=new p(1,this._p,h).dot(this._phi).toScaler();l.push(t),h.unshift(t),h.pop()}return l}}
