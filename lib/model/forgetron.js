var p=Object.defineProperty;var u=(f,h)=>p(f,"name",{value:h,configurable:!0});export default class k{static{u(this,"Forgetron")}constructor(h,e="gaussian"){if(this._b=h,typeof e=="function")this._kernel=e;else switch(e){case"gaussian":this._s=1,this._kernel=(s,_)=>Math.exp(-(s.reduce((n,t,i)=>n+(t-_[i])**2,0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(s,_)=>(1+s.reduce((n,t,i)=>n+t*_[i]))**this._d;break}this._i=[],this._q=0,this._m=0,this._sigma=[]}fit(h,e){for(let s=0;s<h.length;s++){let _=0;for(let t=0;t<this._i.length;t++){const i=this._i[t];_+=this._sigma[t]*i.y*this._kernel(h[s],i.x)}if((_<0?-1:1)*e[s]<=0)if(this._m+=1,this._i.push({x:h[s],y:e[s]}),this._i.length<this._b)this._sigma.push(1);else{const t=this._i[0],i=this._sigma[0];let c=e[s]*this._kernel(t.x,h[s]);for(let o=0;o<this._i.length;o++){const m=this._i[o];c+=m.y*this._kernel(t.x,m.x)}c*=t.y;const l=i**2-2*i*c,r=2*i,g=this._q-15/32*this._m;let a=0;l===0?a=Math.max(0,Math.min(1,-g/r)):l>0?a=(-r+Math.sqrt(r**2-4*l*g))/(2*l):a=(-r-Math.sqrt(r**2-4*l*g))/(2*l),isNaN(a)&&(a=1),this._sigma.push(1),this._sigma=this._sigma.map(o=>o*a),this._q+=(i*a)**2+2*i*a*(1-a*c),this._i.shift(),this._sigma.shift()}}}predict(h){const e=[];for(let s=0;s<h.length;s++){let _=0;for(let n=0;n<this._i.length;n++){const t=this._i[n];_+=this._sigma[n]*t.y*this._kernel(h[s],t.x)}e[s]=_<0?-1:1}return e}}
