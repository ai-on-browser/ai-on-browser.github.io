export default class Forgetron{constructor(t,s="gaussian"){if(this._b=t,"function"==typeof s)this._kernel=s;else switch(s){case"gaussian":this._s=1,this._kernel=(t,s)=>Math.exp(-(t.reduce(((t,i,h)=>t+(i-s[h])**2),0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(t,s)=>(1+t.reduce(((t,i,h)=>t+i*s[h])))**this._d}this._i=[],this._q=0,this._m=0,this._sigma=[]}fit(t,s){for(let i=0;i<t.length;i++){let h=0;for(let s=0;s<this._i.length;s++){const e=this._i[s];h+=this._sigma[s]*e.y*this._kernel(t[i],e.x)}if((h<0?-1:1)*s[i]<=0)if(this._m+=1,this._i.push({x:t[i],y:s[i]}),this._i.length<this._b)this._sigma.push(1);else{const h=this._i[0],e=this._sigma[0];let _=s[i]*this._kernel(h.x,t[i]);for(let t=0;t<this._i.length;t++){const s=this._i[t];_+=s.y*this._kernel(h.x,s.x)}_*=h.y;const l=e**2-2*e*_,n=2*e,a=this._q-15/32*this._m;let r=0;r=0===l?Math.max(0,Math.min(1,-a/n)):l>0?(-n+Math.sqrt(n**2-4*l*a))/(2*l):(-n-Math.sqrt(n**2-4*l*a))/(2*l),isNaN(r)&&(r=1),this._sigma.push(1),this._sigma=this._sigma.map((t=>t*r)),this._q+=(e*r)**2+2*e*r*(1-r*_),this._i.shift(),this._sigma.shift()}}}predict(t){const s=[];for(let i=0;i<t.length;i++){let h=0;for(let s=0;s<this._i.length;s++){const e=this._i[s];h+=this._sigma[s]*e.y*this._kernel(t[i],e.x)}s[i]=h<0?-1:1}return s}}