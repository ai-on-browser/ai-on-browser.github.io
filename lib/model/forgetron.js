var u=Object.defineProperty;var p=(g,e)=>u(g,"name",{value:e,configurable:!0});export default class y{static{p(this,"Forgetron")}constructor(e,t="gaussian"){if(this._b=e,typeof t=="function")this._kernel=t;else switch(typeof t=="string"&&(t={name:t}),t.name){case"gaussian":this._s=t.s??1,this._kernel=(s,_)=>Math.exp(-(s.reduce((a,i,h)=>a+(i-_[h])**2,0)**2)/this._s**2);break;case"polynomial":this._d=t.d??2,this._kernel=(s,_)=>(1+s.reduce((a,i,h)=>a+i*_[h]))**this._d;break}this._i=[],this._q=0,this._m=0,this._sigma=[]}fit(e,t){for(let s=0;s<e.length;s++){let _=0;for(let i=0;i<this._i.length;i++){const h=this._i[i];_+=this._sigma[i]*h.y*this._kernel(e[s],h.x)}if((_<0?-1:1)*t[s]<=0)if(this._m+=1,this._i.push({x:e[s],y:t[s]}),this._i.length<this._b)this._sigma.push(1);else{const i=this._i[0],h=this._sigma[0];let c=t[s]*this._kernel(i.x,e[s]);for(let r=0;r<this._i.length;r++){const m=this._i[r];c+=m.y*this._kernel(i.x,m.x)}c*=i.y;const o=h**2-2*h*c,l=2*h,f=this._q-15/32*this._m;let n=0;o===0?n=Math.max(0,Math.min(1,-f/l)):o>0?n=(-l+Math.sqrt(l**2-4*o*f))/(2*o):n=(-l-Math.sqrt(l**2-4*o*f))/(2*o),isNaN(n)&&(n=1),this._sigma.push(1),this._sigma=this._sigma.map(r=>r*n),this._q+=(h*n)**2+2*h*n*(1-n*c),this._i.shift(),this._sigma.shift()}}}predict(e){const t=[];for(let s=0;s<e.length;s++){let _=0;for(let a=0;a<this._i.length;a++){const i=this._i[a];_+=this._sigma[a]*i.y*this._kernel(e[s],i.x)}t[s]=_<0?-1:1}return t}}
