export default class Forgetron{constructor(t,s="gaussian"){if(this._b=t,"function"==typeof s)this._kernel=s;else switch(s){case"gaussian":this._s=1,this._kernel=(t,s)=>Math.exp(-(t.reduce(((t,i,h)=>t+(i-s[h])**2),0)**2)/this._s**2);break;case"polynomial":this._d=2,this._kernel=(t,s)=>(1+t.reduce(((t,i,h)=>t+i*s[h])))**this._d}}init(t,s){this._x=t,this._y=s,this._i=[],this._q=0,this._m=0,this._sigma=[]}fit(){for(let t=0;t<this._x.length;t++){let s=0;for(let i=0;i<this._i.length;i++){const h=this._i[i];s+=this._sigma[i]*this._y[h]*this._kernel(this._x[t],this._x[h])}if((s<0?-1:1)*this._y[t]<=0)if(this._m+=1,this._i.push(t),this._i.length<this._b)this._sigma.push(1);else{const s=this._i[0],i=this._sigma[0];let h=this._y[t]*this._kernel(this._x[s],this._x[t]);for(let t=0;t<this._i.length;t++){const i=this._i[t];h+=this._y[i]*this._kernel(this._x[s],this._x[i])}h*=this._y[s];const _=i**2-2*i*h,e=2*i,n=this._q-15/32*this._m;let l=0;l=0===_?Math.max(0,Math.min(1,-n/e)):_>0?(-e+Math.sqrt(e**2-4*_*n))/(2*_):(-e-Math.sqrt(e**2-4*_*n))/(2*_),isNaN(l)&&(l=1),this._sigma.push(1),this._sigma=this._sigma.map((t=>t*l)),this._q+=(i*l)**2+2*i*l*(1-l*h),this._i.shift(),this._sigma.shift()}}}predict(t){const s=[];for(let i=0;i<t.length;i++){let h=0;for(let s=0;s<this._i.length;s++){const _=this._i[s];h+=this._sigma[s]*this._y[_]*this._kernel(t[i],this._x[_])}s[i]=h<0?-1:1}return s}}