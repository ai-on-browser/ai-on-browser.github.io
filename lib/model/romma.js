import{Matrix}from"../util/math.js";export class ROMMA{constructor(){this._w=null}_mistake(t,s){return t*s<=0}init(t,s){this._x=Matrix.fromArray(t),this._shift=this._x.mean(0),this._x.sub(this._shift),this._y=s,this._w=Matrix.zeros(this._x.cols,1)}update(t,s){const i=this._w.tDot(t).value[0];if(!this._mistake(i,s))return;const r=this._w.norm()**2;if(0===r)return void(this._w=t.copyMult(s));const h=t.norm()**2*r,o=(h-s*i)/(h-i**2),e=r*(s-i)/(h-i**2),_=this._w.copyMult(o);_.add(t.copyMult(e)),this._w=_}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){const s=Matrix.fromArray(t);s.sub(this._shift);return s.dot(this._w).value.map((t=>t<=0?-1:1))}}export class AggressiveROMMA extends ROMMA{_mistake(t,s){return t*s<1}}