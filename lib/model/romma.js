var l=Object.defineProperty;var o=(c,t)=>l(c,"name",{value:t,configurable:!0});export class ROMMA{static{o(this,"ROMMA")}constructor(){this._w=null,this._w0=0}_mistake(t,i){return t*i<=0}update(t,i){const s=this._w.reduce((e,r,u)=>e+r*t[u],this._w0);if(!this._mistake(s,i))return;const h=this._w.reduce((e,r)=>e+r**2,this._w0**2);if(h===0){this._w=t.map(e=>e*i),this._w0=i;return}const n=(t.reduce((e,r)=>e+r**2,0)+1)*h,_=(n-i*s)/(n-s**2),w=h*(i-s)/(n-s**2);this._w=this._w.map((e,r)=>e*_+t[r]*w),this._w0=this._w0*_+w}fit(t,i){this._w||(this._w=Array(t[0].length).fill(0),this._w0=0);for(let s=0;s<t.length;s++)this.update(t[s],i[s])}predict(t){const i=[];for(let s=0;s<t.length;s++){const h=t[s].reduce((n,_,w)=>n+this._w[w]*_,this._w0);i[s]=h<=0?-1:1}return i}}export class AggressiveROMMA extends ROMMA{static{o(this,"AggressiveROMMA")}_mistake(t,i){return t*i<1}}
