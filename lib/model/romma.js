import Matrix from"../util/matrix.js";export class ROMMA{constructor(){this._w=null}_mistake(t,i){return t*i<=0}init(t,i){this._x=Matrix.fromArray(t),this._y=i,this._w=Matrix.zeros(this._x.cols,1),this._w0=0}update(t,i){const s=this._w.tDot(t).toScaler()+this._w0;if(!this._mistake(s,i))return;const r=this._w.norm()**2+this._w0**2;if(0===r)return this._w=Matrix.mult(t,i),void(this._w0=i);const _=(t.norm()**2+1)*r,h=(_-i*s)/(_-s**2),o=r*(i-s)/(_-s**2),a=Matrix.mult(this._w,h);a.add(Matrix.mult(t,o)),this._w=a,this._w0=this._w0*h+o}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){return Matrix.fromArray(t).dot(this._w).value.map((t=>t+this._w0<=0?-1:1))}}export class AggressiveROMMA extends ROMMA{_mistake(t,i){return t*i<1}}