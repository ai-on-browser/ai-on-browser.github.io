import Matrix from"../util/matrix.js";export class ROMMA{constructor(){this._w=null}_mistake(t,i){return t*i<=0}init(t,i){this._x=Matrix.fromArray(t),this._shift=this._x.mean(0),this._x.sub(this._shift),this._y=i,this._w=Matrix.zeros(this._x.cols,1)}update(t,i){const s=this._w.tDot(t).toScaler();if(!this._mistake(s,i))return;const r=this._w.norm()**2;if(0===r)return void(this._w=Matrix.mult(t,i));const h=t.norm()**2*r,o=(h-i*s)/(h-s**2),a=r*(i-s)/(h-s**2),e=Matrix.mult(this._w,o);e.add(Matrix.mult(t,a)),this._w=e}fit(){for(let t=0;t<this._x.rows;t++)this.update(this._x.row(t).t,this._y[t])}predict(t){const i=Matrix.fromArray(t);i.sub(this._shift);return i.dot(this._w).value.map((t=>t<=0?-1:1))}}export class AggressiveROMMA extends ROMMA{_mistake(t,i){return t*i<1}}