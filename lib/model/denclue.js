var c=Object.defineProperty;var o=(a,i)=>c(a,"name",{value:i,configurable:!0});export default class g{static{o(this,"DENCLUE")}constructor(i,h=1,t="gaussian"){this._version=h,this._h=i,this._delta=.01,this._ignore_p=.2,this._xi=1e-12,typeof t=="function"?this._kernel=t:t==="gaussian"&&(this._kernel=s=>{const e=s.length;return Math.exp(-s.reduce((_,r)=>_+r**2,0)/2)/(2*Math.PI)**(e/2)})}get size(){return new Set(this.predict()).size}init(i){if(this._datas=i,this._x=i.map(h=>h.concat()),this._version===2){const h=this._x.length;if(this._ignore_p>0){this._k=[];for(let t=0;t<h;this._k[t++]=[]);for(let t=0;t<h;t++){this._k[t][t]={k:1/0,idx:t};for(let s=t+1;s<h;s++){const e=this._kernel(this._x[t].map((_,r)=>(_-this._x[s][r])/this._h));this._k[t][s]={k:e,idx:s},this._k[s][t]={k:e,idx:t}}this._k[t].sort((s,e)=>s.k-e.k),this._k[t].forEach((s,e)=>{e<this._ignore_p*h&&(s.low=!0)}),this._k[t].sort((s,e)=>s.idx-e.idx)}}this._radius=Array(this._x.length);for(let t=0;t<h;t++)this._radius[t]=[]}this._xi>0&&(this._probs=this._x.map(h=>this._p(h)))}_p(i){let h=0;for(let t=0;t<this._datas.length;t++)h+=this._kernel(this._datas[t].map((s,e)=>(i[e]-s)/this._h));return h/(this._datas.length*this._h**i.length)}_dp(i){let h=Array(i.length).fill(0);for(let t=0;t<this._datas.length;t++){const s=this._kernel(this._datas[t].map((e,_)=>(i[_]-e)/this._h));for(let e=0;e<h.length;e++)h[e]+=s*(this._datas[t][e]-i[e])}return h.map(t=>t/(this._datas.length*h.length**(i.length+2)))}fit(){if(this._version===1)for(let i=0;i<this._x.length;i++){const h=this._dp(this._x[i]),t=Math.sqrt(h.reduce((s,e)=>s+e**2,0));for(let s=0;s<this._x[i].length;s++)this._x[i][s]+=this._delta*h[s]/t}else for(let i=0;i<this._x.length;i++){const h=this._x[i];let t=0;const s=Array(h.length).fill(0);for(let _=0;_<this._datas.length;_++){let r;this._k&&this._k[i][_].low?r=this._k[i][_].k:r=this._kernel(this._datas[_].map((n,l)=>(h[l]-n)/this._h));for(let n=0;n<h.length;n++)s[n]+=r*this._datas[_][n];t+=r}for(let _=0;_<s.length;_++)s[_]/=t;const e=Math.sqrt(h.reduce((_,r,n)=>_+(r-s[n])**2,0));this._x[i]=s,e>1e-8&&this._radius[i].push(e)}}predict(){const i=[];let h=-1;for(let t=0;t<this._x.length;t++){if(this._probs&&this._probs[t]<this._xi){i[t]=-1;continue}const s=this._version===1?this._delta:this._radius[t].reduce((r,n)=>r+n,0);let e=-1,_=1/0;for(let r=0;r<t;r++){const n=Math.sqrt(this._x[r].reduce((l,d,f)=>l+(d-this._x[t][f])**2,0));n<2*s&&n<_&&(e=r,_=n)}e<0?i[t]=++h:i[t]=i[e]}return i}}
