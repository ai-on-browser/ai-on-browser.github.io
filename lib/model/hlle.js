import Matrix from"../util/matrix.js";export default class HLLE{constructor(t=1){this._k=t}predict(t,o=0){const s=(t=Matrix.fromArray(t)).cols,e=t.rows,r=[],i=[];for(let t=0;t<e;r[t++]=[]);for(let o=0;o<e;o++){for(let i=o+1;i<e;i++){let e=0;for(let r=0;r<s;r++)e+=(t.at(o,r)-t.at(i,r))**2;r[o][i]=r[i][o]=e}const l=[];for(let t=0;t<e;t++){if(t===o)continue;const s=r[o][t];if(l.length<this._k||s<l[this._k-1].dt){l.length===this._k&&l.pop(),l.push({dt:s,idx:t});for(let t=l.length-1;t>0;t--)l[t].dt<l[t-1].dt&&([l[t],l[t-1]]=[l[t-1],l[t]])}}i.push(l)}const l=Matrix.eye(e,e);for(let s=0;s<e;s++){const e=t.row(i[s].map((t=>t.idx)));e.sub(e.mean(0));const[r]=e.svd(),c=Matrix.ones(this._k,1+o+o*(o+1)/2);c.set(0,1,r.slice(0,o,1));let n=1+o;for(let t=0;t<o;t++)c.set(0,n,r.col(t).copyMult(r.slice(t,o,1))),n+=o-t;const[f]=c.qr(),a=f.slice(o+1,null,1);a.div(a.sum(0));const d=a.dot(a.t);for(let t=0;t<this._k;t++)for(let o=0;o<this._k;o++)l.addAt(i[s][t].idx,i[s][o].idx,d.at(t,o))}const c=l.eigenVectors();return c.flip(1),c.slice(1,o+1,1).toArray()}}